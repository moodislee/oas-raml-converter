#%RAML 1.0
title: YouTube Data
version: v3
baseUri: 'https://www.googleapis.com/youtube/v3'
protocols:
  - HTTPS
description: 'Supports core YouTube features, such as uploading videos, creating and managing playlists, searching for content, and much more.'
(oas-tags-definition):
  - name: activities
  - name: captions
  - name: channelBanners
  - name: channelSections
  - name: channels
  - name: commentThreads
  - name: comments
  - name: fanFundingEvents
  - name: guideCategories
  - name: i18nLanguages
  - name: i18nRegions
  - name: liveBroadcasts
  - name: liveChatBans
  - name: liveChatMessages
  - name: liveChatModerators
  - name: liveStreams
  - name: playlistItems
  - name: playlists
  - name: search
  - name: sponsors
  - name: subscriptions
  - name: thumbnails
  - name: videoAbuseReportReasons
  - name: videoCategories
  - name: videos
  - name: watermarks
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.youtube.com_yt_brand_media_image_YouTube-logo-full_color.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): youtube
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/youtube/v3'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/youtube'
        - 'https://www.googleapis.com/auth/youtube.force-ssl'
        - 'https://www.googleapis.com/auth/youtube.readonly'
        - 'https://www.googleapis.com/auth/youtube.upload'
        - 'https://www.googleapis.com/auth/youtubepartner'
        - 'https://www.googleapis.com/auth/youtubepartner-channel-audit'
    description: Oauth 2.0 authentication
/liveChat:
  displayName: liveChat
  /bans:
    displayName: bans
    post:
      displayName: youtube.liveChatBans.insert
      description: Adds a new ban to the chat.
      body:
        application/json:
          type: LiveChatBan
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: LiveChatBan
          description: Successful response
      queryParameters:
        part:
          description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response returns. Set the parameter value to snippet.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatBans
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    delete:
      displayName: youtube.liveChatBans.delete
      description: Removes a chat ban.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter identifies the chat ban to remove. The value uniquely identifies both the ban and the chat.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatBans
  /messages:
    displayName: messages
    delete:
      displayName: youtube.liveChatMessages.delete
      description: Deletes a chat message.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies the YouTube chat message ID of the resource that is being deleted.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatMessages
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: youtube.liveChatMessages.list
      description: Lists live chat messages for a specific chat.
      responses:
        '200':
          body:
            application/json:
              type: LiveChatMessageListResponse
          description: Successful response
      queryParameters:
        liveChatId:
          description: The liveChatId parameter specifies the ID of the chat whose messages will be returned.
          required: true
          type: string
        part:
          description: The part parameter specifies the liveChatComment resource parts that the API response will include. Supported values are id and snippet.
          required: true
          type: string
        hl:
          description: |-
            The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method.

            If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
          type: string
        maxResults:
          default: 500
          description: The maxResults parameter specifies the maximum number of messages that should be returned in the result set.
          maximum: 2000
          minimum: 200
          type: integer
        pageToken:
          description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identify other pages that could be retrieved.'
          type: string
        profileImageSize:
          description: 'The profileImageSize parameter specifies the size of the user profile pictures that should be returned in the result set. Default: 88.'
          maximum: 720
          minimum: 16
          type: integer
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.readonly'
      (oas-tags):
        - liveChatMessages
    post:
      displayName: youtube.liveChatMessages.insert
      description: Adds a message to a live chat.
      body:
        application/json:
          type: LiveChatMessage
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: LiveChatMessage
          description: Successful response
      queryParameters:
        part:
          description: The part parameter serves two purposes. It identifies the properties that the write operation will set as well as the properties that the API response will include. Set the parameter value to snippet.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatMessages
  /moderators:
    displayName: moderators
    delete:
      displayName: youtube.liveChatModerators.delete
      description: Removes a chat moderator.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter identifies the chat moderator to remove. The value uniquely identifies both the moderator and the chat.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatModerators
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: youtube.liveChatModerators.list
      description: Lists moderators for a live chat.
      responses:
        '200':
          body:
            application/json:
              type: LiveChatModeratorListResponse
          description: Successful response
      queryParameters:
        liveChatId:
          description: The liveChatId parameter specifies the YouTube live chat for which the API should return moderators.
          required: true
          type: string
        part:
          description: The part parameter specifies the liveChatModerator resource parts that the API response will include. Supported values are id and snippet.
          required: true
          type: string
        maxResults:
          default: 5
          description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
          maximum: 50
          minimum: 0
          type: integer
        pageToken:
          description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.readonly'
      (oas-tags):
        - liveChatModerators
    post:
      displayName: youtube.liveChatModerators.insert
      description: Adds a new moderator for the chat.
      body:
        application/json:
          type: LiveChatModerator
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: LiveChatModerator
          description: Successful response
      queryParameters:
        part:
          description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response returns. Set the parameter value to snippet.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveChatModerators
/watermarks:
  displayName: watermarks
  /unset:
    displayName: unset
    post:
      displayName: youtube.watermarks.unset
      description: Deletes a channel's watermark image.
      responses:
        '200':
          description: Successful response
      queryParameters:
        channelId:
          description: The channelId parameter specifies the YouTube channel ID for which the watermark is being unset.
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - watermarks
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /set:
    displayName: set
    post:
      displayName: youtube.watermarks.set
      description: Uploads a watermark image to YouTube and sets it for a channel.
      body:
        application/json:
          type: InvideoBranding
          (oas-body-name): body
      responses:
        '200':
          description: Successful response
      queryParameters:
        channelId:
          description: The channelId parameter specifies the YouTube channel ID for which the watermark is being provided.
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - watermarks
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/activities:
  displayName: activities
  get:
    displayName: youtube.activities.list
    description: 'Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel, events associated with the user''s subscriptions and Google+ friends, or the YouTube home page feed, which is customized for each user.'
    responses:
      '200':
        body:
          application/json:
            type: ActivityListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.
        required: true
        type: string
      channelId:
        description: The channelId parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities.
        type: string
      home:
        description: Set this parameter's value to true to retrieve the activity feed that displays on the YouTube home page for the currently authenticated user.
        type: boolean
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: Set this parameter's value to true to retrieve a feed of the authenticated user's activities.
        type: boolean
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
      publishedAfter:
        description: 'The publishedAfter parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        type: string
      publishedBefore:
        description: 'The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        type: string
      regionCode:
        description: The regionCode parameter instructs the API to return results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code. YouTube uses this value when the authorized user's previous activity on YouTube does not provide enough information to generate the activity feed.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - activities
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: youtube.activities.insert
    description: |-
      Posts a bulletin for a specific channel. (The user submitting the request must be authorized to act on the channel's behalf.)

      Note: Even though an activity resource can contain information about actions like a user rating a video or marking a video as a favorite, you need to use other API methods to generate those activity resources. For example, you would use the API's videos.rate() method to rate a video and the playlistItems.insert() method to mark a video as a favorite.
    body:
      application/json:
        type: Activity
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Activity
        description: Successful response
    queryParameters:
      part:
        description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - activities
/captions:
  displayName: captions
  delete:
    displayName: youtube.captions.delete
    description: Deletes a specified caption track.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: The id parameter identifies the caption track that is being deleted. The value is a caption track ID as identified by the id property in a caption resource.
        required: true
        type: string
      onBehalfOf:
        description: ID of the Google+ Page for the channel that the request is be on behalf of
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - captions
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: youtube.captions.insert
    description: Uploads a caption track.
    body:
      application/json:
        type: Caption
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Caption
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the caption resource parts that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      onBehalfOf:
        description: ID of the Google+ Page for the channel that the request is be on behalf of
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      sync:
        description: |-
          The sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true, YouTube will disregard any time codes that are in the uploaded caption file and generate new time codes for the captions.

          You should set the sync parameter to true if you are uploading a transcript, which has no time codes, or if you suspect the time codes in your file are incorrect and want YouTube to try to fix them.
        type: boolean
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - captions
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: The id parameter identifies the caption track that is being retrieved. The value is a caption track ID as identified by the id property in a caption resource.
        required: true
        type: string
    get:
      displayName: youtube.captions.download
      description: Downloads a caption track. The caption track is returned in its original format unless the request specifies a value for the tfmt parameter and in its original language unless the request specifies a value for the tlang parameter.
      responses:
        '200':
          description: Successful response
      queryParameters:
        onBehalfOf:
          description: ID of the Google+ Page for the channel that the request is be on behalf of
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
        tfmt:
          description: 'The tfmt parameter specifies that the caption track should be returned in a specific format. If the parameter is not included in the request, the track is returned in its original format.'
          enum:
            - sbv
            - scc
            - srt
            - ttml
            - vtt
          type: string
        tlang:
          description: 'The tlang parameter specifies that the API response should return a translation of the specified caption track. The parameter value is an ISO 639-1 two-letter language code that identifies the desired caption language. The translation is generated by using machine translation, such as Google Translate.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - captions
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  get:
    displayName: youtube.captions.list
    description: Returns a list of caption tracks that are associated with a specified video. Note that the API response does not contain the actual captions and that the captions.download method provides the ability to retrieve a caption track.
    responses:
      '200':
        body:
          application/json:
            type: CaptionListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies a comma-separated list of one or more caption resource parts that the API response will include. The part names that you can include in the parameter value are id and snippet.
        required: true
        type: string
      videoId:
        description: The videoId parameter specifies the YouTube video ID of the video for which the API should return caption tracks.
        required: true
        type: string
      id:
        description: The id parameter specifies a comma-separated list of IDs that identify the caption resources that should be retrieved. Each ID must identify a caption track associated with the specified video.
        type: string
      onBehalfOf:
        description: ID of the Google+ Page for the channel that the request is on behalf of.
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - captions
  put:
    displayName: youtube.captions.update
    description: 'Updates a caption track. When updating a caption track, you can change the track''s draft status, upload a new caption file for the track, or both.'
    body:
      application/json:
        type: Caption
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Caption
        description: Successful response
    queryParameters:
      part:
        description: 'The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include. Set the property value to snippet if you are updating the track''s draft status. Otherwise, set the property value to id.'
        required: true
        type: string
      onBehalfOf:
        description: ID of the Google+ Page for the channel that the request is be on behalf of
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      sync:
        description: |-
          Note: The API server only processes the parameter value if the request contains an updated caption file.

          The sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true, YouTube will automatically synchronize the caption track with the audio track.
        type: boolean
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - captions
/channelSections:
  displayName: channelSections
  delete:
    displayName: youtube.channelSections.delete
    description: Deletes a channelSection.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: 'The id parameter specifies the YouTube channelSection ID for the resource that is being deleted. In a channelSection resource, the id property specifies the YouTube channelSection ID.'
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - channelSections
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: youtube.channelSections.insert
    description: Adds a channelSection for the authenticated user's channel.
    body:
      application/json:
        type: ChannelSection
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: ChannelSection
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part names that you can include in the parameter value are snippet and contentDetails.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - channelSections
  put:
    displayName: youtube.channelSections.update
    description: Update a channelSection.
    body:
      application/json:
        type: ChannelSection
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: ChannelSection
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part names that you can include in the parameter value are snippet and contentDetails.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - channelSections
  get:
    displayName: youtube.channelSections.list
    description: Returns channelSection resources that match the API request criteria.
    responses:
      '200':
        body:
          application/json:
            type: ChannelSectionListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the channelSection. If you set part=snippet, the API response will also contain all of those nested properties.
        required: true
        type: string
      channelId:
        description: The channelId parameter specifies a YouTube channel ID. The API will only return that channel's channelSections.
        type: string
      hl:
        description: 'The hl parameter indicates that the snippet.localized property values in the returned channelSection resources should be in the specified language if localized values for that language are available. For example, if the API request specifies hl=de, the snippet.localized properties in the API response will contain German titles if German titles are available. Channel owners can provide localized channel section titles using either the channelSections.insert or channelSections.update method.'
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube channelSection ID(s) for the resource(s) that are being retrieved. In a channelSection resource, the id property specifies the YouTube channelSection ID.'
        type: string
      mine:
        description: Set this parameter's value to true to retrieve a feed of the authenticated user's channelSections.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - channelSections
/liveStreams:
  displayName: liveStreams
  delete:
    displayName: youtube.liveStreams.delete
    description: Deletes a video stream.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: The id parameter specifies the YouTube live stream ID for the resource that is being deleted.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveStreams
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  get:
    displayName: youtube.liveStreams.list
    description: Returns a list of video streams that match the API request parameters.
    responses:
      '200':
        body:
          application/json:
            type: LiveStreamListResponse
        description: Successful response
    queryParameters:
      part:
        description: 'The part parameter specifies a comma-separated list of one or more liveStream resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, cdn, and status.'
        required: true
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of YouTube stream IDs that identify the streams being retrieved. In a liveStream resource, the id property specifies the stream''s ID.'
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: The mine parameter can be used to instruct the API to only return streams owned by the authenticated user. Set the parameter value to true to only retrieve your own streams.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - liveStreams
  post:
    displayName: youtube.liveStreams.insert
    description: 'Creates a video stream. The stream enables you to send your video to YouTube, which can then broadcast the video to your audience.'
    body:
      application/json:
        type: LiveStream
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: LiveStream
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part properties that you can include in the parameter value are id, snippet, cdn, and status.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveStreams
  put:
    displayName: youtube.liveStreams.update
    description: 'Updates a video stream. If the properties that you want to change cannot be updated, then you need to create a new stream with the proper settings.'
    body:
      application/json:
        type: LiveStream
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: LiveStream
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part properties that you can include in the parameter value are id, snippet, cdn, and status.

          Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. If the request body does not specify a value for a mutable property, the existing value for that property will be removed.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveStreams
/channels:
  displayName: channels
  get:
    displayName: youtube.channels.list
    description: Returns a collection of zero or more channel resources that match the request criteria.
    responses:
      '200':
        body:
          application/json:
            type: ChannelListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails, the API response will also contain all of those nested properties.
        required: true
        type: string
      categoryId:
        description: 'The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category.'
        type: string
      forUsername:
        description: 'The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.'
        type: string
      hl:
        description: The hl parameter should be used for filter out the properties that are not in the given language. Used for the brandingSettings part.
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channel''s YouTube channel ID.'
        type: string
      managedByMe:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          Set this parameter's value to true to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies. The user must be authenticated as a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.
        type: boolean
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: Set this parameter's value to true to instruct the API to only return channels owned by the authenticated user.
        type: boolean
      mySubscribers:
        description: Use the subscriptions.list method and its mySubscribers parameter to retrieve a list of subscribers to the authenticated user's channel.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner-channel-audit'
    (oas-tags):
      - channels
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  put:
    displayName: youtube.channels.update
    description: Updates a channel's metadata. Note that this method currently only supports updates to the channel resource's brandingSettings and invideoPromotion objects and their child properties.
    body:
      application/json:
        type: Channel
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Channel
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The API currently only allows the parameter value to be set to either brandingSettings or invideoPromotion. (You cannot update both of those parts with a single request.)

          Note that this method overrides the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: 'The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs to be linked to the specified YouTube content owner.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - channels
/commentThreads:
  displayName: commentThreads
  get:
    displayName: youtube.commentThreads.list
    description: Returns a list of comment threads that match the API request parameters.
    responses:
      '200':
        body:
          application/json:
            type: CommentThreadListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include.
        required: true
        type: string
      allThreadsRelatedToChannelId:
        description: The allThreadsRelatedToChannelId parameter instructs the API to return all comment threads associated with the specified channel. The response can include comments about the channel or about the channel's videos.
        type: string
      channelId:
        description: The channelId parameter instructs the API to return comment threads containing comments about the specified channel. (The response will not include comments left on videos that the channel uploaded.)
        type: string
      id:
        description: The id parameter specifies a comma-separated list of comment thread IDs for the resources that should be retrieved.
        type: string
      maxResults:
        default: 20
        description: |-
          The maxResults parameter specifies the maximum number of items that should be returned in the result set.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        maximum: 100
        minimum: 1
        type: integer
      moderationStatus:
        default: published
        description: |-
          Set this parameter to limit the returned comment threads to a particular moderation state.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        enum:
          - heldForReview
          - likelySpam
          - published
        type: string
      order:
        description: |-
          The order parameter specifies the order in which the API response should list comment threads. Valid values are: 
          - time - Comment threads are ordered by time. This is the default behavior.
          - relevance - Comment threads are ordered by relevance.Note: This parameter is not supported for use in conjunction with the id parameter.
        enum:
          - relevance
          - time
        type: string
      pageToken:
        description: |-
          The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        type: string
      searchTerms:
        description: |-
          The searchTerms parameter instructs the API to limit the API response to only contain comments that contain the specified search terms.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        type: string
      textFormat:
        default: html
        description: Set this parameter's value to html or plainText to instruct the API to return the comments left by users in html formatted or in plain text.
        enum:
          - html
          - plainText
        type: string
      videoId:
        description: The videoId parameter instructs the API to return comment threads associated with the specified video ID.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - commentThreads
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  put:
    displayName: youtube.commentThreads.update
    description: Modifies the top-level comment in a comment thread.
    body:
      application/json:
        type: CommentThread
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: CommentThread
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies a comma-separated list of commentThread resource properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - commentThreads
  post:
    displayName: youtube.commentThreads.insert
    description: 'Creates a new top-level comment. To add a reply to an existing comment, use the comments.insert method instead.'
    body:
      application/json:
        type: CommentThread
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: CommentThread
        description: Successful response
    queryParameters:
      part:
        description: The part parameter identifies the properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - commentThreads
/comments:
  displayName: comments
  get:
    displayName: youtube.comments.list
    description: Returns a list of comments that match the API request parameters.
    responses:
      '200':
        body:
          application/json:
            type: CommentListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies a comma-separated list of one or more comment resource properties that the API response will include.
        required: true
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of comment IDs for the resources that are being retrieved. In a comment resource, the id property specifies the comment''s ID.'
        type: string
      maxResults:
        default: 20
        description: |-
          The maxResults parameter specifies the maximum number of items that should be returned in the result set.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        maximum: 100
        minimum: 1
        type: integer
      pageToken:
        description: |-
          The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.

          Note: This parameter is not supported for use in conjunction with the id parameter.
        type: string
      parentId:
        description: |-
          The parentId parameter specifies the ID of the comment for which replies should be retrieved.

          Note: YouTube currently supports replies only for top-level comments. However, replies to replies may be supported in the future.
        type: string
      textFormat:
        default: html
        description: This parameter indicates whether the API should return comments formatted as HTML or as plain text.
        enum:
          - html
          - plainText
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - comments
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  put:
    displayName: youtube.comments.update
    description: Modifies a comment.
    body:
      application/json:
        type: Comment
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Comment
        description: Successful response
    queryParameters:
      part:
        description: The part parameter identifies the properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - comments
  /setModerationStatus:
    displayName: setModerationStatus
    post:
      displayName: youtube.comments.setModerationStatus
      description: Sets the moderation status of one or more comments. The API request must be authorized by the owner of the channel or video associated with the comments.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies a comma-separated list of IDs that identify the comments for which you are updating the moderation status.
          required: true
          type: string
        moderationStatus:
          description: Identifies the new moderation status of the specified comments.
          enum:
            - heldForReview
            - published
            - rejected
          required: true
          type: string
        banAuthor:
          default: false
          description: |-
            The banAuthor parameter lets you indicate that you want to automatically reject any additional comments written by the comment's author. Set the parameter value to true to ban the author.

            Note: This parameter is only valid if the moderationStatus parameter is also set to rejected.
          type: boolean
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - comments
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  post:
    displayName: youtube.comments.insert
    description: 'Creates a reply to an existing comment. Note: To create a top-level comment, use the commentThreads.insert method.'
    body:
      application/json:
        type: Comment
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Comment
        description: Successful response
    queryParameters:
      part:
        description: The part parameter identifies the properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - comments
  delete:
    displayName: youtube.comments.delete
    description: Deletes a comment.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: The id parameter specifies the comment ID for the resource that is being deleted.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - comments
  /markAsSpam:
    displayName: markAsSpam
    post:
      displayName: youtube.comments.markAsSpam
      description: Expresses the caller's opinion that one or more comments should be flagged as spam.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies a comma-separated list of IDs of comments that the caller believes should be classified as spam.
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - comments
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/playlistItems:
  displayName: playlistItems
  delete:
    displayName: youtube.playlistItems.delete
    description: Deletes a playlist item.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: 'The id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist item''s ID.'
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlistItems
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  get:
    displayName: youtube.playlistItems.list
    description: Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.
    responses:
      '200':
        body:
          application/json:
            type: PlaylistItemListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet, the API response will contain all of those properties.
        required: true
        type: string
      id:
        description: The id parameter specifies a comma-separated list of one or more unique playlist item IDs.
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
      playlistId:
        description: 'The playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.'
        type: string
      videoId:
        description: The videoId parameter specifies that the request should return only the playlist items that contain the specified video.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlistItems
  post:
    displayName: youtube.playlistItems.insert
    description: Adds a resource to a playlist.
    body:
      application/json:
        type: PlaylistItem
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: PlaylistItem
        description: Successful response
    queryParameters:
      part:
        description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlistItems
  put:
    displayName: youtube.playlistItems.update
    description: 'Modifies a playlist item. For example, you could update the item''s position in the playlist.'
    body:
      application/json:
        type: PlaylistItem
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: PlaylistItem
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in the playlist. If your request is updating a playlist item that sets these values, and the request's part parameter value includes the contentDetails part, the playlist item's start and end times will be updated to whatever value the request body specifies. If the request body does not specify values, the existing start and end times will be removed and replaced with the default settings.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlistItems
/guideCategories:
  displayName: guideCategories
  get:
    displayName: youtube.guideCategories.list
    description: Returns a list of categories that can be associated with YouTube channels.
    responses:
      '200':
        body:
          application/json:
            type: GuideCategoryListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the guideCategory resource properties that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      hl:
        default: en-US
        description: The hl parameter specifies the language that will be used for text values in the API response.
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.'
        type: string
      regionCode:
        description: The regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - guideCategories
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/i18nRegions:
  displayName: i18nRegions
  get:
    displayName: youtube.i18nRegions.list
    description: Returns a list of content regions that the YouTube website supports.
    responses:
      '200':
        body:
          application/json:
            type: I18nRegionListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      hl:
        default: en_US
        description: The hl parameter specifies the language that should be used for text values in the API response.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - i18nRegions
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/playlists:
  displayName: playlists
  delete:
    displayName: youtube.playlists.delete
    description: Deletes a playlist.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: 'The id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlist''s ID.'
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlists
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  get:
    displayName: youtube.playlists.list
    description: 'Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.'
    responses:
      '200':
        body:
          application/json:
            type: PlaylistListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties.
        required: true
        type: string
      channelId:
        description: This value indicates that the API should only return the specified channel's playlists.
        type: string
      hl:
        description: The hl parameter should be used for filter out the properties that are not in the given language. Used for the snippet part.
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlist''s YouTube playlist ID.'
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: Set this parameter's value to true to instruct the API to only return playlists owned by the authenticated user.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlists
  post:
    displayName: youtube.playlists.insert
    description: Creates a playlist.
    body:
      application/json:
        type: Playlist
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Playlist
        description: Successful response
    queryParameters:
      part:
        description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlists
  put:
    displayName: youtube.playlists.update
    description: 'Modifies a playlist. For example, you could change a playlist''s title, description, or privacy status.'
    body:
      application/json:
        type: Playlist
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Playlist
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          Note that this method will override the existing values for mutable properties that are contained in any parts that the request body specifies. For example, a playlist's description is contained in the snippet part, which must be included in the request body. If the request does not specify a value for the snippet.description property, the playlist's existing description will be deleted.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - playlists
/liveBroadcasts:
  displayName: liveBroadcasts
  get:
    displayName: youtube.liveBroadcasts.list
    description: Returns a list of YouTube broadcasts that match the API request parameters.
    responses:
      '200':
        body:
          application/json:
            type: LiveBroadcastListResponse
        description: Successful response
    queryParameters:
      part:
        description: 'The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.'
        required: true
        type: string
      broadcastStatus:
        description: The broadcastStatus parameter filters the API response to only include broadcasts with the specified status.
        enum:
          - active
          - all
          - completed
          - upcoming
        type: string
      broadcastType:
        default: event
        description: The broadcastType parameter filters the API response to only include broadcasts with the specified type. This is only compatible with the mine filter for now.
        enum:
          - all
          - event
          - persistent
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of YouTube broadcast IDs that identify the broadcasts being retrieved. In a liveBroadcast resource, the id property specifies the broadcast''s ID.'
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: The mine parameter can be used to instruct the API to only return broadcasts owned by the authenticated user. Set the parameter value to true to only retrieve your own broadcasts.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - liveBroadcasts
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  put:
    displayName: youtube.liveBroadcasts.update
    description: 'Updates a broadcast. For example, you could modify the broadcast settings defined in the liveBroadcast resource''s contentDetails object.'
    body:
      application/json:
        type: LiveBroadcast
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: LiveBroadcast
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part properties that you can include in the parameter value are id, snippet, contentDetails, and status.

          Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a broadcast's privacy status is defined in the status part. As such, if your request is updating a private or unlisted broadcast, and the request's part parameter value includes the status part, the broadcast's privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the broadcast will revert to the default privacy setting.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveBroadcasts
  /control:
    displayName: control
    post:
      displayName: youtube.liveBroadcasts.control
      description: Controls the settings for a slate that can be displayed in the broadcast stream.
      responses:
        '200':
          body:
            application/json:
              type: LiveBroadcast
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies the YouTube live broadcast ID that uniquely identifies the broadcast in which the slate is being updated.
          required: true
          type: string
        part:
          description: 'The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.'
          required: true
          type: string
        displaySlate:
          description: The displaySlate parameter specifies whether the slate is being enabled or disabled.
          type: boolean
        offsetTimeMs:
          description: |-
            The offsetTimeMs parameter specifies a positive time offset when the specified slate change will occur. The value is measured in milliseconds from the beginning of the broadcast's monitor stream, which is the time that the testing phase for the broadcast began. Even though it is specified in milliseconds, the value is actually an approximation, and YouTube completes the requested action as closely as possible to that time.

            If you do not specify a value for this parameter, then YouTube performs the action as soon as possible. See the Getting started guide for more details.

            Important: You should only specify a value for this parameter if your broadcast stream is delayed.
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
        onBehalfOfContentOwnerChannel:
          description: |-
            This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

            This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
          type: string
        walltime:
          description: 'The walltime parameter specifies the wall clock time at which the specified slate change will occur. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveBroadcasts
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  delete:
    displayName: youtube.liveBroadcasts.delete
    description: Deletes a broadcast.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: The id parameter specifies the YouTube live broadcast ID for the resource that is being deleted.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveBroadcasts
  /bind:
    displayName: bind
    post:
      displayName: youtube.liveBroadcasts.bind
      description: 'Binds a YouTube broadcast to a stream or removes an existing binding between a broadcast and a stream. A broadcast can only be bound to one video stream, though a video stream may be bound to more than one broadcast.'
      responses:
        '200':
          body:
            application/json:
              type: LiveBroadcast
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies the unique ID of the broadcast that is being bound to a video stream.
          required: true
          type: string
        part:
          description: 'The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.'
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
        onBehalfOfContentOwnerChannel:
          description: |-
            This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

            This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
          type: string
        streamId:
          description: 'The streamId parameter specifies the unique ID of the video stream that is being bound to a broadcast. If this parameter is omitted, the API will remove any existing binding between the broadcast and a video stream.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveBroadcasts
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /transition:
    displayName: transition
    post:
      displayName: youtube.liveBroadcasts.transition
      description: 'Changes the status of a YouTube live broadcast and initiates any processes associated with the new status. For example, when you transition a broadcast''s status to testing, YouTube starts to transmit video to that broadcast''s monitor stream. Before calling this method, you should confirm that the value of the status.streamStatus property for the stream bound to your broadcast is active.'
      responses:
        '200':
          body:
            application/json:
              type: LiveBroadcast
          description: Successful response
      queryParameters:
        broadcastStatus:
          description: 'The broadcastStatus parameter identifies the state to which the broadcast is changing. Note that to transition a broadcast to either the testing or live state, the status.streamStatus must be active for the stream that the broadcast is bound to.'
          enum:
            - complete
            - live
            - testing
          required: true
          type: string
        id:
          description: The id parameter specifies the unique ID of the broadcast that is transitioning to another status.
          required: true
          type: string
        part:
          description: 'The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.'
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
        onBehalfOfContentOwnerChannel:
          description: |-
            This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

            This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.force-ssl'
      (oas-tags):
        - liveBroadcasts
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  post:
    displayName: youtube.liveBroadcasts.insert
    description: Creates a broadcast.
    body:
      application/json:
        type: LiveBroadcast
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: LiveBroadcast
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          The part properties that you can include in the parameter value are id, snippet, contentDetails, and status.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
    (oas-tags):
      - liveBroadcasts
/search:
  displayName: search
  get:
    displayName: youtube.search.list
    description: 'Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.'
    responses:
      '200':
        body:
          application/json:
            type: SearchListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      channelId:
        description: The channelId parameter indicates that the API response should only contain resources created by the channel
        type: string
      channelType:
        description: The channelType parameter lets you restrict a search to a particular type of channel.
        enum:
          - any
          - show
        type: string
      eventType:
        description: 'The eventType parameter restricts a search to broadcast events. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - completed
          - live
          - upcoming
        type: string
      forContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The forContentOwner parameter restricts the search to only retrieve resources owned by the content owner specified by the onBehalfOfContentOwner parameter. The user must be authenticated using a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.
        type: boolean
      forDeveloper:
        description: 'The forDeveloper parameter restricts the search to only retrieve videos uploaded via the developer''s application or website. The API server uses the request''s authorization credentials to identify the developer. Therefore, a developer can restrict results to videos uploaded through the developer''s own app or website but not to videos uploaded through other apps or sites.'
        type: boolean
      forMine:
        description: 'The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameter''s value must also be set to video.'
        type: boolean
      location:
        description: |-
          The location parameter, in conjunction with the locationRadius parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area. The parameter value is a string that specifies latitude/longitude coordinates e.g. (37.42307,-122.08427).


          - The location parameter value identifies the point at the center of the area.
          - The locationRadius parameter specifies the maximum distance that the location associated with a video can be from that point for the video to still be included in the search results.The API returns an error if your request specifies a value for the location parameter but does not also specify a value for the locationRadius parameter.
        type: string
      locationRadius:
        description: |-
          The locationRadius parameter, in conjunction with the location parameter, defines a circular geographic area.

          The parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000 kilometers.

          Note: See the definition of the location parameter for more information.
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      order:
        default: relevance
        description: The order parameter specifies the method that will be used to order resources in the API response.
        enum:
          - date
          - rating
          - relevance
          - title
          - videoCount
          - viewCount
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
      publishedAfter:
        description: 'The publishedAfter parameter indicates that the API response should only contain resources created after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).'
        type: string
      publishedBefore:
        description: 'The publishedBefore parameter indicates that the API response should only contain resources created before the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).'
        type: string
      q:
        description: |-
          The q parameter specifies the query term to search for.

          Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either "boating" or "sailing", set the q parameter value to boating|sailing. Similarly, to search for videos matching either "boating" or "sailing" but not "fishing", set the q parameter value to boating|sailing -fishing. Note that the pipe character must be URL-escaped when it is sent in your API request. The URL-escaped value for the pipe character is %7C.
        type: string
      regionCode:
        description: The regionCode parameter instructs the API to return search results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        type: string
      relatedToVideoId:
        description: 'The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.'
        type: string
      relevanceLanguage:
        description: 'The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an ISO 639-1 two-letter language code. However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.'
        type: string
      safeSearch:
        description: The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.
        enum:
          - moderate
          - none
          - strict
        type: string
      topicId:
        description: The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.
        type: string
      type:
        default: 'video,channel,playlist'
        description: The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types.
        type: string
      videoCaption:
        description: 'The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - closedCaption
          - none
        type: string
      videoCategoryId:
        description: 'The videoCategoryId parameter filters video search results based on their category. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        type: string
      videoDefinition:
        description: 'The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - high
          - standard
        type: string
      videoDimension:
        description: 'The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - 2d
          - 3d
          - any
        type: string
      videoDuration:
        description: 'The videoDuration parameter filters video search results based on their duration. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - long
          - medium
          - short
        type: string
      videoEmbeddable:
        description: 'The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - 'true'
        type: string
      videoLicense:
        description: 'The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - creativeCommon
          - youtube
        type: string
      videoSyndicated:
        description: 'The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - 'true'
        type: string
      videoType:
        description: 'The videoType parameter lets you restrict a search to a particular type of videos. If you specify a value for this parameter, you must also set the type parameter''s value to video.'
        enum:
          - any
          - episode
          - movie
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - search
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/sponsors:
  displayName: sponsors
  get:
    displayName: youtube.sponsors.list
    description: Lists sponsors for a channel.
    responses:
      '200':
        body:
          application/json:
            type: SponsorListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the sponsor resource parts that the API response will include. Supported values are id and snippet.
        required: true
        type: string
      filter:
        default: newest
        description: The filter parameter specifies which channel sponsors to return.
        enum:
          - all
          - newest
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - sponsors
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/channelBanners:
  displayName: channelBanners
  /insert:
    displayName: insert
    post:
      displayName: youtube.channelBanners.insert
      description: |-
        Uploads a channel banner image to YouTube. This method represents the first two steps in a three-step process to update the banner image for a channel:

        - Call the channelBanners.insert method to upload the binary image data to YouTube. The image must have a 16:9 aspect ratio and be at least 2120x1192 pixels.
        - Extract the url property's value from the response that the API returns for step 1.
        - Call the channels.update method to update the channel's branding settings. Set the brandingSettings.image.bannerExternalUrl property's value to the URL obtained in step 2.
      body:
        application/json:
          type: ChannelBannerResource
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: ChannelBannerResource
          description: Successful response
      queryParameters:
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtube.upload'
      (oas-tags):
        - channelBanners
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/subscriptions:
  displayName: subscriptions
  delete:
    displayName: youtube.subscriptions.delete
    description: Deletes a subscription.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: 'The id parameter specifies the YouTube subscription ID for the resource that is being deleted. In a subscription resource, the id property specifies the YouTube subscription ID.'
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - subscriptions
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  get:
    displayName: youtube.subscriptions.list
    description: Returns subscription resources that match the API request criteria.
    responses:
      '200':
        body:
          application/json:
            type: SubscriptionListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet, the API response will also contain all of those nested properties.
        required: true
        type: string
      channelId:
        description: The channelId parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.
        type: string
      forChannelId:
        description: The forChannelId parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a subscription resource, the id property specifies the YouTube subscription ID.'
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      mine:
        description: Set this parameter's value to true to retrieve a feed of the authenticated user's subscriptions.
        type: boolean
      myRecentSubscribers:
        description: Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in reverse chronological order (newest first).
        type: boolean
      mySubscribers:
        description: Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in no particular order.
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
      order:
        default: relevance
        description: The order parameter specifies the method that will be used to sort resources in the API response.
        enum:
          - alphabetical
          - relevance
          - unread
        type: string
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - subscriptions
  post:
    displayName: youtube.subscriptions.insert
    description: Adds a subscription for the authenticated user's channel.
    body:
      application/json:
        type: Subscription
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Subscription
        description: Successful response
    queryParameters:
      part:
        description: The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        required: true
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - subscriptions
/thumbnails:
  displayName: thumbnails
  /set:
    displayName: set
    post:
      displayName: youtube.thumbnails.set
      description: Uploads a custom video thumbnail to YouTube and sets it for a video.
      responses:
        '200':
          body:
            application/json:
              type: ThumbnailSetResponse
          description: Successful response
      queryParameters:
        videoId:
          description: The videoId parameter specifies a YouTube video ID for which the custom video thumbnail is being provided.
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - thumbnails
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/fanFundingEvents:
  displayName: fanFundingEvents
  get:
    displayName: youtube.fanFundingEvents.list
    description: Lists fan funding events for a channel.
    responses:
      '200':
        body:
          application/json:
            type: FanFundingEventListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the fanFundingEvent resource parts that the API response will include. Supported values are id and snippet.
        required: true
        type: string
      hl:
        description: |-
          The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method.

          If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
        type: string
      maxResults:
        default: 5
        description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
        maximum: 50
        minimum: 0
        type: integer
      pageToken:
        description: 'The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - fanFundingEvents
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/videoAbuseReportReasons:
  displayName: videoAbuseReportReasons
  get:
    displayName: youtube.videoAbuseReportReasons.list
    description: Returns a list of abuse reasons that can be used for reporting abusive videos.
    responses:
      '200':
        body:
          application/json:
            type: VideoAbuseReportReasonListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet.
        required: true
        type: string
      hl:
        default: en_US
        description: The hl parameter specifies the language that should be used for text values in the API response.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtube.readonly'
    (oas-tags):
      - videoAbuseReportReasons
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/videoCategories:
  displayName: videoCategories
  get:
    displayName: youtube.videoCategories.list
    description: Returns a list of categories that can be associated with YouTube videos.
    responses:
      '200':
        body:
          application/json:
            type: VideoCategoryListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      hl:
        default: en_US
        description: The hl parameter specifies the language that should be used for text values in the API response.
        type: string
      id:
        description: The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.
        type: string
      regionCode:
        description: The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - videoCategories
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/videos:
  displayName: videos
  delete:
    displayName: youtube.videos.delete
    description: Deletes a YouTube video.
    responses:
      '200':
        description: Successful response
    queryParameters:
      id:
        description: 'The id parameter specifies the YouTube video ID for the resource that is being deleted. In a video resource, the id property specifies the video''s ID.'
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - videos
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  get:
    displayName: youtube.videos.list
    description: Returns a list of videos that match the API request parameters.
    responses:
      '200':
        body:
          application/json:
            type: VideoListResponse
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.

          If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties.
        required: true
        type: string
      chart:
        description: The chart parameter identifies the chart that you want to retrieve.
        enum:
          - mostPopular
        type: string
      hl:
        description: |-
          The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method.

          If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
        type: string
      id:
        description: 'The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video''s ID.'
        type: string
      locale:
        description: DEPRECATED
        type: string
      maxHeight:
        description: 'The maxHeight parameter specifies a maximum height of the embedded player. If maxWidth is provided, maxHeight may not be reached in order to not violate the width request.'
        maximum: 8192
        minimum: 72
        type: integer
      maxResults:
        default: 5
        description: |-
          The maxResults parameter specifies the maximum number of items that should be returned in the result set.

          Note: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
        maximum: 50
        minimum: 1
        type: integer
      maxWidth:
        description: 'The maxWidth parameter specifies a maximum width of the embedded player. If maxHeight is provided, maxWidth may not be reached in order to not violate the height request.'
        maximum: 8192
        minimum: 72
        type: integer
      myRating:
        description: Set this parameter's value to like or dislike to instruct the API to only return videos liked or disliked by the authenticated user.
        enum:
          - dislike
          - like
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      pageToken:
        description: |-
          The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.

          Note: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
        type: string
      regionCode:
        description: The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the chart parameter. The parameter value is an ISO 3166-1 alpha-2 country code.
        type: string
      videoCategoryId:
        default: '0'
        description: 'The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - videos
  post:
    displayName: youtube.videos.insert
    description: Uploads a video to YouTube and optionally sets the video's metadata.
    body:
      application/json:
        type: Video
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Video
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          Note that not all parts contain properties that can be set when inserting or updating a video. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.
        required: true
        type: string
      autoLevels:
        description: The autoLevels parameter indicates whether YouTube should automatically enhance the video's lighting and color.
        type: boolean
      notifySubscribers:
        default: true
        description: 'The notifySubscribers parameter indicates whether YouTube should send a notification about the new video to users who subscribe to the video''s channel. A parameter value of True indicates that subscribers will be notified of newly uploaded videos. However, a channel owner who is uploading many videos might prefer to set the value to False to avoid sending a notification about each new video to the channel''s subscribers.'
        type: boolean
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
      onBehalfOfContentOwnerChannel:
        description: |-
          This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.

          This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.
        type: string
      stabilize:
        description: The stabilize parameter indicates whether YouTube should adjust the video to remove shaky camera motions.
        type: boolean
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - videos
  put:
    displayName: youtube.videos.update
    description: Updates a video's metadata.
    body:
      application/json:
        type: Video
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Video
        description: Successful response
    queryParameters:
      part:
        description: |-
          The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.

          Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a video's privacy setting is contained in the status part. As such, if your request is updating a private video, and the request's part parameter value includes the status part, the video's privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the video will revert to the default privacy setting.

          In addition, not all parts contain properties that can be set when inserting or updating a video. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.
        required: true
        type: string
      onBehalfOfContentOwner:
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - videos
  /reportAbuse:
    displayName: reportAbuse
    post:
      displayName: youtube.videos.reportAbuse
      description: Report abuse for a video.
      body:
        application/json:
          type: VideoAbuseReport
          (oas-body-name): body
      responses:
        '200':
          description: Successful response
      queryParameters:
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - videos
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /rate:
    displayName: rate
    post:
      displayName: youtube.videos.rate
      description: Add a like or dislike rating to a video or remove a rating from a video.
      responses:
        '200':
          description: Successful response
      queryParameters:
        id:
          description: The id parameter specifies the YouTube video ID of the video that is being rated or having its rating removed.
          required: true
          type: string
        rating:
          description: Specifies the rating to record.
          enum:
            - dislike
            - like
            - none
          required: true
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - videos
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /getRating:
    displayName: getRating
    get:
      displayName: youtube.videos.getRating
      description: Retrieves the ratings that the authorized user gave to a list of specified videos.
      responses:
        '200':
          body:
            application/json:
              type: VideoGetRatingResponse
          description: Successful response
      queryParameters:
        id:
          description: 'The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) for which you are retrieving rating data. In a video resource, the id property specifies the video''s ID.'
          required: true
          type: string
        onBehalfOfContentOwner:
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/youtubepartner'
      (oas-tags):
        - videos
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/i18nLanguages:
  displayName: i18nLanguages
  get:
    displayName: youtube.i18nLanguages.list
    description: Returns a list of application languages that the YouTube website supports.
    responses:
      '200':
        body:
          application/json:
            type: I18nLanguageListResponse
        description: Successful response
    queryParameters:
      part:
        description: The part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet.
        required: true
        type: string
      hl:
        default: en_US
        description: The hl parameter specifies the language that should be used for text values in the API response.
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/youtubepartner'
    (oas-tags):
      - i18nLanguages
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
types:
  AccessPolicy:
    description: Rights management policy for YouTube resources.
    properties:
      allowed:
        description: The value of allowed indicates whether the access to the policy is allowed or denied by default.
        type: boolean
        required: false
      exception:
        description: A list of region codes that identify countries where the default policy do not apply.
        items:
          type: string
        type: array
        required: false
  Activity:
    description: 'An activity resource contains information about an action that a particular channel, or user, has taken on YouTube.The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.'
    properties:
      contentDetails:
        description: 'The contentDetails object contains information about the content associated with the activity. For example, if the snippet.type value is videoRated, then the contentDetails object''s content identifies the rated video.'
        type: ActivityContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the activity.
        type: string
        required: false
      kind:
        default: 'youtube#activity'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activity".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the activity, including the activity''s type and group ID.'
        type: ActivitySnippet
        required: false
  ActivityContentDetails:
    description: 'Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.'
    properties:
      bulletin:
        description: The bulletin object contains details about a channel bulletin post. This object is only present if the snippet.type is bulletin.
        type: ActivityContentDetailsBulletin
        required: false
      channelItem:
        description: The channelItem object contains details about a resource which was added to a channel. This property is only present if the snippet.type is channelItem.
        type: ActivityContentDetailsChannelItem
        required: false
      comment:
        description: The comment object contains information about a resource that received a comment. This property is only present if the snippet.type is comment.
        type: ActivityContentDetailsComment
        required: false
      favorite:
        description: The favorite object contains information about a video that was marked as a favorite video. This property is only present if the snippet.type is favorite.
        type: ActivityContentDetailsFavorite
        required: false
      like:
        description: The like object contains information about a resource that received a positive (like) rating. This property is only present if the snippet.type is like.
        type: ActivityContentDetailsLike
        required: false
      playlistItem:
        description: The playlistItem object contains information about a new playlist item. This property is only present if the snippet.type is playlistItem.
        type: ActivityContentDetailsPlaylistItem
        required: false
      promotedItem:
        description: The promotedItem object contains details about a resource which is being promoted. This property is only present if the snippet.type is promotedItem.
        type: ActivityContentDetailsPromotedItem
        required: false
      recommendation:
        description: The recommendation object contains information about a recommended resource. This property is only present if the snippet.type is recommendation.
        type: ActivityContentDetailsRecommendation
        required: false
      social:
        description: The social object contains details about a social network post. This property is only present if the snippet.type is social.
        type: ActivityContentDetailsSocial
        required: false
      subscription:
        description: The subscription object contains information about a channel that a user subscribed to. This property is only present if the snippet.type is subscription.
        type: ActivityContentDetailsSubscription
        required: false
      upload:
        description: The upload object contains information about the uploaded video. This property is only present if the snippet.type is upload.
        type: ActivityContentDetailsUpload
        required: false
  ActivityContentDetailsBulletin:
    description: Details about a channel bulletin post.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the resource associated with a bulletin post.
        type: ResourceId
        required: false
  ActivityContentDetailsChannelItem:
    description: Details about a resource which was added to a channel.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the resource that was added to the channel.
        type: ResourceId
        required: false
  ActivityContentDetailsComment:
    description: Information about a resource that received a comment.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the resource associated with the comment.
        type: ResourceId
        required: false
  ActivityContentDetailsFavorite:
    description: Information about a video that was marked as a favorite video.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the resource that was marked as a favorite.
        type: ResourceId
        required: false
  ActivityContentDetailsLike:
    description: Information about a resource that received a positive (like) rating.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the rated resource.
        type: ResourceId
        required: false
  ActivityContentDetailsPlaylistItem:
    description: Information about a new playlist item.
    properties:
      playlistId:
        description: The value that YouTube uses to uniquely identify the playlist.
        type: string
        required: false
      playlistItemId:
        description: ID of the item within the playlist.
        type: string
        required: false
      resourceId:
        description: The resourceId object contains information about the resource that was added to the playlist.
        type: ResourceId
        required: false
  ActivityContentDetailsPromotedItem:
    description: Details about a resource which is being promoted.
    properties:
      adTag:
        description: The URL the client should fetch to request a promoted item.
        type: string
        required: false
      clickTrackingUrl:
        description: The URL the client should ping to indicate that the user clicked through on this promoted item.
        type: string
        required: false
      creativeViewUrl:
        description: The URL the client should ping to indicate that the user was shown this promoted item.
        type: string
        required: false
      ctaType:
        description: 'The type of call-to-action, a message to the user indicating action that can be taken.'
        enum:
          - unspecified
          - visitAdvertiserSite
        type: string
        required: false
      customCtaButtonText:
        description: 'The custom call-to-action button text. If specified, it will override the default button text for the cta_type.'
        type: string
        required: false
      descriptionText:
        description: The text description to accompany the promoted item.
        type: string
        required: false
      destinationUrl:
        description: 'The URL the client should direct the user to, if the user chooses to visit the advertiser''s website.'
        type: string
        required: false
      forecastingUrl:
        description: 'The list of forecasting URLs. The client should ping all of these URLs when a promoted item is not available, to indicate that a promoted item could have been shown.'
        items:
          type: string
        type: array
        required: false
      impressionUrl:
        description: The list of impression URLs. The client should ping all of these URLs to indicate that the user was shown this promoted item.
        items:
          type: string
        type: array
        required: false
      videoId:
        description: The ID that YouTube uses to uniquely identify the promoted video.
        type: string
        required: false
  ActivityContentDetailsRecommendation:
    description: Information that identifies the recommended resource.
    properties:
      reason:
        description: The reason that the resource is recommended to the user.
        enum:
          - unspecified
          - videoFavorited
          - videoLiked
          - videoWatched
        type: string
        required: false
      resourceId:
        description: The resourceId object contains information that identifies the recommended resource.
        type: ResourceId
        required: false
      seedResourceId:
        description: The seedResourceId object contains information about the resource that caused the recommendation.
        type: ResourceId
        required: false
  ActivityContentDetailsSocial:
    description: Details about a social network post.
    properties:
      author:
        description: The author of the social network post.
        type: string
        required: false
      imageUrl:
        description: An image of the post's author.
        type: string
        required: false
      referenceUrl:
        description: The URL of the social network post.
        type: string
        required: false
      resourceId:
        description: The resourceId object encapsulates information that identifies the resource associated with a social network post.
        type: ResourceId
        required: false
      type:
        description: The name of the social network.
        enum:
          - facebook
          - googlePlus
          - twitter
          - unspecified
        type: string
        required: false
  ActivityContentDetailsSubscription:
    description: Information about a channel that a user subscribed to.
    properties:
      resourceId:
        description: The resourceId object contains information that identifies the resource that the user subscribed to.
        type: ResourceId
        required: false
  ActivityContentDetailsUpload:
    description: Information about the uploaded video.
    properties:
      videoId:
        description: The ID that YouTube uses to uniquely identify the uploaded video.
        type: string
        required: false
  ActivityListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: 'A list of activities, or events, that match the request criteria.'
        items:
          type: Activity
        type: array
        required: false
      kind:
        default: 'youtube#activityListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activityListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  ActivitySnippet:
    description: 'Basic details about an activity, including title, description, thumbnails, activity type and group.'
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel associated with the activity.
        type: string
        required: false
      channelTitle:
        description: Channel title for the channel responsible for this activity
        type: string
        required: false
      description:
        description: The description of the resource primarily associated with the activity.
        type: string
        required: false
      groupId:
        description: 'The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user''s activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.'
        type: string
        required: false
      publishedAt:
        description: 'The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the resource that is primarily associated with the activity. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The title of the resource primarily associated with the activity.
        type: string
        required: false
      type:
        description: The type of activity that the resource describes.
        enum:
          - bulletin
          - channelItem
          - comment
          - favorite
          - like
          - playlistItem
          - promotedItem
          - recommendation
          - social
          - subscription
          - upload
        type: string
        required: false
  Caption:
    description: A caption resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the caption track.
        type: string
        required: false
      kind:
        default: 'youtube#caption'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#caption".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the caption.
        type: CaptionSnippet
        required: false
  CaptionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of captions that match the request criteria.
        items:
          type: Caption
        type: array
        required: false
      kind:
        default: 'youtube#captionListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#captionListResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  CaptionSnippet:
    description: 'Basic details about a caption track, such as its language and name.'
    properties:
      audioTrackType:
        description: The type of audio track associated with the caption track.
        enum:
          - commentary
          - descriptive
          - primary
          - unknown
        type: string
        required: false
      failureReason:
        description: The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.
        enum:
          - processingFailed
          - unknownFormat
          - unsupportedFormat
        type: string
        required: false
      isAutoSynced:
        description: 'Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions.'
        type: boolean
        required: false
      isCC:
        description: Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false.
        type: boolean
        required: false
      isDraft:
        description: 'Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false.'
        type: boolean
        required: false
      isEasyReader:
        description: 'Indicates whether caption track is formatted for "easy reader," meaning it is at a third-grade level for language learners. The default value is false.'
        type: boolean
        required: false
      isLarge:
        description: Indicates whether the caption track uses large text for the vision-impaired. The default value is false.
        type: boolean
        required: false
      language:
        description: The language of the caption track. The property value is a BCP-47 language tag.
        type: string
        required: false
      lastUpdated:
        description: 'The date and time when the caption track was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      name:
        description: The name of the caption track. The name is intended to be visible to the user as an option during playback.
        type: string
        required: false
      status:
        description: The caption track's status.
        enum:
          - failed
          - serving
          - syncing
        type: string
        required: false
      trackKind:
        description: The caption track's type.
        enum:
          - ASR
          - forced
          - standard
        type: string
        required: false
      videoId:
        description: The ID that YouTube uses to uniquely identify the video associated with the caption track.
        type: string
        required: false
  CdnSettings:
    description: Brief description of the live stream cdn settings.
    properties:
      format:
        description: The format of the video stream that you are sending to Youtube.
        type: string
        required: false
      frameRate:
        description: The frame rate of the inbound video data.
        enum:
          - 30fps
          - 60fps
        type: string
        required: false
      ingestionInfo:
        description: The ingestionInfo object contains information that YouTube provides that you need to transmit your RTMP or HTTP stream to YouTube.
        type: IngestionInfo
        required: false
      ingestionType:
        description: The method or protocol used to transmit the video stream.
        enum:
          - dash
          - rtmp
        type: string
        required: false
      resolution:
        description: The resolution of the inbound video data.
        enum:
          - 1080p
          - 1440p
          - 240p
          - 360p
          - 480p
          - 720p
        type: string
        required: false
  Channel:
    description: A channel resource contains information about a YouTube channel.
    properties:
      auditDetails:
        description: The auditionDetails object encapsulates channel data that is relevant for YouTube Partners during the audition process.
        type: ChannelAuditDetails
        required: false
      brandingSettings:
        description: The brandingSettings object encapsulates information about the branding of the channel.
        type: ChannelBrandingSettings
        required: false
      contentDetails:
        description: The contentDetails object encapsulates information about the channel's content.
        type: ChannelContentDetails
        required: false
      contentOwnerDetails:
        description: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
        type: ChannelContentOwnerDetails
        required: false
      conversionPings:
        description: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
        type: ChannelConversionPings
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the channel.
        type: string
        required: false
      invideoPromotion:
        description: The invideoPromotion object encapsulates information about promotion campaign associated with the channel.
        type: InvideoPromotion
        required: false
      kind:
        default: 'youtube#channel'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channel".'
        type: string
        required: false
      localizations:
        additionalProperties:
          description: 'The language tag, using string since map_key require simple types.'
          type: ChannelLocalization
        description: Localizations for different languages
        type: object
        required: false
      snippet:
        description: 'The snippet object contains basic details about the channel, such as its title, description, and thumbnail images.'
        type: ChannelSnippet
        required: false
      statistics:
        description: The statistics object encapsulates statistics for the channel.
        type: ChannelStatistics
        required: false
      status:
        description: The status object encapsulates information about the privacy status of the channel.
        type: ChannelStatus
        required: false
      topicDetails:
        description: The topicDetails object encapsulates information about Freebase topics associated with the channel.
        type: ChannelTopicDetails
        required: false
  ChannelAuditDetails:
    description: The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.
    properties:
      communityGuidelinesGoodStanding:
        description: Whether or not the channel respects the community guidelines.
        type: boolean
        required: false
      contentIdClaimsGoodStanding:
        description: Whether or not the channel has any unresolved claims.
        type: boolean
        required: false
      copyrightStrikesGoodStanding:
        description: Whether or not the channel has any copyright strikes.
        type: boolean
        required: false
      overallGoodStanding:
        description: 'Describes the general state of the channel. This field will always show if there are any issues whatsoever with the channel. Currently this field represents the result of the logical and operation over the community guidelines good standing, the copyright strikes good standing and the content ID claims good standing, but this may change in the future.'
        type: boolean
        required: false
  ChannelBannerResource:
    description: A channel banner returned as the response to a channel_banner.insert call.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      kind:
        default: 'youtube#channelBannerResource'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelBannerResource".'
        type: string
        required: false
      url:
        description: The URL of this banner image.
        type: string
        required: false
  ChannelBrandingSettings:
    description: Branding properties of a YouTube channel.
    properties:
      channel:
        description: Branding properties for the channel view.
        type: ChannelSettings
        required: false
      hints:
        description: Additional experimental branding properties.
        items:
          type: PropertyValue
        type: array
        required: false
      image:
        description: Branding properties for branding images.
        type: ImageSettings
        required: false
      watch:
        description: Branding properties for the watch page.
        type: WatchSettings
        required: false
  ChannelContentDetails:
    description: Details about the content of a channel.
    properties:
      relatedPlaylists:
        properties:
          favorites:
            description: The ID of the playlist that contains the channel"s favorite videos. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            type: string
            required: false
          likes:
            description: The ID of the playlist that contains the channel"s liked videos. Use the   playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            type: string
            required: false
          uploads:
            description: The ID of the playlist that contains the channel"s uploaded videos. Use the  videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.
            type: string
            required: false
          watchHistory:
            description: The ID of the playlist that contains the channel"s watch history. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            type: string
            required: false
          watchLater:
            description: The ID of the playlist that contains the channel"s watch later playlist. Use the playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            type: string
            required: false
        type: object
        required: false
  ChannelContentOwnerDetails:
    description: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
    properties:
      contentOwner:
        description: The ID of the content owner linked to the channel.
        type: string
        required: false
      timeLinked:
        description: 'The date and time of when the channel was linked to the content owner. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
  ChannelConversionPing:
    description: 'Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.'
    properties:
      context:
        description: Defines the context of the ping.
        enum:
          - cview
          - subscribe
          - unsubscribe
        type: string
        required: false
      conversionUrl:
        description: 'The url (without the schema) that the player shall send the ping to. It''s at caller''s descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.'
        type: string
        required: false
  ChannelConversionPings:
    description: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
    properties:
      pings:
        description: 'Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.'
        items:
          type: ChannelConversionPing
        type: array
        required: false
  ChannelListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of channels that match the request criteria.
        items:
          type: Channel
        type: array
        required: false
      kind:
        default: 'youtube#channelListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  ChannelLocalization:
    description: Channel localization setting
    properties:
      description:
        description: The localized strings for channel's description.
        type: string
        required: false
      title:
        description: The localized strings for channel's title.
        type: string
        required: false
  ChannelProfileDetails:
    properties:
      channelId:
        description: The YouTube channel ID.
        type: string
        required: false
      channelUrl:
        description: The channel's URL.
        type: string
        required: false
      displayName:
        description: The channel's display name.
        type: string
        required: false
      profileImageUrl:
        description: The channels's avatar URL.
        type: string
        required: false
  ChannelSection:
    properties:
      contentDetails:
        description: 'The contentDetails object contains details about the channel section content, such as a list of playlists or channels featured in the section.'
        type: ChannelSectionContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the channel section.
        type: string
        required: false
      kind:
        default: 'youtube#channelSection'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSection".'
        type: string
        required: false
      localizations:
        additionalProperties:
          description: 'The language tag, using string since map_key require simple types.'
          type: ChannelSectionLocalization
        description: Localizations for different languages
        type: object
        required: false
      snippet:
        description: 'The snippet object contains basic details about the channel section, such as its type, style and title.'
        type: ChannelSectionSnippet
        required: false
      targeting:
        description: The targeting object contains basic targeting settings about the channel section.
        type: ChannelSectionTargeting
        required: false
  ChannelSectionContentDetails:
    description: 'Details about a channelsection, including playlists and channels.'
    properties:
      channels:
        description: The channel ids for type multiple_channels.
        items:
          type: string
        type: array
        required: false
      playlists:
        description: 'The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed.'
        items:
          type: string
        type: array
        required: false
  ChannelSectionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of ChannelSections that match the request criteria.
        items:
          type: ChannelSection
        type: array
        required: false
      kind:
        default: 'youtube#channelSectionListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSectionListResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  ChannelSectionLocalization:
    description: ChannelSection localization setting
    properties:
      title:
        description: The localized strings for channel section's title.
        type: string
        required: false
  ChannelSectionSnippet:
    description: 'Basic details about a channel section, including title, style and position.'
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel that published the channel section.
        type: string
        required: false
      defaultLanguage:
        description: The language of the channel section's default title and description.
        type: string
        required: false
      localized:
        description: 'Localized title, read-only.'
        type: ChannelSectionLocalization
        required: false
      position:
        description: The position of the channel section in the channel.
        type: integer
        required: false
      style:
        description: The style of the channel section.
        enum:
          - channelsectionStyleUndefined
          - horizontalRow
          - verticalList
        type: string
        required: false
      title:
        description: The channel section's title for multiple_playlists and multiple_channels.
        type: string
        required: false
      type:
        description: The type of the channel section.
        enum:
          - allPlaylists
          - channelsectionTypeUndefined
          - completedEvents
          - likedPlaylists
          - likes
          - liveEvents
          - multipleChannels
          - multiplePlaylists
          - popularUploads
          - postedPlaylists
          - postedVideos
          - recentActivity
          - recentPosts
          - recentUploads
          - singlePlaylist
          - subscriptions
          - upcomingEvents
        type: string
        required: false
  ChannelSectionTargeting:
    description: ChannelSection targeting setting.
    properties:
      countries:
        description: The country the channel section is targeting.
        items:
          type: string
        type: array
        required: false
      languages:
        description: The language the channel section is targeting.
        items:
          type: string
        type: array
        required: false
      regions:
        description: The region the channel section is targeting.
        items:
          type: string
        type: array
        required: false
  ChannelSettings:
    description: Branding properties for the channel view.
    properties:
      country:
        description: The country of the channel.
        type: string
        required: false
      defaultLanguage:
        type: string
        required: false
      defaultTab:
        description: Which content tab users should see when viewing the channel.
        type: string
        required: false
      description:
        description: Specifies the channel description.
        type: string
        required: false
      featuredChannelsTitle:
        description: Title for the featured channels tab.
        type: string
        required: false
      featuredChannelsUrls:
        description: The list of featured channels.
        items:
          type: string
        type: array
        required: false
      keywords:
        description: 'Lists keywords associated with the channel, comma-separated.'
        type: string
        required: false
      moderateComments:
        description: Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.
        type: boolean
        required: false
      profileColor:
        description: A prominent color that can be rendered on this channel page.
        type: string
        required: false
      showBrowseView:
        description: Whether the tab to browse the videos should be displayed.
        type: boolean
        required: false
      showRelatedChannels:
        description: Whether related channels should be proposed.
        type: boolean
        required: false
      title:
        description: Specifies the channel title.
        type: string
        required: false
      trackingAnalyticsAccountId:
        description: The ID for a Google Analytics account to track and measure traffic to the channels.
        type: string
        required: false
      unsubscribedTrailer:
        description: 'The trailer of the channel, for users that are not subscribers.'
        type: string
        required: false
  ChannelSnippet:
    description: 'Basic details about a channel, including title, description and thumbnails. Next available id: 15.'
    properties:
      country:
        description: The country of the channel.
        type: string
        required: false
      customUrl:
        description: The custom url of the channel.
        type: string
        required: false
      defaultLanguage:
        description: The language of the channel's default title and description.
        type: string
        required: false
      description:
        description: The description of the channel.
        type: string
        required: false
      localized:
        description: 'Localized title and description, read-only.'
        type: ChannelLocalization
        required: false
      publishedAt:
        description: 'The date and time that the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the channel. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The channel's title.
        type: string
        required: false
  ChannelStatistics:
    description: 'Statistics about a channel: number of subscribers, number of videos in the channel, etc.'
    properties:
      commentCount:
        description: The number of comments for the channel.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      hiddenSubscriberCount:
        description: Whether or not the number of subscribers is shown for this user.
        type: boolean
        required: false
      subscriberCount:
        description: The number of subscribers that the channel has.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      videoCount:
        description: The number of videos uploaded to the channel.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      viewCount:
        description: The number of times the channel has been viewed.
        format: uint64
        type: string
        facets:
          format: string
        required: false
  ChannelStatus:
    description: JSON template for the status part of a channel.
    properties:
      isLinked:
        description: 'If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn''t have a public YouTube identity.'
        type: boolean
        required: false
      longUploadsStatus:
        description: The long uploads status of this channel. See
        enum:
          - allowed
          - disallowed
          - eligible
          - longUploadsUnspecified
        type: string
        required: false
      privacyStatus:
        description: Privacy status of the channel.
        enum:
          - private
          - public
          - unlisted
        type: string
        required: false
  ChannelTopicDetails:
    description: Freebase topic information related to the channel.
    properties:
      topicIds:
        description: A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.
        items:
          type: string
        type: array
        required: false
  Comment:
    description: A comment represents a single YouTube comment.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the comment.
        type: string
        required: false
      kind:
        default: 'youtube#comment'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#comment".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the comment.
        type: CommentSnippet
        required: false
  CommentListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of comments that match the request criteria.
        items:
          type: Comment
        type: array
        required: false
      kind:
        default: 'youtube#commentListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  CommentSnippet:
    description: 'Basic details about a comment, such as its author and text.'
    properties:
      authorChannelId:
        description: 'The id of the author''s YouTube channel, if any.'
        required: false
      authorChannelUrl:
        description: 'Link to the author''s YouTube channel, if any.'
        type: string
        required: false
      authorDisplayName:
        description: The name of the user who posted the comment.
        type: string
        required: false
      authorProfileImageUrl:
        description: The URL for the avatar of the user who posted the comment.
        type: string
        required: false
      canRate:
        description: Whether the current viewer can rate this comment.
        type: boolean
        required: false
      channelId:
        description: The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.
        type: string
        required: false
      likeCount:
        description: The total number of likes this comment has received.
        type: integer
        required: false
      moderationStatus:
        description: The comment's moderation status. Will not be set if the comments were requested through the id filter.
        enum:
          - heldForReview
          - likelySpam
          - published
          - rejected
        type: string
        required: false
      parentId:
        description: 'The unique id of the parent comment, only set for replies.'
        type: string
        required: false
      publishedAt:
        description: 'The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      textDisplay:
        description: The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.
        type: string
        required: false
      textOriginal:
        description: 'The comment''s original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment''s author.'
        type: string
        required: false
      updatedAt:
        description: 'The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      videoId:
        description: 'The ID of the video the comment refers to, if any.'
        type: string
        required: false
      viewerRating:
        description: The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.
        enum:
          - dislike
          - like
          - none
          - unspecified
        type: string
        required: false
  CommentThread:
    description: A comment thread represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the comment thread.
        type: string
        required: false
      kind:
        default: 'youtube#commentThread'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThread".'
        type: string
        required: false
      replies:
        description: The replies object contains a limited number of replies (if any) to the top level comment found in the snippet.
        type: CommentThreadReplies
        required: false
      snippet:
        description: The snippet object contains basic details about the comment thread and also the top level comment.
        type: CommentThreadSnippet
        required: false
  CommentThreadListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of comment threads that match the request criteria.
        items:
          type: CommentThread
        type: array
        required: false
      kind:
        default: 'youtube#commentThreadListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThreadListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  CommentThreadReplies:
    description: Comments written in (direct or indirect) reply to the top level comment.
    properties:
      comments:
        description: A limited number of replies. Unless the number of replies returned equals total_reply_count in the snippet the returned replies are only a subset of the total number of replies.
        items:
          type: Comment
        type: array
        required: false
  CommentThreadSnippet:
    description: Basic details about a comment thread.
    properties:
      canReply:
        description: Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field.
        type: boolean
        required: false
      channelId:
        description: The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself.
        type: string
        required: false
      isPublic:
        description: Whether the thread (and therefore all its comments) is visible to all YouTube users.
        type: boolean
        required: false
      topLevelComment:
        description: The top level comment of this thread.
        type: Comment
        required: false
      totalReplyCount:
        description: The total number of replies (not including the top level comment).
        type: integer
        required: false
      videoId:
        description: 'The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.'
        type: string
        required: false
  ContentRating:
    description: 'Ratings schemes. The country-specific ratings are mostly for movies and shows. NEXT_ID: 68'
    properties:
      acbRating:
        description: The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
        enum:
          - acbC
          - acbE
          - acbG
          - acbM
          - acbMa15plus
          - acbP
          - acbPg
          - acbR18plus
          - acbUnrated
        type: string
        required: false
      agcomRating:
        description: The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
        enum:
          - agcomT
          - agcomUnrated
          - agcomVm14
          - agcomVm18
        type: string
        required: false
      anatelRating:
        description: The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
        enum:
          - anatelA
          - anatelF
          - anatelI
          - anatelI10
          - anatelI12
          - anatelI7
          - anatelR
          - anatelUnrated
        type: string
        required: false
      bbfcRating:
        description: The video's British Board of Film Classification (BBFC) rating.
        enum:
          - bbfc12
          - bbfc12a
          - bbfc15
          - bbfc18
          - bbfcPg
          - bbfcR18
          - bbfcU
          - bbfcUnrated
        type: string
        required: false
      bfvcRating:
        description: The video's rating from Thailand's Board of Film and Video Censors.
        enum:
          - bfvc13
          - bfvc15
          - bfvc18
          - bfvc20
          - bfvcB
          - bfvcE
          - bfvcG
          - bfvcUnrated
        type: string
        required: false
      bmukkRating:
        description: 'The video''s rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).'
        enum:
          - bmukk10
          - bmukk12
          - bmukk14
          - bmukk16
          - bmukk6
          - bmukk8
          - bmukkAa
          - bmukkUnrated
        type: string
        required: false
      catvRating:
        description: 'Rating system for Canadian TV - Canadian TV Classification System The video''s rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.'
        enum:
          - catv14plus
          - catv18plus
          - catvC
          - catvC8
          - catvG
          - catvPg
          - catvUnrated
        type: string
        required: false
      catvfrRating:
        description: 'The video''s rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.'
        enum:
          - catvfr13plus
          - catvfr16plus
          - catvfr18plus
          - catvfr8plus
          - catvfrG
          - catvfrUnrated
        type: string
        required: false
      cbfcRating:
        description: The video's Central Board of Film Certification (CBFC - India) rating.
        enum:
          - cbfcA
          - cbfcS
          - cbfcU
          - cbfcUA
          - cbfcUnrated
        type: string
        required: false
      cccRating:
        description: The video's Consejo de Calificación Cinematográfica (Chile) rating.
        enum:
          - ccc14
          - ccc18
          - ccc18s
          - ccc18v
          - ccc6
          - cccTe
          - cccUnrated
        type: string
        required: false
      cceRating:
        description: The video's rating from Portugal's Comissão de Classificação de Espect´culos.
        enum:
          - cceM12
          - cceM14
          - cceM16
          - cceM18
          - cceM4
          - cceM6
          - cceUnrated
        type: string
        required: false
      chfilmRating:
        description: The video's rating in Switzerland.
        enum:
          - chfilm0
          - chfilm12
          - chfilm16
          - chfilm18
          - chfilm6
          - chfilmUnrated
        type: string
        required: false
      chvrsRating:
        description: The video's Canadian Home Video Rating System (CHVRS) rating.
        enum:
          - chvrs14a
          - chvrs18a
          - chvrsE
          - chvrsG
          - chvrsPg
          - chvrsR
          - chvrsUnrated
        type: string
        required: false
      cicfRating:
        description: The video's rating from the Commission de Contrôle des Films (Belgium).
        enum:
          - cicfE
          - cicfKntEna
          - cicfKtEa
          - cicfUnrated
        type: string
        required: false
      cnaRating:
        description: The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
        enum:
          - cna12
          - cna15
          - cna18
          - cna18plus
          - cnaAp
          - cnaUnrated
        type: string
        required: false
      cncRating:
        description: Rating system in France - Commission de classification cinematographique
        enum:
          - cnc10
          - cnc12
          - cnc16
          - cnc18
          - cncE
          - cncT
          - cncUnrated
        type: string
        required: false
      csaRating:
        description: 'The video''s rating from France''s Conseil supérieur de l?audiovisuel, which rates broadcast content.'
        enum:
          - csa10
          - csa12
          - csa16
          - csa18
          - csaInterdiction
          - csaT
          - csaUnrated
        type: string
        required: false
      cscfRating:
        description: The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
        enum:
          - cscf12
          - cscf16
          - cscf18
          - cscf6
          - cscf9
          - cscfA
          - cscfAl
          - cscfUnrated
        type: string
        required: false
      czfilmRating:
        description: The video's rating in the Czech Republic.
        enum:
          - czfilm12
          - czfilm14
          - czfilm18
          - czfilmU
          - czfilmUnrated
        type: string
        required: false
      djctqRating:
        description: 'The video''s Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.'
        enum:
          - djctq10
          - djctq12
          - djctq14
          - djctq16
          - djctq18
          - djctqL
          - djctqUnrated
        type: string
        required: false
      djctqRatingReasons:
        description: Reasons that explain why the video received its DJCQT (Brazil) rating.
        items:
          enum:
            - djctqCriminalActs
            - djctqDrugs
            - djctqExplicitSex
            - djctqExtremeViolence
            - djctqIllegalDrugs
            - djctqImpactingContent
            - djctqInappropriateLanguage
            - djctqLegalDrugs
            - djctqNudity
            - djctqSex
            - djctqSexualContent
            - djctqViolence
          type: string
        type: array
        required: false
      ecbmctRating:
        description: Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
        enum:
          - ecbmct13a
          - ecbmct13plus
          - ecbmct15a
          - ecbmct15plus
          - ecbmct18plus
          - ecbmct7a
          - ecbmct7plus
          - ecbmctG
          - ecbmctUnrated
        type: string
        required: false
      eefilmRating:
        description: The video's rating in Estonia.
        enum:
          - eefilmK12
          - eefilmK14
          - eefilmK16
          - eefilmK6
          - eefilmL
          - eefilmMs12
          - eefilmMs6
          - eefilmPere
          - eefilmUnrated
        type: string
        required: false
      egfilmRating:
        description: The video's rating in Egypt.
        enum:
          - egfilm18
          - egfilmBn
          - egfilmGn
          - egfilmUnrated
        type: string
        required: false
      eirinRating:
        description: The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
        enum:
          - eirinG
          - eirinPg12
          - eirinR15plus
          - eirinR18plus
          - eirinUnrated
        type: string
        required: false
      fcbmRating:
        description: The video's rating from Malaysia's Film Censorship Board.
        enum:
          - fcbm18
          - fcbm18pa
          - fcbm18pl
          - fcbm18sg
          - fcbm18sx
          - fcbmP13
          - fcbmPg13
          - fcbmU
          - fcbmUnrated
        type: string
        required: false
      fcoRating:
        description: 'The video''s rating from Hong Kong''s Office for Film, Newspaper and Article Administration.'
        enum:
          - fcoI
          - fcoIi
          - fcoIia
          - fcoIib
          - fcoIii
          - fcoUnrated
        type: string
        required: false
      fmocRating:
        description: This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
        enum:
          - fmoc10
          - fmoc12
          - fmoc16
          - fmoc18
          - fmocE
          - fmocU
          - fmocUnrated
        type: string
        required: false
      fpbRating:
        description: The video's rating from South Africa's Film and Publication Board.
        enum:
          - fpb10
          - fpb1012Pg
          - fpb13
          - fpb16
          - fpb18
          - fpb79Pg
          - fpbA
          - fpbPg
          - fpbUnrated
          - fpbX18
          - fpbXx
        type: string
        required: false
      fpbRatingReasons:
        description: Reasons that explain why the video received its FPB (South Africa) rating.
        items:
          enum:
            - fpbBlasphemy
            - fpbCriminalTechniques
            - fpbDrugs
            - fpbHorror
            - fpbImitativeActsTechniques
            - fpbLanguage
            - fpbNudity
            - fpbPrejudice
            - fpbSex
            - fpbSexualViolence
            - fpbViolence
          type: string
        type: array
        required: false
      fskRating:
        description: The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
        enum:
          - fsk0
          - fsk12
          - fsk16
          - fsk18
          - fsk6
          - fskUnrated
        type: string
        required: false
      grfilmRating:
        description: The video's rating in Greece.
        enum:
          - grfilmE
          - grfilmK
          - grfilmK12
          - grfilmK13
          - grfilmK15
          - grfilmK17
          - grfilmK18
          - grfilmUnrated
        type: string
        required: false
      icaaRating:
        description: The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
        enum:
          - icaa12
          - icaa13
          - icaa16
          - icaa18
          - icaa7
          - icaaApta
          - icaaUnrated
          - icaaX
        type: string
        required: false
      ifcoRating:
        description: The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
        enum:
          - ifco12
          - ifco12a
          - ifco15
          - ifco15a
          - ifco16
          - ifco18
          - ifcoG
          - ifcoPg
          - ifcoUnrated
        type: string
        required: false
      ilfilmRating:
        description: The video's rating in Israel.
        enum:
          - ilfilm12
          - ilfilm16
          - ilfilm18
          - ilfilmAa
          - ilfilmUnrated
        type: string
        required: false
      incaaRating:
        description: The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
        enum:
          - incaaAtp
          - incaaC
          - incaaSam13
          - incaaSam16
          - incaaSam18
          - incaaUnrated
        type: string
        required: false
      kfcbRating:
        description: The video's rating from the Kenya Film Classification Board.
        enum:
          - kfcb16plus
          - kfcbG
          - kfcbPg
          - kfcbR
          - kfcbUnrated
        type: string
        required: false
      kijkwijzerRating:
        description: voor de Classificatie van Audiovisuele Media (Netherlands).
        enum:
          - kijkwijzer12
          - kijkwijzer16
          - kijkwijzer18
          - kijkwijzer6
          - kijkwijzer9
          - kijkwijzerAl
          - kijkwijzerUnrated
        type: string
        required: false
      kmrbRating:
        description: The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
        enum:
          - kmrb12plus
          - kmrb15plus
          - kmrbAll
          - kmrbR
          - kmrbTeenr
          - kmrbUnrated
        type: string
        required: false
      lsfRating:
        description: The video's rating from Indonesia's Lembaga Sensor Film.
        enum:
          - lsf13
          - lsf17
          - lsf21
          - lsfA
          - lsfBo
          - lsfD
          - lsfR
          - lsfSu
          - lsfUnrated
        type: string
        required: false
      mccaaRating:
        description: The video's rating from Malta's Film Age-Classification Board.
        enum:
          - mccaa12
          - mccaa12a
          - mccaa14
          - mccaa15
          - mccaa16
          - mccaa18
          - mccaaPg
          - mccaaU
          - mccaaUnrated
        type: string
        required: false
      mccypRating:
        description: The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
        enum:
          - mccyp11
          - mccyp15
          - mccyp7
          - mccypA
          - mccypUnrated
        type: string
        required: false
      mdaRating:
        description: 'The video''s rating from Singapore''s Media Development Authority (MDA) and, specifically, it''s Board of Film Censors (BFC).'
        enum:
          - mdaG
          - mdaM18
          - mdaNc16
          - mdaPg
          - mdaPg13
          - mdaR21
          - mdaUnrated
        type: string
        required: false
      medietilsynetRating:
        description: 'The video''s rating from Medietilsynet, the Norwegian Media Authority.'
        enum:
          - medietilsynet11
          - medietilsynet12
          - medietilsynet15
          - medietilsynet18
          - medietilsynet6
          - medietilsynet7
          - medietilsynet9
          - medietilsynetA
          - medietilsynetUnrated
        type: string
        required: false
      mekuRating:
        description: The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
        enum:
          - meku12
          - meku16
          - meku18
          - meku7
          - mekuS
          - mekuUnrated
        type: string
        required: false
      mibacRating:
        description: The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
        enum:
          - mibacT
          - mibacUnrated
          - mibacVap
          - mibacVm12
          - mibacVm14
          - mibacVm18
        type: string
        required: false
      mocRating:
        description: The video's Ministerio de Cultura (Colombia) rating.
        enum:
          - moc12
          - moc15
          - moc18
          - moc7
          - mocBanned
          - mocE
          - mocT
          - mocUnrated
          - mocX
        type: string
        required: false
      moctwRating:
        description: The video's rating from Taiwan's Ministry of Culture (文化部).
        enum:
          - moctwG
          - moctwP
          - moctwPg
          - moctwR
          - moctwR12
          - moctwR15
          - moctwUnrated
        type: string
        required: false
      mpaaRating:
        description: The video's Motion Picture Association of America (MPAA) rating.
        enum:
          - mpaaG
          - mpaaNc17
          - mpaaPg
          - mpaaPg13
          - mpaaR
          - mpaaUnrated
        type: string
        required: false
      mtrcbRating:
        description: The video's rating from the Movie and Television Review and Classification Board (Philippines).
        enum:
          - mtrcbG
          - mtrcbPg
          - mtrcbR13
          - mtrcbR16
          - mtrcbR18
          - mtrcbUnrated
          - mtrcbX
        type: string
        required: false
      nbcRating:
        description: The video's rating from the Maldives National Bureau of Classification.
        enum:
          - nbc12plus
          - nbc15plus
          - nbc18plus
          - nbc18plusr
          - nbcG
          - nbcPg
          - nbcPu
          - nbcUnrated
        type: string
        required: false
      nbcplRating:
        description: The video's rating in Poland.
        enum:
          - nbcpl18plus
          - nbcplI
          - nbcplIi
          - nbcplIii
          - nbcplIv
          - nbcplUnrated
        type: string
        required: false
      nfrcRating:
        description: The video's rating from the Bulgarian National Film Center.
        enum:
          - nfrcA
          - nfrcB
          - nfrcC
          - nfrcD
          - nfrcUnrated
          - nfrcX
        type: string
        required: false
      nfvcbRating:
        description: The video's rating from Nigeria's National Film and Video Censors Board.
        enum:
          - nfvcb12
          - nfvcb12a
          - nfvcb15
          - nfvcb18
          - nfvcbG
          - nfvcbPg
          - nfvcbRe
          - nfvcbUnrated
        type: string
        required: false
      nkclvRating:
        description: The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
        enum:
          - nkclv12plus
          - nkclv18plus
          - nkclv7plus
          - nkclvU
          - nkclvUnrated
        type: string
        required: false
      oflcRating:
        description: The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
        enum:
          - oflcG
          - oflcM
          - oflcPg
          - oflcR13
          - oflcR15
          - oflcR16
          - oflcR18
          - oflcRp13
          - oflcRp16
          - oflcUnrated
        type: string
        required: false
      pefilmRating:
        description: The video's rating in Peru.
        enum:
          - pefilm14
          - pefilm18
          - pefilmPg
          - pefilmPt
          - pefilmUnrated
        type: string
        required: false
      rcnofRating:
        description: 'The video''s rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.'
        enum:
          - rcnofI
          - rcnofIi
          - rcnofIii
          - rcnofIv
          - rcnofUnrated
          - rcnofV
          - rcnofVi
        type: string
        required: false
      resorteviolenciaRating:
        description: The video's rating in Venezuela.
        enum:
          - resorteviolenciaA
          - resorteviolenciaB
          - resorteviolenciaC
          - resorteviolenciaD
          - resorteviolenciaE
          - resorteviolenciaUnrated
        type: string
        required: false
      rtcRating:
        description: 'The video''s General Directorate of Radio, Television and Cinematography (Mexico) rating.'
        enum:
          - rtcA
          - rtcAa
          - rtcB
          - rtcB15
          - rtcC
          - rtcD
          - rtcUnrated
        type: string
        required: false
      rteRating:
        description: The video's rating from Ireland's Raidió Teilifís Éireann.
        enum:
          - rteCh
          - rteGa
          - rteMa
          - rtePs
          - rteUnrated
        type: string
        required: false
      russiaRating:
        description: The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
        enum:
          - russia0
          - russia12
          - russia16
          - russia18
          - russia6
          - russiaUnrated
        type: string
        required: false
      skfilmRating:
        description: The video's rating in Slovakia.
        enum:
          - skfilmG
          - skfilmP2
          - skfilmP5
          - skfilmP8
          - skfilmUnrated
        type: string
        required: false
      smaisRating:
        description: The video's rating in Iceland.
        enum:
          - smais12
          - smais14
          - smais16
          - smais18
          - smais7
          - smaisL
          - smaisUnrated
        type: string
        required: false
      smsaRating:
        description: The video's rating from Statens medieråd (Sweden's National Media Council).
        enum:
          - smsa11
          - smsa15
          - smsa7
          - smsaA
          - smsaUnrated
        type: string
        required: false
      tvpgRating:
        description: The video's TV Parental Guidelines (TVPG) rating.
        enum:
          - pg14
          - tvpgG
          - tvpgMa
          - tvpgPg
          - tvpgUnrated
          - tvpgY
          - tvpgY7
          - tvpgY7Fv
        type: string
        required: false
      ytRating:
        description: A rating that YouTube uses to identify age-restricted content.
        enum:
          - ytAgeRestricted
        type: string
        required: false
  FanFundingEvent:
    description: A fanFundingEvent resource represents a fan funding event on a YouTube channel. Fan funding events occur when a user gives one-time monetary support to the channel owner.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the fan funding event.
        type: string
        required: false
      kind:
        default: 'youtube#fanFundingEvent'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#fanFundingEvent".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the fan funding event.
        type: FanFundingEventSnippet
        required: false
  FanFundingEventListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of fan funding events that match the request criteria.
        items:
          type: FanFundingEvent
        type: array
        required: false
      kind:
        default: 'youtube#fanFundingEventListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#fanFundingEventListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  FanFundingEventSnippet:
    properties:
      amountMicros:
        description: 'The amount of funding in micros of fund_currency. e.g., 1 is represented'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      channelId:
        description: Channel id where the funding event occurred.
        type: string
        required: false
      commentText:
        description: The text contents of the comment left by the user.
        type: string
        required: false
      createdAt:
        description: 'The date and time when the funding occurred. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      currency:
        description: The currency in which the fund was made. ISO 4217.
        type: string
        required: false
      displayString:
        description: 'A rendered string that displays the fund amount and currency (e.g., "$1.00"). The string is rendered for the given language.'
        type: string
        required: false
      supporterDetails:
        description: Details about the supporter. Only filled if the event was made public by the user.
        type: ChannelProfileDetails
        required: false
  GeoPoint:
    description: 'Geographical coordinates of a point, in WGS84.'
    properties:
      altitude:
        description: 'Altitude above the reference ellipsoid, in meters.'
        format: double
        type: number
        required: false
      latitude:
        description: Latitude in degrees.
        format: double
        type: number
        required: false
      longitude:
        description: Longitude in degrees.
        format: double
        type: number
        required: false
  GuideCategory:
    description: 'A guideCategory resource identifies a category that YouTube algorithmically assigns based on a channel''s content or other indicators, such as the channel''s popularity. The list is similar to video categories, with the difference being that a video''s uploader can assign a video category but only YouTube can assign a channel category.'
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the guide category.
        type: string
        required: false
      kind:
        default: 'youtube#guideCategory'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#guideCategory".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the category, such as its title.'
        type: GuideCategorySnippet
        required: false
  GuideCategoryListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: 'A list of categories that can be associated with YouTube channels. In this map, the category ID is the map key, and its value is the corresponding guideCategory resource.'
        items:
          type: GuideCategory
        type: array
        required: false
      kind:
        default: 'youtube#guideCategoryListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#guideCategoryListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  GuideCategorySnippet:
    description: Basic details about a guide category.
    properties:
      channelId:
        default: UCBR8-60-B28hp2BmDPdntcQ
        type: string
        required: false
      title:
        description: Description of the guide category.
        type: string
        required: false
  I18nLanguage:
    description: An i18nLanguage resource identifies a UI language currently supported by YouTube.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the i18n language.
        type: string
        required: false
      kind:
        default: 'youtube#i18nLanguage'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguage".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the i18n language, such as language code and human-readable name.'
        type: I18nLanguageSnippet
        required: false
  I18nLanguageListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: 'A list of supported i18n languages. In this map, the i18n language ID is the map key, and its value is the corresponding i18nLanguage resource.'
        items:
          type: I18nLanguage
        type: array
        required: false
      kind:
        default: 'youtube#i18nLanguageListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguageListResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  I18nLanguageSnippet:
    description: 'Basic details about an i18n language, such as language code and human-readable name.'
    properties:
      hl:
        description: A short BCP-47 code that uniquely identifies a language.
        type: string
        required: false
      name:
        description: The human-readable name of the language in the language itself.
        type: string
        required: false
  I18nRegion:
    description: A i18nRegion resource identifies a region where YouTube is available.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the i18n region.
        type: string
        required: false
      kind:
        default: 'youtube#i18nRegion'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegion".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the i18n region, such as region code and human-readable name.'
        type: I18nRegionSnippet
        required: false
  I18nRegionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: 'A list of regions where YouTube is available. In this map, the i18n region ID is the map key, and its value is the corresponding i18nRegion resource.'
        items:
          type: I18nRegion
        type: array
        required: false
      kind:
        default: 'youtube#i18nRegionListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegionListResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  I18nRegionSnippet:
    description: 'Basic details about an i18n region, such as region code and human-readable name.'
    properties:
      gl:
        description: The region code as a 2-letter ISO country code.
        type: string
        required: false
      name:
        description: The human-readable name of the region.
        type: string
        required: false
  ImageSettings:
    description: Branding properties for images associated with the channel.
    properties:
      backgroundImageUrl:
        description: 'The URL for the background image shown on the video watch page. The image should be 1200px by 615px, with a maximum file size of 128k.'
        type: LocalizedProperty
        required: false
      bannerExternalUrl:
        description: 'This is used only in update requests; if it''s set, we use this URL to generate all of the above banner URLs.'
        type: string
        required: false
      bannerImageUrl:
        description: Banner image. Desktop size (1060x175).
        type: string
        required: false
      bannerMobileExtraHdImageUrl:
        description: Banner image. Mobile size high resolution (1440x395).
        type: string
        required: false
      bannerMobileHdImageUrl:
        description: Banner image. Mobile size high resolution (1280x360).
        type: string
        required: false
      bannerMobileImageUrl:
        description: Banner image. Mobile size (640x175).
        type: string
        required: false
      bannerMobileLowImageUrl:
        description: Banner image. Mobile size low resolution (320x88).
        type: string
        required: false
      bannerMobileMediumHdImageUrl:
        description: Banner image. Mobile size medium/high resolution (960x263).
        type: string
        required: false
      bannerTabletExtraHdImageUrl:
        description: Banner image. Tablet size extra high resolution (2560x424).
        type: string
        required: false
      bannerTabletHdImageUrl:
        description: Banner image. Tablet size high resolution (2276x377).
        type: string
        required: false
      bannerTabletImageUrl:
        description: Banner image. Tablet size (1707x283).
        type: string
        required: false
      bannerTabletLowImageUrl:
        description: Banner image. Tablet size low resolution (1138x188).
        type: string
        required: false
      bannerTvHighImageUrl:
        description: Banner image. TV size high resolution (1920x1080).
        type: string
        required: false
      bannerTvImageUrl:
        description: Banner image. TV size extra high resolution (2120x1192).
        type: string
        required: false
      bannerTvLowImageUrl:
        description: Banner image. TV size low resolution (854x480).
        type: string
        required: false
      bannerTvMediumImageUrl:
        description: Banner image. TV size medium resolution (1280x720).
        type: string
        required: false
      largeBrandedBannerImageImapScript:
        description: The image map script for the large banner image.
        type: LocalizedProperty
        required: false
      largeBrandedBannerImageUrl:
        description: The URL for the 854px by 70px image that appears below the video player in the expanded video view of the video watch page.
        type: LocalizedProperty
        required: false
      smallBrandedBannerImageImapScript:
        description: The image map script for the small banner image.
        type: LocalizedProperty
        required: false
      smallBrandedBannerImageUrl:
        description: The URL for the 640px by 70px banner image that appears below the video player in the default view of the video watch page.
        type: LocalizedProperty
        required: false
      trackingImageUrl:
        description: The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.
        type: string
        required: false
      watchIconImageUrl:
        description: The URL for the image that appears above the top-left corner of the video player. This is a 25-pixel-high image with a flexible width that cannot exceed 170 pixels.
        type: string
        required: false
  IngestionInfo:
    description: Describes information necessary for ingesting an RTMP or an HTTP stream.
    properties:
      backupIngestionAddress:
        description: The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL.
        type: string
        required: false
      ingestionAddress:
        description: |-
          The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL.

          Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format:

          STREAM_URL/STREAM_NAME
        type: string
        required: false
      streamName:
        description: The HTTP or RTMP stream name that YouTube assigns to the video stream.
        type: string
        required: false
  InvideoBranding:
    properties:
      imageBytes:
        format: byte
        type: string
        facets:
          format: string
        required: false
      imageUrl:
        type: string
        required: false
      position:
        type: InvideoPosition
        required: false
      targetChannelId:
        type: string
        required: false
      timing:
        type: InvideoTiming
        required: false
  InvideoPosition:
    description: 'Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.'
    properties:
      cornerPosition:
        description: Describes in which corner of the video the visual widget will appear.
        enum:
          - bottomLeft
          - bottomRight
          - topLeft
          - topRight
        type: string
        required: false
      type:
        description: Defines the position type.
        enum:
          - corner
        type: string
        required: false
  InvideoPromotion:
    description: Describes an invideo promotion campaign consisting of multiple promoted items. A campaign belongs to a single channel_id.
    properties:
      defaultTiming:
        description: The default temporal position within the video where the promoted item will be displayed. Can be overriden by more specific timing in the item.
        type: InvideoTiming
        required: false
      items:
        description: List of promoted items in decreasing priority.
        items:
          type: PromotedItem
        type: array
        required: false
      position:
        description: The spatial position within the video where the promoted item will be displayed.
        type: InvideoPosition
        required: false
      useSmartTiming:
        description: Indicates whether the channel's promotional campaign uses "smart timing." This feature attempts to show promotions at a point in the video when they are more likely to be clicked and less likely to disrupt the viewing experience. This feature also picks up a single promotion to show on each video.
        type: boolean
        required: false
  InvideoTiming:
    description: Describes a temporal position of a visual widget inside a video.
    properties:
      durationMs:
        description: 'Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      offsetMs:
        description: 'Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      type:
        description: 'Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.'
        enum:
          - offsetFromEnd
          - offsetFromStart
        type: string
        required: false
  LanguageTag:
    properties:
      value:
        type: string
        required: false
  LiveBroadcast:
    description: 'A liveBroadcast resource represents an event that will be streamed, via live video, on YouTube.'
    properties:
      contentDetails:
        description: 'The contentDetails object contains information about the event''s video content, such as whether the content can be shown in an embedded video player or if it will be archived and therefore available for viewing after the event has concluded.'
        type: LiveBroadcastContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the broadcast.
        type: string
        required: false
      kind:
        default: 'youtube#liveBroadcast'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcast".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the event, including its title, description, start time, and end time.'
        type: LiveBroadcastSnippet
        required: false
      statistics:
        description: The statistics object contains info about the event's current stats. These include concurrent viewers and total chat count. Statistics can change (in either direction) during the lifetime of an event. Statistics are only returned while the event is live.
        type: LiveBroadcastStatistics
        required: false
      status:
        description: The status object contains information about the event's status.
        type: LiveBroadcastStatus
        required: false
      topicDetails:
        type: LiveBroadcastTopicDetails
        required: false
  LiveBroadcastContentDetails:
    description: Detailed settings of a broadcast.
    properties:
      boundStreamId:
        description: This value uniquely identifies the live stream bound to the broadcast.
        type: string
        required: false
      boundStreamLastUpdateTimeMs:
        description: The date and time that the live stream referenced by boundStreamId was last updated.
        format: rfc3339
        type: datetime
        required: false
      closedCaptionsType:
        enum:
          - closedCaptionsDisabled
          - closedCaptionsEmbedded
          - closedCaptionsHttpPost
        type: string
        required: false
      enableClosedCaptions:
        description: 'This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST.'
        type: boolean
        required: false
      enableContentEncryption:
        description: This setting indicates whether YouTube should enable content encryption for the broadcast.
        type: boolean
        required: false
      enableDvr:
        description: |-
          This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true.



          Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends.
        type: boolean
        required: false
      enableEmbed:
        description: 'This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video.'
        type: boolean
        required: false
      enableLowLatency:
        description: Indicates whether this broadcast has low latency enabled.
        type: boolean
        required: false
      monitorStream:
        description: 'The monitorStream object contains information about the monitor stream, which the broadcaster can use to review the event content before the broadcast stream is shown publicly.'
        type: MonitorStreamInfo
        required: false
      projection:
        description: The projection format of this broadcast. This defaults to rectangular.
        enum:
          - '360'
          - rectangular
        type: string
        required: false
      recordFromStart:
        description: |-
          Automatically start recording after the event goes live. The default value for this property is true.



          Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback.
        type: boolean
        required: false
      startWithSlate:
        description: 'This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast''s status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint''s eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers.'
        type: boolean
        required: false
  LiveBroadcastListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of broadcasts that match the request criteria.
        items:
          type: LiveBroadcast
        type: array
        required: false
      kind:
        default: 'youtube#liveBroadcastListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcastListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  LiveBroadcastSnippet:
    properties:
      actualEndTime:
        description: 'The date and time that the broadcast actually ended. This information is only available once the broadcast''s state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      actualStartTime:
        description: 'The date and time that the broadcast actually started. This information is only available once the broadcast''s state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.
        type: string
        required: false
      description:
        description: 'The broadcast''s description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.'
        type: string
        required: false
      isDefaultBroadcast:
        type: boolean
        required: false
      liveChatId:
        description: The id of the live chat for this broadcast.
        type: string
        required: false
      publishedAt:
        description: 'The date and time that the broadcast was added to YouTube''s live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      scheduledEndTime:
        description: 'The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      scheduledStartTime:
        description: 'The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the broadcast. For each nested object in this object, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.
        type: string
        required: false
  LiveBroadcastStatistics:
    description: Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.
    properties:
      concurrentViewers:
        description: 'The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      totalChatCount:
        description: 'The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
  LiveBroadcastStatus:
    properties:
      lifeCycleStatus:
        description: The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.
        enum:
          - abandoned
          - complete
          - completeStarting
          - created
          - live
          - liveStarting
          - ready
          - reclaimed
          - revoked
          - testStarting
          - testing
        type: string
        required: false
      liveBroadcastPriority:
        description: Priority of the live broadcast event (internal state).
        enum:
          - high
          - low
          - normal
        type: string
        required: false
      privacyStatus:
        description: 'The broadcast''s privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.'
        enum:
          - private
          - public
          - unlisted
        type: string
        required: false
      recordingStatus:
        description: The broadcast's recording status.
        enum:
          - notRecording
          - recorded
          - recording
        type: string
        required: false
  LiveBroadcastTopic:
    properties:
      snippet:
        description: Information about the topic matched.
        type: LiveBroadcastTopicSnippet
        required: false
      type:
        description: The type of the topic.
        enum:
          - videoGame
        type: string
        required: false
      unmatched:
        description: If this flag is set it means that we have not been able to match the topic title and type provided to a known entity.
        type: boolean
        required: false
  LiveBroadcastTopicDetails:
    properties:
      topics:
        items:
          type: LiveBroadcastTopic
        type: array
        required: false
  LiveBroadcastTopicSnippet:
    properties:
      name:
        description: The name of the topic.
        type: string
        required: false
      releaseDate:
        description: 'The date at which the topic was released. Filled for types: videoGame'
        type: string
        required: false
  LiveChatBan:
    description: A liveChatBan resource represents a ban for a YouTube live chat.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the ban.
        type: string
        required: false
      kind:
        default: 'youtube#liveChatBan'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatBan".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the ban.
        type: LiveChatBanSnippet
        required: false
  LiveChatBanSnippet:
    properties:
      banDurationSeconds:
        description: 'The duration of a ban, only filled if the ban has type TEMPORARY.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      bannedUserDetails:
        type: ChannelProfileDetails
        required: false
      liveChatId:
        description: The chat this ban is pertinent to.
        type: string
        required: false
      type:
        description: The type of ban.
        enum:
          - permanent
          - temporary
        type: string
        required: false
  LiveChatFanFundingEventDetails:
    properties:
      amountDisplayString:
        description: A rendered string that displays the fund amount and currency to the user.
        type: string
        required: false
      amountMicros:
        description: The amount of the fund.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      currency:
        description: The currency in which the fund was made.
        type: string
        required: false
      userComment:
        description: The comment added by the user to this fan funding event.
        type: string
        required: false
  LiveChatMessage:
    description: A liveChatMessage resource represents a chat message in a YouTube Live Chat.
    properties:
      authorDetails:
        description: The authorDetails object contains basic details about the user that posted this message.
        type: LiveChatMessageAuthorDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the message.
        type: string
        required: false
      kind:
        default: 'youtube#liveChatMessage'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessage".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the message.
        type: LiveChatMessageSnippet
        required: false
  LiveChatMessageAuthorDetails:
    properties:
      channelId:
        description: The YouTube channel ID.
        type: string
        required: false
      channelUrl:
        description: The channel's URL.
        type: string
        required: false
      displayName:
        description: The channel's display name.
        type: string
        required: false
      isChatModerator:
        description: Whether the author is a moderator of the live chat.
        type: boolean
        required: false
      isChatOwner:
        description: Whether the author is the owner of the live chat.
        type: boolean
        required: false
      isChatSponsor:
        description: Whether the author is a sponsor of the live chat.
        type: boolean
        required: false
      isVerified:
        description: Whether the author's identity has been verified by YouTube.
        type: boolean
        required: false
      profileImageUrl:
        description: The channels's avatar URL.
        type: string
        required: false
  LiveChatMessageDeletedDetails:
    properties:
      deletedMessageId:
        type: string
        required: false
  LiveChatMessageListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of live chat messages.
        items:
          type: LiveChatMessage
        type: array
        required: false
      kind:
        default: 'youtube#liveChatMessageListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessageListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      offlineAt:
        description: 'The date and time when the underlying stream went offline. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      pageInfo:
        type: PageInfo
        required: false
      pollingIntervalMillis:
        description: The amount of time the client should wait before polling again.
        type: integer
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  LiveChatMessageRetractedDetails:
    properties:
      retractedMessageId:
        type: string
        required: false
  LiveChatMessageSnippet:
    properties:
      authorChannelId:
        description: 'The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action'
        type: string
        required: false
      displayMessage:
        description: 'Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.'
        type: string
        required: false
      fanFundingEventDetails:
        description: 'Details about the funding event, this is only set if the type is ''fanFundingEvent''.'
        type: LiveChatFanFundingEventDetails
        required: false
      hasDisplayContent:
        description: Whether the message has display content that should be displayed to users.
        type: boolean
        required: false
      liveChatId:
        type: string
        required: false
      messageDeletedDetails:
        type: LiveChatMessageDeletedDetails
        required: false
      messageRetractedDetails:
        type: LiveChatMessageRetractedDetails
        required: false
      pollClosedDetails:
        type: LiveChatPollClosedDetails
        required: false
      pollEditedDetails:
        type: LiveChatPollEditedDetails
        required: false
      pollOpenedDetails:
        type: LiveChatPollOpenedDetails
        required: false
      pollVotedDetails:
        type: LiveChatPollVotedDetails
        required: false
      publishedAt:
        description: 'The date and time when the message was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      textMessageDetails:
        description: 'Details about the text message, this is only set if the type is ''textMessageEvent''.'
        type: LiveChatTextMessageDetails
        required: false
      type:
        description: 'The type of message, this will always be present, it determines the contents of the message as well as which fields will be present.'
        enum:
          - chatEndedEvent
          - fanFundingEvent
          - messageDeletedEvent
          - messageRetractedEvent
          - newSponsorEvent
          - pollClosedEvent
          - pollEditedEvent
          - pollOpenedEvent
          - pollVotedEvent
          - sponsorOnlyModeEndedEvent
          - sponsorOnlyModeStartedEvent
          - textMessageEvent
          - tombstone
          - userBannedEvent
        type: string
        required: false
      userBannedDetails:
        type: LiveChatUserBannedMessageDetails
        required: false
  LiveChatModerator:
    description: 'A liveChatModerator resource represents a moderator for a YouTube live chat. A chat moderator has the ability to ban/unban users from a chat, remove message, etc.'
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the moderator.
        type: string
        required: false
      kind:
        default: 'youtube#liveChatModerator'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModerator".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the moderator.
        type: LiveChatModeratorSnippet
        required: false
  LiveChatModeratorListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of moderators that match the request criteria.
        items:
          type: LiveChatModerator
        type: array
        required: false
      kind:
        default: 'youtube#liveChatModeratorListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModeratorListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  LiveChatModeratorSnippet:
    properties:
      liveChatId:
        description: The ID of the live chat this moderator can act on.
        type: string
        required: false
      moderatorDetails:
        description: Details about the moderator.
        type: ChannelProfileDetails
        required: false
  LiveChatPollClosedDetails:
    properties:
      pollId:
        description: The id of the poll that was closed.
        type: string
        required: false
  LiveChatPollEditedDetails:
    properties:
      id:
        type: string
        required: false
      items:
        items:
          type: LiveChatPollItem
        type: array
        required: false
      prompt:
        type: string
        required: false
  LiveChatPollItem:
    properties:
      description:
        description: Plain text description of the item.
        type: string
        required: false
      itemId:
        type: string
        required: false
  LiveChatPollOpenedDetails:
    properties:
      id:
        type: string
        required: false
      items:
        items:
          type: LiveChatPollItem
        type: array
        required: false
      prompt:
        type: string
        required: false
  LiveChatPollVotedDetails:
    properties:
      itemId:
        description: The poll item the user chose.
        type: string
        required: false
      pollId:
        description: The poll the user voted on.
        type: string
        required: false
  LiveChatTextMessageDetails:
    properties:
      messageText:
        description: The user's message.
        type: string
        required: false
  LiveChatUserBannedMessageDetails:
    properties:
      banDurationSeconds:
        description: The duration of the ban. This property is only present if the banType is temporary.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      banType:
        description: The type of ban.
        enum:
          - permanent
          - temporary
        type: string
        required: false
      bannedUserDetails:
        description: The details of the user that was banned.
        type: ChannelProfileDetails
        required: false
  LiveStream:
    description: A live stream describes a live ingestion point.
    properties:
      cdn:
        description: The cdn object defines the live stream's content delivery network (CDN) settings. These settings provide details about the manner in which you stream your content to YouTube.
        type: CdnSettings
        required: false
      contentDetails:
        description: 'The content_details object contains information about the stream, including the closed captions ingestion URL.'
        type: LiveStreamContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the stream.
        type: string
        required: false
      kind:
        default: 'youtube#liveStream'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStream".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the stream, including its channel, title, and description.'
        type: LiveStreamSnippet
        required: false
      status:
        description: The status object contains information about live stream's status.
        type: LiveStreamStatus
        required: false
  LiveStreamConfigurationIssue:
    properties:
      description:
        description: The long-form description of the issue and how to resolve it.
        type: string
        required: false
      reason:
        description: The short-form reason for this issue.
        type: string
        required: false
      severity:
        description: How severe this issue is to the stream.
        enum:
          - error
          - info
          - warning
        type: string
        required: false
      type:
        description: The kind of error happening.
        enum:
          - audioBitrateHigh
          - audioBitrateLow
          - audioBitrateMismatch
          - audioCodec
          - audioCodecMismatch
          - audioSampleRate
          - audioSampleRateMismatch
          - audioStereoMismatch
          - audioTooManyChannels
          - badContainer
          - bitrateHigh
          - bitrateLow
          - frameRateHigh
          - framerateMismatch
          - gopMismatch
          - gopSizeLong
          - gopSizeOver
          - gopSizeShort
          - interlacedVideo
          - multipleAudioStreams
          - multipleVideoStreams
          - noAudioStream
          - noVideoStream
          - openGop
          - resolutionMismatch
          - videoBitrateMismatch
          - videoCodec
          - videoCodecMismatch
          - videoIngestionStarved
          - videoInterlaceMismatch
          - videoProfileMismatch
          - videoResolutionSuboptimal
          - videoResolutionUnsupported
        type: string
        required: false
  LiveStreamContentDetails:
    description: Detailed settings of a stream.
    properties:
      closedCaptionsIngestionUrl:
        description: The ingestion URL where the closed captions of this stream are sent.
        type: string
        required: false
      isReusable:
        description: |-
          Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times.

          If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways:  
          - A non-reusable stream can only be bound to one broadcast. 
          - A non-reusable stream might be deleted by an automated process after the broadcast ends. 
          - The  liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream.
        type: boolean
        required: false
  LiveStreamHealthStatus:
    properties:
      configurationIssues:
        description: The configurations issues on this stream
        items:
          type: LiveStreamConfigurationIssue
        type: array
        required: false
      lastUpdateTimeSeconds:
        description: The last time this status was updated (in seconds)
        format: uint64
        type: string
        facets:
          format: string
        required: false
      status:
        description: The status code of this stream
        enum:
          - bad
          - good
          - noData
          - ok
          - revoked
        type: string
        required: false
  LiveStreamListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of live streams that match the request criteria.
        items:
          type: LiveStream
        type: array
        required: false
      kind:
        default: 'youtube#liveStreamListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStreamListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  LiveStreamSnippet:
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.
        type: string
        required: false
      description:
        description: The stream's description. The value cannot be longer than 10000 characters.
        type: string
        required: false
      isDefaultStream:
        type: boolean
        required: false
      publishedAt:
        description: 'The date and time that the stream was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      title:
        description: The stream's title. The value must be between 1 and 128 characters long.
        type: string
        required: false
  LiveStreamStatus:
    description: Brief description of the live stream status.
    properties:
      healthStatus:
        description: The health status of the stream.
        type: LiveStreamHealthStatus
        required: false
      streamStatus:
        enum:
          - active
          - created
          - error
          - inactive
          - ready
        type: string
        required: false
  LocalizedProperty:
    properties:
      default:
        type: string
        required: false
      defaultLanguage:
        description: The language of the default property.
        type: LanguageTag
        required: false
      localized:
        items:
          type: LocalizedString
        type: array
        required: false
  LocalizedString:
    properties:
      language:
        type: string
        required: false
      value:
        type: string
        required: false
  MonitorStreamInfo:
    description: Settings and Info of the monitor stream
    properties:
      broadcastStreamDelayMs:
        description: 'If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.'
        type: integer
        required: false
      embedHtml:
        description: HTML code that embeds a player that plays the monitor stream.
        type: string
        required: false
      enableMonitorStream:
        description: |-
          This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints.

          You need to set this value to true if you intend to have a broadcast delay for your event.

          Note: This property cannot be updated once the broadcast is in the testing or live state.
        type: boolean
        required: false
  PageInfo:
    description: 'Paging details for lists of resources, including total number of items available and number of resources returned in a single page.'
    properties:
      resultsPerPage:
        description: The number of results included in the API response.
        format: int32
        type: integer
        required: false
      totalResults:
        description: The total number of results in the result set.
        format: int32
        type: integer
        required: false
  Playlist:
    description: |-
      A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private.

      YouTube also uses playlists to identify special collections of videos for a channel, such as:  
      - uploaded videos 
      - favorite videos 
      - positively rated (liked) videos 
      - watch history 
      - watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the  channel resource for a given channel.

      You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods.
    properties:
      contentDetails:
        description: The contentDetails object contains information like video count.
        type: PlaylistContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the playlist.
        type: string
        required: false
      kind:
        default: 'youtube#playlist'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlist".'
        type: string
        required: false
      localizations:
        additionalProperties:
          description: 'The language tag, using string since map_key require simple types.'
          type: PlaylistLocalization
        description: Localizations for different languages
        type: object
        required: false
      player:
        description: The player object contains information that you would use to play the playlist in an embedded player.
        type: PlaylistPlayer
        required: false
      snippet:
        description: 'The snippet object contains basic details about the playlist, such as its title and description.'
        type: PlaylistSnippet
        required: false
      status:
        description: The status object contains status information for the playlist.
        type: PlaylistStatus
        required: false
  PlaylistContentDetails:
    properties:
      itemCount:
        description: The number of videos in the playlist.
        type: integer
        required: false
  PlaylistItem:
    description: |-
      A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem  resource contains details about the included resource that pertain specifically to how that resource is used in that playlist.

      YouTube uses playlists to identify special collections of videos for a channel, such as:  
      - uploaded videos 
      - favorite videos 
      - positively rated (liked) videos 
      - watch history 
      - watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information.

      You can retrieve the playlist IDs for each of these lists from the  channel resource  for a given channel. You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.
    properties:
      contentDetails:
        description: The contentDetails object is included in the resource if the included item is a YouTube video. The object contains additional information about the video.
        type: PlaylistItemContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the playlist item.
        type: string
        required: false
      kind:
        default: 'youtube#playlistItem'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItem".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the playlist item, such as its title and position in the playlist.'
        type: PlaylistItemSnippet
        required: false
      status:
        description: The status object contains information about the playlist item's privacy status.
        type: PlaylistItemStatus
        required: false
  PlaylistItemContentDetails:
    properties:
      endAt:
        description: 'The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.'
        type: string
        required: false
      note:
        description: A user-generated note for this item.
        type: string
        required: false
      startAt:
        description: 'The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.'
        type: string
        required: false
      videoId:
        description: 'The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.'
        type: string
        required: false
  PlaylistItemListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of playlist items that match the request criteria.
        items:
          type: PlaylistItem
        type: array
        required: false
      kind:
        default: 'youtube#playlistItemListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItemListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  PlaylistItemSnippet:
    description: 'Basic details about a playlist, including title, description and thumbnails.'
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the user that added the item to the playlist.
        type: string
        required: false
      channelTitle:
        description: Channel title for the channel that the playlist item belongs to.
        type: string
        required: false
      description:
        description: The item's description.
        type: string
        required: false
      playlistId:
        description: The ID that YouTube uses to uniquely identify the playlist that the playlist item is in.
        type: string
        required: false
      position:
        description: 'The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.'
        type: integer
        required: false
      publishedAt:
        description: 'The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      resourceId:
        description: The id object contains information that can be used to uniquely identify the resource that is included in the playlist as the playlist item.
        type: ResourceId
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the playlist item. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The item's title.
        type: string
        required: false
  PlaylistItemStatus:
    description: Information about the playlist item's privacy status.
    properties:
      privacyStatus:
        description: This resource's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
        required: false
  PlaylistListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of playlists that match the request criteria.
        items:
          type: Playlist
        type: array
        required: false
      kind:
        default: 'youtube#playlistListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  PlaylistLocalization:
    description: Playlist localization setting
    properties:
      description:
        description: The localized strings for playlist's description.
        type: string
        required: false
      title:
        description: The localized strings for playlist's title.
        type: string
        required: false
  PlaylistPlayer:
    properties:
      embedHtml:
        description: An <iframe> tag that embeds a player that will play the playlist.
        type: string
        required: false
  PlaylistSnippet:
    description: 'Basic details about a playlist, including title, description and thumbnails.'
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel that published the playlist.
        type: string
        required: false
      channelTitle:
        description: The channel title of the channel that the video belongs to.
        type: string
        required: false
      defaultLanguage:
        description: The language of the playlist's default title and description.
        type: string
        required: false
      description:
        description: The playlist's description.
        type: string
        required: false
      localized:
        description: 'Localized title and description, read-only.'
        type: PlaylistLocalization
        required: false
      publishedAt:
        description: 'The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      tags:
        description: Keyword tags associated with the playlist.
        items:
          type: string
        type: array
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the playlist. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The playlist's title.
        type: string
        required: false
  PlaylistStatus:
    properties:
      privacyStatus:
        description: The playlist's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
        required: false
  PromotedItem:
    description: Describes a single promoted item.
    properties:
      customMessage:
        description: A custom message to display for this promotion. This field is currently ignored unless the promoted item is a website.
        type: string
        required: false
      id:
        description: Identifies the promoted item.
        type: PromotedItemId
        required: false
      promotedByContentOwner:
        description: 'If true, the content owner''s name will be used when displaying the promotion. This field can only be set when the update is made on behalf of the content owner.'
        type: boolean
        required: false
      timing:
        description: 'The temporal position within the video where the promoted item will be displayed. If present, it overrides the default timing.'
        type: InvideoTiming
        required: false
  PromotedItemId:
    description: Describes a single promoted item id. It is a union of various possible types.
    properties:
      recentlyUploadedBy:
        description: 'If type is recentUpload, this field identifies the channel from which to take the recent upload. If missing, the channel is assumed to be the same channel for which the invideoPromotion is set.'
        type: string
        required: false
      type:
        description: Describes the type of the promoted item.
        enum:
          - recentUpload
          - video
          - website
        type: string
        required: false
      videoId:
        description: 'If the promoted item represents a video, this field represents the unique YouTube ID identifying it. This field will be present only if type has the value video.'
        type: string
        required: false
      websiteUrl:
        description: 'If the promoted item represents a website, this field represents the url pointing to the website. This field will be present only if type has the value website.'
        type: string
        required: false
  PropertyValue:
    description: A pair Property / Value.
    properties:
      property:
        description: A property.
        type: string
        required: false
      value:
        description: The property's value.
        type: string
        required: false
  ResourceId:
    description: A resource id is a generic reference that points to another YouTube resource.
    properties:
      channelId:
        description: 'The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.'
        type: string
        required: false
      kind:
        description: The type of the API resource.
        type: string
        required: false
      playlistId:
        description: 'The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.'
        type: string
        required: false
      videoId:
        description: 'The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.'
        type: string
        required: false
  SearchListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of results that match the search criteria.
        items:
          type: SearchResult
        type: array
        required: false
      kind:
        default: 'youtube#searchListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      regionCode:
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  SearchResult:
    description: 'A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.'
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The id object contains information that can be used to uniquely identify the resource that matches the search request.
        type: ResourceId
        required: false
      kind:
        default: 'youtube#searchResult'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchResult".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about a search result, such as its title or description. For example, if the search result is a video, then the title will be the video''s title and the description will be the video''s description.'
        type: SearchResultSnippet
        required: false
  SearchResultSnippet:
    description: 'Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.'
    properties:
      channelId:
        description: The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.
        type: string
        required: false
      channelTitle:
        description: The title of the channel that published the resource that the search result identifies.
        type: string
        required: false
      description:
        description: A description of the search result.
        type: string
        required: false
      liveBroadcastContent:
        description: It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
        enum:
          - live
          - none
          - upcoming
        type: string
        required: false
      publishedAt:
        description: 'The creation date and time of the resource that the search result identifies. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The title of the search result.
        type: string
        required: false
  Sponsor:
    description: A sponsor resource represents a sponsor for a YouTube channel. A sponsor provides recurring monetary support to a creator and receives special benefits.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube assigns to uniquely identify the sponsor.
        type: string
        required: false
      kind:
        default: 'youtube#sponsor'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#sponsor".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the sponsor.
        type: SponsorSnippet
        required: false
  SponsorListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of sponsors that match the request criteria.
        items:
          type: Sponsor
        type: array
        required: false
      kind:
        default: 'youtube#sponsorListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#sponsorListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  SponsorSnippet:
    properties:
      channelId:
        description: The id of the channel being sponsored.
        type: string
        required: false
      sponsorDetails:
        description: Details about the sponsor.
        type: ChannelProfileDetails
        required: false
      sponsorSince:
        description: 'The date and time when the user became a sponsor. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
  Subscription:
    description: 'A subscription resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.'
    properties:
      contentDetails:
        description: The contentDetails object contains basic statistics about the subscription.
        type: SubscriptionContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the subscription.
        type: string
        required: false
      kind:
        default: 'youtube#subscription'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscription".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the subscription, including its title and the channel that the user subscribed to.'
        type: SubscriptionSnippet
        required: false
      subscriberSnippet:
        description: The subscriberSnippet object contains basic details about the sbuscriber.
        type: SubscriptionSubscriberSnippet
        required: false
  SubscriptionContentDetails:
    description: Details about the content to witch a subscription refers.
    properties:
      activityType:
        description: 'The type of activity this subscription is for (only uploads, everything).'
        enum:
          - all
          - uploads
        type: string
        required: false
      newItemCount:
        description: The number of new items in the subscription since its content was last read.
        type: integer
        required: false
      totalItemCount:
        description: The approximate number of items that the subscription points to.
        type: integer
        required: false
  SubscriptionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of subscriptions that match the request criteria.
        items:
          type: Subscription
        type: array
        required: false
      kind:
        default: 'youtube#subscriptionListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscriptionListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  SubscriptionSnippet:
    description: 'Basic details about a subscription, including title, description and thumbnails of the subscribed item.'
    properties:
      channelId:
        description: The ID that YouTube uses to uniquely identify the subscriber's channel.
        type: string
        required: false
      channelTitle:
        description: Channel title for the channel that the subscription belongs to.
        type: string
        required: false
      description:
        description: The subscription's details.
        type: string
        required: false
      publishedAt:
        description: 'The date and time that the subscription was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      resourceId:
        description: The id object contains information about the channel that the user subscribed to.
        type: ResourceId
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The subscription's title.
        type: string
        required: false
  SubscriptionSubscriberSnippet:
    description: 'Basic details about a subscription''s subscriber including title, description, channel ID and thumbnails.'
    properties:
      channelId:
        description: The channel ID of the subscriber.
        type: string
        required: false
      description:
        description: The description of the subscriber.
        type: string
        required: false
      thumbnails:
        description: Thumbnails for this subscriber.
        type: ThumbnailDetails
        required: false
      title:
        description: The title of the subscriber.
        type: string
        required: false
  Thumbnail:
    description: A thumbnail is an image representing a YouTube resource.
    properties:
      height:
        description: (Optional) Height of the thumbnail image.
        type: integer
        required: false
      url:
        description: The thumbnail image's URL.
        type: string
        required: false
      width:
        description: (Optional) Width of the thumbnail image.
        type: integer
        required: false
  ThumbnailDetails:
    description: Internal representation of thumbnails for a YouTube resource.
    properties:
      default:
        description: The default image for this resource.
        type: Thumbnail
        required: false
      high:
        description: The high quality image for this resource.
        type: Thumbnail
        required: false
      maxres:
        description: The maximum resolution quality image for this resource.
        type: Thumbnail
        required: false
      medium:
        description: The medium quality image for this resource.
        type: Thumbnail
        required: false
      standard:
        description: The standard quality image for this resource.
        type: Thumbnail
        required: false
  ThumbnailSetResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of thumbnails.
        items:
          type: ThumbnailDetails
        type: array
        required: false
      kind:
        default: 'youtube#thumbnailSetResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#thumbnailSetResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  TokenPagination:
    description: Stub token pagination template to suppress results.
    type: object
  Video:
    description: A video resource represents a YouTube video.
    properties:
      ageGating:
        description: Age restriction details related to a video. This data can only be retrieved by the video owner.
        type: VideoAgeGating
        required: false
      contentDetails:
        description: 'The contentDetails object contains information about the video content, including the length of the video and its aspect ratio.'
        type: VideoContentDetails
        required: false
      etag:
        description: Etag of this resource.
        type: string
        required: false
      fileDetails:
        description: 'The fileDetails object encapsulates information about the video file that was uploaded to YouTube, including the file''s resolution, duration, audio and video codecs, stream bitrates, and more. This data can only be retrieved by the video owner.'
        type: VideoFileDetails
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the video.
        type: string
        required: false
      kind:
        default: 'youtube#video'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#video".'
        type: string
        required: false
      liveStreamingDetails:
        description: 'The liveStreamingDetails object contains metadata about a live video broadcast. The object will only be present in a video resource if the video is an upcoming, live, or completed live broadcast.'
        type: VideoLiveStreamingDetails
        required: false
      localizations:
        additionalProperties:
          description: 'The language tag, using string since map_key require simple types.'
          type: VideoLocalization
        description: List with all localizations.
        type: object
        required: false
      monetizationDetails:
        description: The monetizationDetails object encapsulates information about the monetization status of the video.
        type: VideoMonetizationDetails
        required: false
      player:
        description: The player object contains information that you would use to play the video in an embedded player.
        type: VideoPlayer
        required: false
      processingDetails:
        description: |-
          The processingProgress object encapsulates information about YouTube's progress in processing the uploaded video file. The properties in the object identify the current processing status and an estimate of the time remaining until YouTube finishes processing the video. This part also indicates whether different types of data or content, such as file details or thumbnail images, are available for the video.

          The processingProgress object is designed to be polled so that the video uploaded can track the progress that YouTube has made in processing the uploaded video file. This data can only be retrieved by the video owner.
        type: VideoProcessingDetails
        required: false
      projectDetails:
        description: The projectDetails object contains information about the project specific video metadata.
        type: VideoProjectDetails
        required: false
      recordingDetails:
        description: 'The recordingDetails object encapsulates information about the location, date and address where the video was recorded.'
        type: VideoRecordingDetails
        required: false
      snippet:
        description: 'The snippet object contains basic details about the video, such as its title, description, and category.'
        type: VideoSnippet
        required: false
      statistics:
        description: The statistics object contains statistics about the video.
        type: VideoStatistics
        required: false
      status:
        description: 'The status object contains information about the video''s uploading, processing, and privacy statuses.'
        type: VideoStatus
        required: false
      suggestions:
        description: The suggestions object encapsulates suggestions that identify opportunities to improve the video quality or the metadata for the uploaded video. This data can only be retrieved by the video owner.
        type: VideoSuggestions
        required: false
      topicDetails:
        description: The topicDetails object encapsulates information about Freebase topics associated with the video.
        type: VideoTopicDetails
        required: false
  VideoAbuseReport:
    properties:
      comments:
        description: Additional comments regarding the abuse report.
        type: string
        required: false
      language:
        description: The language that the content was viewed in.
        type: string
        required: false
      reasonId:
        description: 'The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID.'
        type: string
        required: false
      secondaryReasonId:
        description: 'The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason.'
        type: string
        required: false
      videoId:
        description: The ID that YouTube uses to uniquely identify the video.
        type: string
        required: false
  VideoAbuseReportReason:
    description: A videoAbuseReportReason resource identifies a reason that a video could be reported as abusive. Video abuse report reasons are used with video.ReportAbuse.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID of this abuse report reason.
        type: string
        required: false
      kind:
        default: 'youtube#videoAbuseReportReason'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoAbuseReportReason".'
        type: string
        required: false
      snippet:
        description: The snippet object contains basic details about the abuse report reason.
        type: VideoAbuseReportReasonSnippet
        required: false
  VideoAbuseReportReasonListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of valid abuse reasons that are used with video.ReportAbuse.
        items:
          type: VideoAbuseReportReason
        type: array
        required: false
      kind:
        default: 'youtube#videoAbuseReportReasonListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoAbuseReportReasonListResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  VideoAbuseReportReasonSnippet:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      label:
        description: The localized label belonging to this abuse report reason.
        type: string
        required: false
      secondaryReasons:
        description: 'The secondary reasons associated with this reason, if any are available. (There might be 0 or more.)'
        items:
          type: VideoAbuseReportSecondaryReason
        type: array
        required: false
  VideoAbuseReportSecondaryReason:
    properties:
      id:
        description: The ID of this abuse report secondary reason.
        type: string
        required: false
      label:
        description: The localized label for this abuse report secondary reason.
        type: string
        required: false
  VideoAgeGating:
    properties:
      alcoholContent:
        description: 'Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content.'
        type: boolean
        required: false
      restricted:
        description: Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present.
        type: boolean
        required: false
      videoGameRating:
        description: 'Video game rating, if any.'
        enum:
          - anyone
          - m15Plus
          - m16Plus
          - m17Plus
        type: string
        required: false
  VideoCategory:
    description: A videoCategory resource identifies a category that has been or could be associated with uploaded videos.
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      id:
        description: The ID that YouTube uses to uniquely identify the video category.
        type: string
        required: false
      kind:
        default: 'youtube#videoCategory'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategory".'
        type: string
        required: false
      snippet:
        description: 'The snippet object contains basic details about the video category, including its title.'
        type: VideoCategorySnippet
        required: false
  VideoCategoryListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: 'A list of video categories that can be associated with YouTube videos. In this map, the video category ID is the map key, and its value is the corresponding videoCategory resource.'
        items:
          type: VideoCategory
        type: array
        required: false
      kind:
        default: 'youtube#videoCategoryListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategoryListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  VideoCategorySnippet:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      assignable:
        type: boolean
        required: false
      channelId:
        default: UCBR8-60-B28hp2BmDPdntcQ
        description: The YouTube channel that created the video category.
        type: string
        required: false
      title:
        description: The video category's title.
        type: string
        required: false
  VideoContentDetails:
    description: Details about the content of a YouTube Video.
    properties:
      caption:
        description: The value of captions indicates whether the video has captions or not.
        enum:
          - 'false'
          - 'true'
        type: string
        required: false
      contentRating:
        description: Specifies the ratings that the video received under various rating schemes.
        type: ContentRating
        required: false
      countryRestriction:
        description: The countryRestriction object contains information about the countries where a video is (or is not) viewable.
        type: AccessPolicy
        required: false
      definition:
        description: The value of definition indicates whether the video is available in high definition or only in standard definition.
        enum:
          - hd
          - sd
        type: string
        required: false
      dimension:
        description: The value of dimension indicates whether the video is available in 3D or in 2D.
        type: string
        required: false
      duration:
        description: 'The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long.'
        type: string
        required: false
      hasCustomThumbnail:
        description: Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader.
        type: boolean
        required: false
      licensedContent:
        description: The value of is_license_content indicates whether the video is licensed content.
        type: boolean
        required: false
      projection:
        description: Specifies the projection format of the video.
        enum:
          - '360'
          - rectangular
        type: string
        required: false
      regionRestriction:
        description: The regionRestriction object contains information about the countries where a video is (or is not) viewable. The object will contain either the contentDetails.regionRestriction.allowed property or the contentDetails.regionRestriction.blocked property.
        type: VideoContentDetailsRegionRestriction
        required: false
  VideoContentDetailsRegionRestriction:
    description: DEPRECATED Region restriction of the video.
    properties:
      allowed:
        description: 'A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.'
        items:
          type: string
        type: array
        required: false
      blocked:
        description: 'A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.'
        items:
          type: string
        type: array
        required: false
  VideoFileDetails:
    description: 'Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.'
    properties:
      audioStreams:
        description: A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.
        items:
          type: VideoFileDetailsAudioStream
        type: array
        required: false
      bitrateBps:
        description: The uploaded video file's combined (video and audio) bitrate in bits per second.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      container:
        description: The uploaded video file's container format.
        type: string
        required: false
      creationTime:
        description: |-
          The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported:  
          - Date only: YYYY-MM-DD 
          - Naive time: YYYY-MM-DDTHH:MM:SS 
          - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM
        type: string
        required: false
      durationMs:
        description: The length of the uploaded video in milliseconds.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      fileName:
        description: The uploaded file's name. This field is present whether a video file or another type of file was uploaded.
        type: string
        required: false
      fileSize:
        description: The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      fileType:
        description: 'The uploaded file''s type as detected by YouTube''s video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.'
        enum:
          - archive
          - audio
          - document
          - image
          - other
          - project
          - video
        type: string
        required: false
      videoStreams:
        description: A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.
        items:
          type: VideoFileDetailsVideoStream
        type: array
        required: false
  VideoFileDetailsAudioStream:
    description: Information about an audio stream.
    properties:
      bitrateBps:
        description: 'The audio stream''s bitrate, in bits per second.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      channelCount:
        description: The number of audio channels that the stream contains.
        type: integer
        required: false
      codec:
        description: The audio codec that the stream uses.
        type: string
        required: false
      vendor:
        description: 'A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.'
        type: string
        required: false
  VideoFileDetailsVideoStream:
    description: Information about a video stream.
    properties:
      aspectRatio:
        description: 'The video content''s display aspect ratio, which specifies the aspect ratio in which the video should be displayed.'
        format: double
        type: number
        required: false
      bitrateBps:
        description: 'The video stream''s bitrate, in bits per second.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      codec:
        description: The video codec that the stream uses.
        type: string
        required: false
      frameRateFps:
        description: 'The video stream''s frame rate, in frames per second.'
        format: double
        type: number
        required: false
      heightPixels:
        description: The encoded video content's height in pixels.
        type: integer
        required: false
      rotation:
        description: The amount that YouTube needs to rotate the original source content to properly display the video.
        enum:
          - clockwise
          - counterClockwise
          - none
          - other
          - upsideDown
        type: string
        required: false
      vendor:
        description: 'A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.'
        type: string
        required: false
      widthPixels:
        description: "The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels\_/\_height_pixels."
        type: integer
        required: false
  VideoGetRatingResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of ratings that match the request criteria.
        items:
          type: VideoRating
        type: array
        required: false
      kind:
        default: 'youtube#videoGetRatingResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoGetRatingResponse".'
        type: string
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  VideoListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
        required: false
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
        required: false
      items:
        description: A list of videos that match the request criteria.
        items:
          type: Video
        type: array
        required: false
      kind:
        default: 'youtube#videoListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoListResponse".'
        type: string
        required: false
      nextPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        type: string
        required: false
      pageInfo:
        type: PageInfo
        required: false
      prevPageToken:
        description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        type: string
        required: false
      tokenPagination:
        type: TokenPagination
        required: false
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
        required: false
  VideoLiveStreamingDetails:
    description: Details about the live streaming metadata.
    properties:
      activeLiveChatId:
        description: The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page.
        type: string
        required: false
      actualEndTime:
        description: 'The time that the broadcast actually ended. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast is over.'
        format: rfc3339
        type: datetime
        required: false
      actualStartTime:
        description: 'The time that the broadcast actually started. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast begins.'
        format: rfc3339
        type: datetime
        required: false
      concurrentViewers:
        description: 'The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      scheduledEndTime:
        description: 'The time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.'
        format: rfc3339
        type: datetime
        required: false
      scheduledStartTime:
        description: 'The time that the broadcast is scheduled to begin. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
  VideoLocalization:
    description: Localized versions of certain video properties (e.g. title).
    properties:
      description:
        description: Localized version of the video's description.
        type: string
        required: false
      title:
        description: Localized version of the video's title.
        type: string
        required: false
  VideoMonetizationDetails:
    description: Details about monetization of a YouTube Video.
    properties:
      access:
        description: The value of access indicates whether the video can be monetized or not.
        type: AccessPolicy
        required: false
  VideoPlayer:
    description: Player to be used for a video playback.
    properties:
      embedHeight:
        format: int64
        type: string
        facets:
          format: string
        required: false
      embedHtml:
        description: An <iframe> tag that embeds a player that will play the video.
        type: string
        required: false
      embedWidth:
        description: The embed width
        format: int64
        type: string
        facets:
          format: string
        required: false
  VideoProcessingDetails:
    description: Describes processing status and progress and availability of some other Video resource parts.
    properties:
      editorSuggestionsAvailability:
        description: 'This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.'
        type: string
        required: false
      fileDetailsAvailability:
        description: This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request.
        type: string
        required: false
      processingFailureReason:
        description: The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.
        enum:
          - other
          - streamingFailed
          - transcodeFailed
          - uploadFailed
        type: string
        required: false
      processingIssuesAvailability:
        description: 'This value indicates whether the video processing engine has generated suggestions that might improve YouTube''s ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.'
        type: string
        required: false
      processingProgress:
        description: The processingProgress object contains information about the progress YouTube has made in processing the video. The values are really only relevant if the video's processing status is processing.
        type: VideoProcessingDetailsProcessingProgress
        required: false
      processingStatus:
        description: The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.
        enum:
          - failed
          - processing
          - succeeded
          - terminated
        type: string
        required: false
      tagSuggestionsAvailability:
        description: This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        type: string
        required: false
      thumbnailsAvailability:
        description: This value indicates whether thumbnail images have been generated for the video.
        type: string
        required: false
  VideoProcessingDetailsProcessingProgress:
    description: Video processing progress and completion time estimate.
    properties:
      partsProcessed:
        description: |-
          The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating:
          100 * parts_processed / parts_total

          Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      partsTotal:
        description: An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      timeLeftMs:
        description: 'An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
  VideoProjectDetails:
    description: Project specific details about the content of a YouTube Video.
    properties:
      tags:
        description: A list of project tags associated with the video during the upload.
        items:
          type: string
        type: array
        required: false
  VideoRating:
    properties:
      rating:
        enum:
          - dislike
          - like
          - none
          - unspecified
        type: string
        required: false
      videoId:
        type: string
        required: false
  VideoRecordingDetails:
    description: Recording information associated with the video.
    properties:
      location:
        description: The geolocation information associated with the video.
        type: GeoPoint
        required: false
      locationDescription:
        description: The text description of the location where the video was recorded.
        type: string
        required: false
      recordingDate:
        description: 'The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.'
        format: rfc3339
        type: datetime
        required: false
  VideoSnippet:
    description: 'Basic details about a video, including title, description, uploader, thumbnails and category.'
    properties:
      categoryId:
        description: The YouTube video category associated with the video.
        type: string
        required: false
      channelId:
        description: The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.
        type: string
        required: false
      channelTitle:
        description: Channel title for the channel that the video belongs to.
        type: string
        required: false
      defaultAudioLanguage:
        description: The default_audio_language property specifies the language spoken in the video's default audio track.
        type: string
        required: false
      defaultLanguage:
        description: The language of the videos's default snippet.
        type: string
        required: false
      description:
        description: The video's description.
        type: string
        required: false
      liveBroadcastContent:
        description: Indicates if the video is an upcoming/active live broadcast. Or it's "none" if the video is not an upcoming/active live broadcast.
        enum:
          - live
          - none
          - upcoming
        type: string
        required: false
      localized:
        description: 'Localized snippet selected with the hl parameter. If no such localization exists, this field is populated with the default snippet. (Read-only)'
        type: VideoLocalization
        required: false
      publishedAt:
        description: 'The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      tags:
        description: A list of keyword tags associated with the video. Tags may contain spaces.
        items:
          type: string
        type: array
        required: false
      thumbnails:
        description: 'A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.'
        type: ThumbnailDetails
        required: false
      title:
        description: The video's title.
        type: string
        required: false
  VideoStatistics:
    description: 'Statistics about the video, such as the number of times the video was viewed or liked.'
    properties:
      commentCount:
        description: The number of comments for the video.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      dislikeCount:
        description: The number of users who have indicated that they disliked the video by giving it a negative rating.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      favoriteCount:
        description: The number of users who currently have the video marked as a favorite video.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      likeCount:
        description: The number of users who have indicated that they liked the video by giving it a positive rating.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      viewCount:
        description: The number of times the video has been viewed.
        format: uint64
        type: string
        facets:
          format: string
        required: false
  VideoStatus:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      embeddable:
        description: This value indicates if the video can be embedded on another website.
        type: boolean
        required: false
      failureReason:
        description: This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.
        enum:
          - codec
          - conversion
          - emptyFile
          - invalidFile
          - tooSmall
          - uploadAborted
        type: string
        required: false
      license:
        description: The video's license.
        enum:
          - creativeCommon
          - youtube
        type: string
        required: false
      privacyStatus:
        description: The video's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
        required: false
      publicStatsViewable:
        description: 'This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled.'
        type: boolean
        required: false
      publishAt:
        description: 'The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        format: rfc3339
        type: datetime
        required: false
      rejectionReason:
        description: This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.
        enum:
          - claim
          - copyright
          - duplicate
          - inappropriate
          - legal
          - length
          - termsOfUse
          - trademark
          - uploaderAccountClosed
          - uploaderAccountSuspended
        type: string
        required: false
      uploadStatus:
        description: The status of the uploaded video.
        enum:
          - deleted
          - failed
          - processed
          - rejected
          - uploaded
        type: string
        required: false
  VideoSuggestions:
    description: 'Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.'
    properties:
      editorSuggestions:
        description: A list of video editing operations that might improve the video quality or playback experience of the uploaded video.
        items:
          enum:
            - audioQuietAudioSwap
            - videoAutoLevels
            - videoCrop
            - videoStabilize
          type: string
        type: array
        required: false
      processingErrors:
        description: 'A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video''s current processing status, eventually, that status will almost certainly be failed.'
        items:
          enum:
            - archiveFile
            - audioFile
            - docFile
            - imageFile
            - notAVideoFile
            - projectFile
          type: string
        type: array
        required: false
      processingHints:
        description: A list of suggestions that may improve YouTube's ability to process the video.
        items:
          enum:
            - nonStreamableMov
            - sendBestQualityVideo
          type: string
        type: array
        required: false
      processingWarnings:
        description: 'A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track.'
        items:
          enum:
            - hasEditlist
            - inconsistentResolution
            - problematicAudioCodec
            - problematicVideoCodec
            - unknownAudioCodec
            - unknownContainer
            - unknownVideoCodec
          type: string
        type: array
        required: false
      tagSuggestions:
        description: A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.
        items:
          type: VideoSuggestionsTagSuggestion
        type: array
        required: false
  VideoSuggestionsTagSuggestion:
    description: A single tag suggestion with it's relevance information.
    properties:
      categoryRestricts:
        description: 'A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.'
        items:
          type: string
        type: array
        required: false
      tag:
        description: The keyword tag suggested for the video.
        type: string
        required: false
  VideoTopicDetails:
    description: Freebase topic information related to the video.
    properties:
      relevantTopicIds:
        description: 'Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.'
        items:
          type: string
        type: array
        required: false
      topicIds:
        description: 'A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the Freebase Topic API.'
        items:
          type: string
        type: array
        required: false
  WatchSettings:
    description: Branding properties for the watch. All deprecated.
    properties:
      backgroundColor:
        description: The text color for the video watch page's branded area.
        type: string
        required: false
      featuredPlaylistId:
        description: An ID that uniquely identifies a playlist that displays next to the video player.
        type: string
        required: false
      textColor:
        description: The background color for the video watch page's branded area.
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
