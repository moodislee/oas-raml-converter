#%RAML 1.0
title: Google Cloud Trace
version: v1
baseUri: 'https://cloudtrace.googleapis.com/'
protocols:
  - HTTPS
description: 'Send and retrieve trace data from Google Cloud Trace. Data is generated and available by default for all App Engine applications. Data from other applications can be written to Cloud Trace for display, reporting, and analysis.'
(oas-tags-definition):
  - name: projects
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/cloudtrace/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): cloudtrace
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/tools/cloud-trace'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/trace.append'
        - 'https://www.googleapis.com/auth/trace.readonly'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  /projects:
    displayName: projects
    '/{projectId}':
      displayName: '{projectId}'
      /traces:
        displayName: traces
        '/{traceId}':
          displayName: '{traceId}'
          uriParameters:
            traceId:
              description: ID of the trace to return.
              required: true
              type: string
          get:
            displayName: cloudtrace.projects.traces.get
            description: Gets a single trace by its ID.
            responses:
              '200':
                body:
                  application/json:
                    type: Trace
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/trace.readonly'
            (oas-tags):
              - projects
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
        patch:
          displayName: cloudtrace.projects.patchTraces
          description: 'Sends new traces to Stackdriver Trace or updates existing traces. If the ID of a trace that you send matches that of an existing trace, any fields in the existing trace and its spans are overwritten by the provided values, and any new fields provided are merged with the existing trace data. If the ID does not match, a new trace is created.'
          body:
            application/json:
              type: Traces
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Empty
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/trace.append'
          (oas-tags):
            - projects
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        get:
          displayName: cloudtrace.projects.traces.list
          description: Returns of a list of traces that match the specified filter conditions.
          responses:
            '200':
              body:
                application/json:
                  type: ListTracesResponse
              description: Successful response
          queryParameters:
            view:
              description: Type of data returned for traces in the list. Optional. Default is `MINIMAL`.
              enum:
                - VIEW_TYPE_UNSPECIFIED
                - MINIMAL
                - ROOTSPAN
                - COMPLETE
              type: string
            pageSize:
              description: 'Maximum number of traces to return. If not specified or <= 0, the implementation selects a reasonable value. The implementation may return fewer traces than the requested page size. Optional.'
              type: integer
            pageToken:
              description: 'Token identifying the page of results to return. If provided, use the value of the `next_page_token` field from a previous request. Optional.'
              type: string
            startTime:
              description: End of the time interval (inclusive) during which the trace data was collected from the application.
              type: string
            endTime:
              description: Start of the time interval (inclusive) during which the trace data was collected from the application.
              type: string
            filter:
              description: An optional filter for the request.
              type: string
            orderBy:
              description: 'Field used to sort the returned traces. Optional. Can be one of the following: * `trace_id` * `name` (`name` field of root span in the trace) * `duration` (difference between `end_time` and `start_time` fields of the root span) * `start` (`start_time` field of the root span) Descending order can be specified by appending `desc` to the sort field (for example, `name desc`). Only one sort field is permitted.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/trace.readonly'
          (oas-tags):
            - projects
types:
  Empty:
    description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
  ListTracesResponse:
    description: The response message for the `ListTraces` method.
    properties:
      nextPageToken:
        description: 'If defined, indicates that there are more traces that match the request and that this value should be passed to the next request to continue retrieving additional traces.'
        type: string
        required: false
      traces:
        description: List of trace records returned.
        items:
          type: Trace
        type: array
        required: false
  Trace:
    description: 'A trace describes how long it takes for an application to perform an operation. It consists of a set of spans, each of which represent a single timed event within the operation.'
    properties:
      projectId:
        description: Project ID of the Cloud project where the trace data is stored.
        type: string
        required: false
      spans:
        description: Collection of spans in the trace.
        items:
          type: TraceSpan
        type: array
        required: false
      traceId:
        description: Globally unique identifier for the trace. This identifier is a 128-bit numeric value formatted as a 32-byte hex string.
        type: string
        required: false
  TraceSpan:
    description: 'A span represents a single timed event within a trace. Spans can be nested and form a trace tree. Often, a trace contains a root span that describes the end-to-end latency of an operation and, optionally, one or more subspans for its suboperations. Spans do not need to be contiguous. There may be gaps between spans in a trace.'
    properties:
      endTime:
        description: End time of the span in nanoseconds from the UNIX epoch.
        type: string
        required: false
      kind:
        description: 'Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `RPC_CLIENT` and `RPC_SERVER` to identify queueing latency associated with the span.'
        enum:
          - SPAN_KIND_UNSPECIFIED
          - RPC_SERVER
          - RPC_CLIENT
        type: string
        required: false
      labels:
        additionalProperties:
          type: string
        description: Collection of labels associated with the span.
        type: object
        required: false
      name:
        description: 'Name of the trace. The trace name is sanitized and displayed in the Stackdriver Trace tool in the {% dynamic print site_values.console_name %}. The name may be a method name or some other per-call site name. For the same executable and the same call point, a best practice is to use a consistent name, which makes it easier to correlate cross-trace spans.'
        type: string
        required: false
      parentSpanId:
        description: 'ID of the parent span, if any. Optional.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      spanId:
        description: Identifier for the span. This identifier must be unique within a trace.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      startTime:
        description: Start time of the span in nanoseconds from the UNIX epoch.
        type: string
        required: false
  Traces:
    description: List of new or updated traces.
    properties:
      traces:
        description: List of traces.
        items:
          type: Trace
        type: array
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
