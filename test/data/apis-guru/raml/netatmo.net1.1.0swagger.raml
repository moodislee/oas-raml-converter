#%RAML 1.0
title: Netatmo
version: 1.1.0
baseUri: 'https://api.netatmo.net/api'
mediaType:
  - text/plain
  - application/json
protocols:
  - HTTPS
description: '<h3>Welcome to the Netatmo swagger on-line documentation !</h3>This site is a complement to the official <a href="https://dev.netatmo.com/">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the "try it" button (authenticate with the authorization code 0Auth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href="https://github.com/cbornet/netatmo-swagger-ui">netatmo-swagger-ui</a>. You can also use the online <a href="./swagger.json">swagger declaration</a> file to generate code or static documentation (see <a href="https://github.com/cbornet/netatmo-swagger-api">netatmo-swagger-api</a>).'
(oas-tags-definition):
  - description: Weather station specific methods
    name: station
  - description: Thermostat specific methods
    name: thermostat
  - description: Welcome specific methods
    name: welcome
  - description: Public stations specific methods
    name: public
  - description: Partner API specific methods
    name: partner
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-unofficialSpec: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-deprecated:
    type: boolean
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://dev.netatmo.com/dev/createanapp'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_dev.netatmo.com_images_common_netatmo-connect-horiz.png'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/cbornet/netatmo-swagger-decl/master/swagger.json'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): netatmo.net
  (oas-x-unofficialSpec): true
  contact:
    name: Netatmo
    email: contact-api@netatmo.com
  termsOfService: 'https://dev.netatmo.com/dev/resources/legal/introduction'
  license:
    name: 'Netatmo : Terms of Service'
    url: 'https://dev.netatmo.com/dev/resources/legal/introduction'
(oas-externalDocs):
  description: Netatmo reference API documentation
  url: 'https://dev.netatmo.com/dev/resources/technical/reference'
securitySchemes:
  code_oauth:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://api.netatmo.net/oauth2/authorize'
      accessTokenUri: 'https://api.netatmo.net/oauth2/token'
      authorizationGrants:
        - authorization_code
      scopes:
        - access_camera
        - read_camera
        - read_station
        - read_thermostat
        - write_camera
        - write_thermostat
  password_oauth:
    type: OAuth 2.0
    settings:
      accessTokenUri: 'https://api.netatmo.net/oauth2/token'
      authorizationGrants:
        - password
/getnextevents:
  displayName: getnextevents
  get:
    displayName: getnextevents
    description: |
      Returns previous events.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeEventsResponse
        description: Successful response
    queryParameters:
      home_id:
        description: ID of the Home you're interested in
        required: true
        type: string
      event_id:
        description: Your request will retrieve events occured before this one
        required: true
        type: string
      size:
        description: Number of events to retrieve. Default is 30.
        required: false
        type: integer
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/syncschedule:
  displayName: syncschedule
  post:
    displayName: syncschedule
    description: The method syncschedule changes the Thermostat weekly schedule.
    body:
      application/json:
        type: NAThermProgram
        (oas-body-name): therm_program
        description: 'The thermostat program (zones, timetable and name)'
    responses:
      '200':
        body:
          text/plain:
            type: NAOkResponse
        description: Successful response
    queryParameters:
      device_id:
        description: The relay id
        required: true
        type: string
      module_id:
        description: The thermostat id
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - thermostat
/getstationsdata:
  displayName: getstationsdata
  get:
    displayName: getstationsdata
    description: The method getstationsdata Returns data from a user Weather Stations (measures and device specific data).
    responses:
      '200':
        body:
          text/plain:
            type: NAStationDataResponse
        description: Successful response
    queryParameters:
      device_id:
        description: Id of the device you want to retrieve information of
        required: false
        type: string
    (oas-tags):
      - station
/addwebhook:
  displayName: addwebhook
  get:
    displayName: addwebhook
    description: |
      Links a callback url to a user.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeWebhookResponse
        description: Successful response
    queryParameters:
      url:
        description: Your webhook callback url
        required: true
        type: string
      app_type:
        description: 'Webhooks are only available for Welcome, enter app_camera.'
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/getthermostatsdata:
  displayName: getthermostatsdata
  get:
    displayName: getthermostatsdata
    description: The method getthermostatsdata returns information about user's thermostats such as their last measurements.
    responses:
      '200':
        body:
          text/plain:
            type: NAThermostatDataResponse
        description: Successful response
    queryParameters:
      device_id:
        description: Id of the device you want to retrieve information of
        required: false
        type: string
    (oas-tags):
      - thermostat
/devicelist:
  displayName: devicelist
  get:
    displayName: devicelist
    description: |
      The method devicelist returns the list of devices owned by the user, and their modules.
      A device is identified by its _id (which is its mac address) and each device may have one, several or no modules, also identified by an _id.
    responses:
      '200':
        body:
          text/plain:
            type: NADeviceListResponse
        description: Successful response
    queryParameters:
      app_type:
        description: Defines which device type will be returned by devicelist. It could be app_thermostat or app_station (by default if not provided)
        enum:
          - app_thermostat
          - app_station
        required: false
        type: string
      device_id:
        description: Specify a device_id if you want to retrieve only this device informations.
        required: false
        type: string
      get_favorites:
        description: 'When set to "true", the favorite devices of the user are returned. This flag is available only if the devices requested are Weather Stations.'
        required: false
        type: boolean
    securedBy:
      - password_oauth
    (oas-tags):
      - station
      - thermostat
      - partner
    (oas-deprecated): true
/getthermstate:
  displayName: getthermstate
  get:
    displayName: getthermstate
    description: 'The method getthermstate returns the last Thermostat measurements, its current weekly schedule, and, if present, its current manual temperature setpoint.'
    responses:
      '200':
        body:
          text/plain:
            type: NAThermStateResponse
        description: Successful response
    queryParameters:
      device_id:
        description: The relay id
        required: true
        type: string
      module_id:
        description: The thermostat id
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - thermostat
      - partner
    (oas-deprecated): true
/getcamerapicture:
  displayName: getcamerapicture
  get:
    displayName: getcamerapicture
    description: |
      Returns the snapshot associated to an event.
    responses:
      '200':
        body:
          text/plain:
            format: byte
            type: string
            facets:
              format: string
        description: Successful response
    queryParameters:
      image_id:
        description: 'id of the image (can be retrieved as ''id'' in ''face'' in Gethomedata, or as ''id'' in ''snapshot'' in Getnextevents, Getlasteventof and Geteventsuntil)'
        required: true
        type: string
      key:
        description: Security key to access snapshots.
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/getuser:
  displayName: getuser
  get:
    displayName: getuser
    description: |
      The method getuser returns information about a user such as prefered language, prefered units, and list of devices.
    responses:
      '200':
        body:
          text/plain:
            type: NAUserResponse
        description: Successful response
    securedBy:
      - password_oauth
    (oas-tags):
      - station
      - thermostat
    (oas-deprecated): true
/gethomedata:
  displayName: gethomedata
  get:
    displayName: gethomedata
    description: |
      Returns information about users homes and cameras.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeHomeDataResponse
        description: Successful response
    queryParameters:
      home_id:
        description: Specify if you're looking for the events of a specific Home.
        required: false
        type: string
      size:
        description: Number of events to retrieve. Default is 30.
        required: false
        type: integer
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/getmeasure:
  displayName: getmeasure
  get:
    displayName: getmeasure
    description: |
      The method getmeasure returns the measurements of a device or a module.
    responses:
      '200':
        body:
          text/plain:
            type: NAMeasureResponse
        description: Successful response
    queryParameters:
      device_id:
        description: Id of the device whose module's measurements you want to retrieve. This _id can be found in the user's devices field.
        required: true
        type: string
      module_id:
        description: If you don't specify any module_id you will retrieve the device's measurements. If you specify a module_id you will retrieve the module's measurements.
        required: false
        type: string
      scale:
        description: |
          Defines the time interval between two measurements.
          Possible values :
          max -> every value stored will be returned
          30min -> 1 value every 30 minutes
          1hour -> 1 value every hour
          3hours -> 1 value every 3 hours
          1day -> 1 value per day
          1week -> 1 value per week
          1month -> 1 value per month
        enum:
          - max
          - 30min
          - 1hour
          - 3hours
          - 1day
          - 1week
          - 1month
        required: true
        type: string
      type:
        collectionFormat: csv
        description: |
          Sets the type of measurement you want to retrieve.
          The different types of measurements must be given in a comma separated list of strings.
          Example: type="Temperature,Humidity"
          Depending on the device's type and the scale, different measurements are available:
          For Weather Station :

            max -> Temperature, CO2, Humidity, Pressure, Noise, Rain (if
          module_id is a rain sensor)

            30min, 1hour, 3hours -> Temperature, CO2, Humidity, Pressure,
          Noise, min_temp, max_temp, min_hum, max_hum, min_pressure, max_pressure, min_noise, max_noise, sum_rain (if module_id is a rain sensor)

            1day, 1week, 1month -> Temperature, Co2, Humidity, Pressure, Noise,
          min_temp, date_min_temp, max_temp, date_max_temp, min_hum, date_min_hum, max_hum, date_max_hum, min_pressure, date_min_pressure, max_pressure, date_max_pressure, min_noise, date_min_noise, max_noise, date_max_noise, date_min_co2, date_max_co2, sum_rain (if module_id is a rain sensor)
          Please note, the measurements sent in the response will be in the same order as in this list.
          All measurements are expressed in metric units:

            Temperature: Celsius

            Humidity: %

            Co2: ppm

            Pressure: mbar

            Noise: db

            Rain: mm

          For Thermostat:

            max -> Temperature, Sp_Temperature, BoilerOn, BoilerOff

            30min, 1hour, 3hours -> Temperature, Sp_Temperature, min_temp,
          max_temp, sum_boiler_on, sum_boiler_off

            1day, 1week, 1month -> Temperature, min_temp, date_min_temp,
          max_temp, sum_boiler_on, sum_boiler_off

            where

          Temperature: Celsius

            Sp_Temperature (temperature setpoint): Celsius

            BoilerOn: Duration, since the previous data point, during which the
          boiler has been on (in seconds)

            BoilerOff : Duration, since the previous data point, during which
          the boiler has been off (in seconds).

            sum_boiler_on: Total duration during which the boiler has been on,
          at a specific scale (in seconds).

            sum_boiler_off: Total duration during which the boiler has been
          off, at a specific scale (in seconds).
        items:
          enum:
            - Temperature
            - CO2
            - Humidity
            - Pressure
            - Noise
            - Rain
            - Sp_Temperature
            - BoilerOn
            - BoilerOff
            - min_temp
            - date_min_temp
            - max_temp
            - date_max_temp
            - min_hum
            - date_min_hum
            - max_hum
            - date_max_hum
            - min_pressure
            - date_min_pressure
            - max_pressure
            - date_max_pressure
            - min_noise
            - date_min_noise
            - max_noise
            - date_max_noise
            - date_min_co2
            - date_max_co2
            - sum_rain
            - sum_boiler_on
            - sum_boiler_off
          type: string
        required: true
        type: array
        facets:
          collectionFormat: string
      date_begin:
        description: |
          Starting timestamp (utc) of the requested measurements.
          Please note measurement retrieving is limited to 1024 measurements. 
        format: int32
        required: false
        type: integer
      date_end:
        description: |
          Ending timestamp (utc) of the request measurements.
          If you want only the last measurement, do not provide date_begin, and set date_end to "last". 
        required: false
        type: string
      limit:
        description: Limits the number of measurements returned (default & max is 1024)
        format: int32
        maximum: 1024
        required: false
        type: integer
      optimize:
        description: |
          Allows you to choose the format of the answer.
          If you build a mobile app and bandwith usage is an issue, use optimize = true.
          Use optimize = false, for an easier parse. In this case, values are indexed by sorted timestamp.
          Example of un-optimized response :
          {"status": "ok", 
            "body": {
              "1347575400": [18.3,39],
              "1347586200": [20.6,48]
            },
          "time_exec": 0.012136936187744}
          If optimize is set true, measurements are returned as an array of series of regularly spaced measurements. Each series is defined by a beginning time beg_time and a step between measurements, step_time:
          {"status": "ok",
            "body": [
              {"beg_time": 1347575400,
               "step_time": 10800,
               "value": 
                  [[18.3,39],
                  [ 20.6,48]]
              }],
          "time_exec": 0.014238119125366}
          Default value is true.
        required: false
        type: boolean
      real_time:
        description: |
          In scales higher than max, since the data is aggregated, the timestamps returned are by default offset by +(scale/2).
          For instance, if you ask for measurements at a daily scale, you will receive data timestamped at 12:00 if real_time is set to false (default case), and timestamped at 00:00 if real_time is set to true.
          NB : The servers always store data with real_time set to true and data are offset by this parameter AFTER having being time-filtered, thus you could have data after date_end if real_time is set to false.
        required: false
        type: boolean
    securedBy:
      - password_oauth
    (oas-tags):
      - station
      - thermostat
      - partner
      - public
/switchschedule:
  displayName: switchschedule
  post:
    displayName: switchschedule
    description: The method switchschedule switches the Thermostat's schedule to another existing schedule.
    responses:
      '200':
        body:
          text/plain:
            type: NAOkResponse
        description: Successful response
    queryParameters:
      device_id:
        description: The relay id
        required: true
        type: string
      module_id:
        description: The thermostat id
        required: true
        type: string
      schedule_id:
        description: |
          The schedule id. It can be found in the getthermstate response, under the keys "therm_program_backup" and "therm_program".
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - thermostat
/setthermpoint:
  displayName: setthermpoint
  post:
    displayName: setthermpoint
    description: The method setthermpoint changes the Thermostat manual temperature setpoint.
    responses:
      '200':
        body:
          text/plain:
            type: NAOkResponse
        description: Successful response
    queryParameters:
      device_id:
        description: The relay id
        required: true
        type: string
      module_id:
        description: The thermostat id
        required: true
        type: string
      setpoint_mode:
        description: Chosen setpoint_mode
        enum:
          - program
          - away
          - hg
          - manual
          - 'off'
          - max
        required: true
        type: string
      setpoint_endtime:
        description: 'When using the manual or max setpoint_mode, this parameter defines when the setpoint expires.'
        format: int32
        required: false
        type: integer
      setpoint_temp:
        description: 'When using the manual setpoint_mode, this parameter defines the temperature setpoint (in Celcius) to use.'
        format: float
        required: false
        type: number
    securedBy:
      - password_oauth
    (oas-tags):
      - thermostat
/setpersonsaway:
  displayName: setpersonsaway
  get:
    displayName: setpersonsaway
    description: |
      Sets a person as 'Away' or the Home as 'Empty'. The event will be added to the user’s timeline.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomePersonsAwayResponse
        description: Successful response
    queryParameters:
      home_id:
        description: ID of the Home you're interested in
        required: true
        type: string
      person_id:
        description: 'If a person_id is specified, that person will be set as ''Away''. If no person_id is specified, the Home will be set as ''Empty''.'
        required: false
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/partnerdevices:
  displayName: partnerdevices
  get:
    displayName: partnerdevices
    description: The method partnerdevices returns the list of device_id to which your partner application has access to.
    responses:
      '200':
        body:
          text/plain:
            type: NAPartnerDevicesResponse
        description: Successful response
    securedBy:
      - password_oauth
    (oas-tags):
      - partner
/createnewschedule:
  displayName: createnewschedule
  post:
    displayName: createnewschedule
    description: The method createnewschedule creates a new schedule stored in the backup list.
    body:
      application/json:
        type: NAThermProgram
        (oas-body-name): therm_program
        description: The thermostat program (zones and timetable)
    responses:
      '200':
        body:
          text/plain:
            type: NANewScheduleResponse
        description: Successful response
    queryParameters:
      device_id:
        description: The relay id
        required: true
        type: string
      module_id:
        description: The thermostat id
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - thermostat
/getlasteventof:
  displayName: getlasteventof
  get:
    displayName: getlasteventof
    description: |
      Returns most recent events.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeEventsResponse
        description: Successful response
    queryParameters:
      home_id:
        description: ID of the Home you're interested in
        required: true
        type: string
      person_id:
        description: Your request will retrieve all events of the given home until the most recent event of the given person
        required: true
        type: string
      offset:
        description: Number of events to retrieve. Default is 30.
        required: false
        type: integer
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/geteventsuntil:
  displayName: geteventsuntil
  get:
    displayName: geteventsuntil
    description: |
      Returns the snapshot associated to an event.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeEventsResponse
        description: Successful response
    queryParameters:
      home_id:
        description: ID of the Home you're interested in
        required: true
        type: string
      event_id:
        description: Your request will retrieve all the events until this one
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
/dropwebhook:
  displayName: dropwebhook
  get:
    displayName: dropwebhook
    description: |
      Dissociates a webhook from a user.
    responses:
      '200':
        body:
          text/plain:
            type: NAWelcomeWebhookResponse
        description: Successful response
    queryParameters:
      app_type:
        description: 'For Welcome, use app_camera'
        required: true
        type: string
    securedBy:
      - password_oauth
    (oas-tags):
      - welcome
types:
  NADashboardData:
    properties:
      AbsolutePressure:
        description: Real measured pressure @ time_utc (in mb)
        format: float
        type: number
        required: false
      BoilerOff:
        format: int32
        type: integer
        required: false
      BoilerOn:
        format: int32
        type: integer
        required: false
      CO2:
        description: Last Co2 measured @ time_utc (in ppm)
        format: float
        type: number
        required: false
      GustAngle:
        description: Direction of the last 5 min highest gust wind
        format: int32
        type: integer
        required: false
      GustStrength:
        description: Speed of the last 5 min highest gust wind
        format: int32
        type: integer
        required: false
      Humidity:
        description: Last humidity measured @ time_utc (in %)
        format: float
        type: number
        required: false
      Noise:
        description: Last noise measured @ time_utc (in db)
        format: float
        type: number
        required: false
      Pressure:
        description: Last Sea level pressure measured @ time_utc (in mb)
        format: float
        type: number
        required: false
      Rain:
        description: Last rain measured (in mm)
        format: float
        type: number
        required: false
      Temperature:
        description: Last temperature measure @ time_utc (in °C)
        format: float
        type: number
        required: false
      WindAngle:
        description: Current 5 min average wind direction measured @ time_utc (in °)
        format: int32
        type: integer
        required: false
      WindStrength:
        description: Current 5 min average wind speed measured @ time_utc (in km/h)
        format: int32
        type: integer
        required: false
      date_max_temp:
        description: Timestamp when max temperature was measured
        format: int32
        type: integer
        required: false
      date_min_temp:
        description: Timestamp when min temperature was measured
        format: int32
        type: integer
        required: false
      device_id:
        format: float
        type: number
        required: false
      max_temp:
        description: Min temperature of the day (measured @ date_min_temp)
        format: float
        type: number
        required: false
      min_temp:
        description: Max temperature of the day (measured @ date_max_temp)
        format: float
        type: number
        required: false
      sum_rain_1:
        description: Amount of rain in last hour
        format: float
        type: number
        required: false
      sum_rain_24:
        description: Amount of rain today
        format: float
        type: number
        required: false
      time_utc:
        format: int32
        type: integer
        required: false
  NADate:
    properties:
      sec:
        format: int32
        type: integer
        required: false
      usec:
        format: int32
        type: integer
        required: false
  NADevice:
    properties:
      _id:
        type: string
        required: false
      behavior:
        format: int32
        type: integer
        required: false
      cipher_id:
        type: string
        required: false
      dashboard_data:
        description: It contains all the measurements that can be displayed on the dashboard
        type: NADashboardData
        required: false
      data_type:
        items:
          type: string
        type: array
        required: false
      date_setup:
        type: NADate
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      first_pid_avail:
        type: boolean
        required: false
      heating_system:
        type: NAHeatingSystem
        required: false
      house_model:
        type: NAHouseModel
        required: false
      hw_version:
        format: int32
        type: integer
        required: false
      ip:
        type: string
        required: false
      last_fw_update:
        format: int32
        type: integer
        required: false
      last_radio_store:
        format: int32
        type: integer
        required: false
      last_status_store:
        format: int32
        type: integer
        required: false
      last_upgrade:
        format: int32
        type: integer
        required: false
      module_name:
        type: string
        required: false
      modules:
        description: It lists which modules are linked with this device
        items:
          type: string
        type: array
        required: false
      new_feature_avail:
        type: boolean
        required: false
      place:
        type: NAPlace
        required: false
      public_ext_data:
        type: boolean
        required: false
      setpoint:
        type: object
        required: false
      setpoint_default_duration:
        format: int32
        type: integer
        required: false
      setpoint_order:
        additionalProperties:
          items:
            type: NAObject
          type: array
        type: object
        required: false
      station_name:
        type: string
        required: false
      therm_program:
        additionalProperties:
          type: NAThermProgram
        type: object
        required: false
      therm_program_backup:
        additionalProperties:
          items:
            type: NAThermProgram
          type: array
        type: object
        required: false
      therm_program_order:
        additionalProperties:
          items:
            type: NAObject
          type: array
        type: object
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
      udp_conn:
        type: boolean
        required: false
      user_owner:
        items:
          type: string
        type: array
        required: false
      wifi_status:
        description: |
          It contains the current wifi status. The different thresholds to take into account are
          RSSI_THRESHOLD_0 = 86 bad signal
          RSSI_THRESHOLD_1 = 71 middle quality signal
          RSSI_THRESHOLD_2 = 56 good signal
        format: int32
        type: integer
        required: false
  NADeviceListBody:
    properties:
      devices:
        items:
          type: NADevice
        type: array
        required: false
      modules:
        items:
          type: NAModule
        type: array
        required: false
  NADeviceListResponse:
    properties:
      body:
        type: NADeviceListBody
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAHeatingSystem:
    properties:
      heating_energy:
        type: string
        required: false
      heating_system_window_seen:
        type: boolean
        required: false
  NAHouseModel:
    properties:
      algo_type:
        type: string
        required: false
      ca:
        type: NAHouseModelCa
        required: false
      ext_temps:
        additionalProperties:
          format: int32
          type: integer
        type: object
        required: false
      first_anticipate_avail:
        type: boolean
        required: false
      first_pid_avail:
        type: boolean
        required: false
      gefs:
        type: NAStation
        required: false
      in_use:
        type: string
        required: false
      last_compute_try:
        type: NADate
        required: false
      link_station:
        type: NALinkStation
        required: false
      pid_algo:
        type: NAPidAlgo
        required: false
      prefered_algo_type:
        type: string
        required: false
      simple_algo:
        type: NASimpleAlgo
        required: false
      station:
        type: NAStation
        required: false
      station_firsttime_anticipate:
        type: boolean
        required: false
      time:
        type: NADate
        required: false
      time_algo_changed:
        format: int32
        type: integer
        required: false
      time_pid_computed:
        format: int32
        type: integer
        required: false
  NAHouseModelCa:
    properties:
      so:
        type: string
        required: false
      te:
        format: double
        type: number
        required: false
      ti:
        format: int32
        type: integer
        required: false
  NALinkStation:
    properties:
      Temperature:
        format: float
        type: number
        required: false
      ext:
        type: string
        required: false
      mac:
        type: string
        required: false
  NAMain:
    properties:
      _id:
        type: string
        required: false
      cipher_id:
        type: string
        required: false
      co2_calibrating:
        type: boolean
        required: false
      dashboard_data:
        description: It contains all the measurements that can be displayed on the dashboard
        type: NADashboardData
        required: false
      data_type:
        items:
          type: string
        type: array
        required: false
      date_setup:
        format: int32
        type: integer
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      last_setup:
        format: int32
        type: integer
        required: false
      last_status_store:
        format: int32
        type: integer
        required: false
      last_upgrade:
        format: int32
        type: integer
        required: false
      module_name:
        type: string
        required: false
      modules:
        items:
          type: NAStationModule
        type: array
        required: false
      place:
        type: NAPlace
        required: false
      station_name:
        type: string
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
      wifi_status:
        description: |
          It contains the current wifi status. The different thresholds to take into account are
          RSSI_THRESHOLD_0 = 86 bad signal
          RSSI_THRESHOLD_1 = 71 middle quality signal
          RSSI_THRESHOLD_2 = 56 good signal
        format: int32
        type: integer
        required: false
  NAMeasureBodyElem:
    properties:
      beg_time:
        format: int32
        type: integer
        required: false
      step_time:
        format: int32
        type: integer
        required: false
      value:
        items:
          items:
            format: float
            type: number
          type: array
        type: array
        required: false
  NAMeasureResponse:
    properties:
      body:
        items:
          type: NAMeasureBodyElem
        type: array
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAModule:
    properties:
      _id:
        type: string
        required: false
      battery_vp:
        description: |
          It contains the current battery status. The threshold depends on the kind of module, below is the list of the different threshold to take into account according the module type.
          "Indoor module Battery range: 6000 ... 4200" |
          INDOOR_BATTERY_LEVEL_FULL = 5640
          INDOOR_BATTERY_LEVEL_HIGH = 5280
          INDOOR_BATTERY_LEVEL_MEDIUM = 4920
          INDOOR_BATTERY_LEVEL_LOW = 4560
          "Below 4560: very low" |
            
          "Raingauge and outdoor module Battery range: 6000 ... 3600" |
          BATTERY_LEVEL_FULL = 5500
          BATTERY_LEVEL_HIGH = 5000
          BATTERY_LEVEL_MEDIUM = 4500
          BATTERY_LEVEL_LOW = 4000
          "Below 4000: very low" |
            
          "Thermostat Battery range: 4500 ... 3000" |
          THERMOSTAT_BATTERY_LEVEL_FULL = 4100
          THERMOSTAT_BATTERY_LEVEL_HIGH = 3600
          THERMOSTAT_BATTERY_LEVEL_MEDIUM = 3300
          THERMOSTAT_BATTERY_LEVEL_LOW = 3000
          "Below 3000: very low"
        format: int32
        type: integer
        required: false
      dashboard_data:
        description: It contains all the measurements that can be displayed on the dashboard
        type: NADashboardData
        required: false
      data_type:
        items:
          type: string
        type: array
        required: false
      date_setup:
        type: NADate
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      last_message:
        format: int32
        type: integer
        required: false
      last_seen:
        format: int32
        type: integer
        required: false
      main_device:
        type: string
        required: false
      module_name:
        type: string
        required: false
      public_ext_data:
        type: boolean
        required: false
      rf_status:
        description: |
          "It contains the current radio status. The different thresholds to take into account are :" |
          RADIO_THRESHOLD_SIGNAL_LOW = 90 
          RADIO_THRESHOLD_SIGNAL_MEDIUM = 80
          RADIO_THRESHOLD_SIGNAL_HIGH = 70
          RADIO_THRESHOLD_SIGNAL_FULL = 60
        format: int32
        type: integer
        required: false
      therm_orientation:
        format: int32
        type: integer
        required: false
      therm_relay_cmd:
        format: int32
        type: integer
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
  NANewScheduleBody:
    properties:
      schedule_id:
        description: |
          Id of the schedule. It can be use with the method "switchschedule" 
        type: string
        required: false
  NANewScheduleResponse:
    properties:
      body:
        type: NANewScheduleBody
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAObject:
    properties:
      $id:
        type: string
        required: false
  NAOkResponse:
    properties:
      body:
        type: string
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAPartnerDevicesResponse:
    properties:
      body:
        items:
          type: string
        type: array
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAPidAlgo:
    properties:
      gain:
        format: int32
        type: integer
        required: false
      period:
        format: int32
        type: integer
        required: false
      td:
        format: int32
        type: integer
        required: false
      ti:
        format: int32
        type: integer
        required: false
  NAPlace:
    properties:
      altitude:
        format: float
        type: number
        required: false
      city:
        type: string
        required: false
      country:
        type: string
        required: false
      from_ip:
        type: boolean
        required: false
      improveLocProposed:
        type: boolean
        required: false
      location:
        items:
          format: double
          type: number
        type: array
        required: false
      timezone:
        type: string
        required: false
      trust_location:
        type: boolean
        required: false
  NAPlug:
    properties:
      _id:
        type: string
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      last_bilan:
        type: NAYearMonth
        required: false
      last_plug_seen:
        format: int32
        type: integer
        required: false
      last_status_store:
        format: int32
        type: integer
        required: false
      modules:
        items:
          type: NAThermostat
        type: array
        required: false
      place:
        type: NAPlace
        required: false
      plug_connected_boiler:
        type: boolean
        required: false
      station_name:
        type: string
        required: false
      syncing:
        type: boolean
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
      udp_conn:
        type: boolean
        required: false
      wifi_status:
        description: |
          It contains the current wifi status. The different thresholds to take into account are
          RSSI_THRESHOLD_0 = 86 bad signal
          RSSI_THRESHOLD_1 = 71 middle quality signal
          RSSI_THRESHOLD_2 = 56 good signal
        format: int32
        type: integer
        required: false
  NASetpoint:
    properties:
      setpoint_endtime:
        format: int32
        type: integer
        required: false
      setpoint_mode:
        type: string
        required: false
      setpoint_temp:
        format: float
        type: number
        required: false
  NASetpointLog:
    properties:
      setpoint:
        type: NASetpoint
        required: false
      timestamp:
        format: int64
        type: integer
        required: false
  NASimpleAlgo:
    properties:
      high_deadband:
        format: int32
        type: integer
        required: false
  NAStation:
    properties:
      lag_down:
        format: int32
        type: integer
        required: false
      lag_up:
        format: int32
        type: integer
        required: false
      off_overshoot:
        format: float
        type: number
        required: false
      on_overshoot:
        format: float
        type: number
        required: false
      pk:
        format: int32
        type: integer
        required: false
      tau:
        format: int32
        type: integer
        required: false
  NAStationDataBody:
    properties:
      devices:
        items:
          type: NAMain
        type: array
        required: false
      user:
        type: NAUser
        required: false
  NAStationDataResponse:
    properties:
      body:
        type: NAStationDataBody
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAStationModule:
    properties:
      _id:
        type: string
        required: false
      battery_percent:
        description: It contains the current battery level in percentage.
        format: int32
        type: integer
        required: false
      battery_vp:
        description: |
          It contains the current battery status. The threshold depends on the kind of module, below is the list of the different threshold to take into account according the module type.
          "Indoor module Battery range: 6000 ... 4200" |
          INDOOR_BATTERY_LEVEL_FULL = 5640
          INDOOR_BATTERY_LEVEL_HIGH = 5280
          INDOOR_BATTERY_LEVEL_MEDIUM = 4920
          INDOOR_BATTERY_LEVEL_LOW = 4560
          "Below 4560: very low" |
            
          "Raingauge and outdoor module Battery range: 6000 ... 3600" |
          BATTERY_LEVEL_FULL = 5500
          BATTERY_LEVEL_HIGH = 5000
          BATTERY_LEVEL_MEDIUM = 4500
          BATTERY_LEVEL_LOW = 4000
          "Below 4000: very low" |
            
          "Thermostat Battery range: 4500 ... 3000" |
          THERMOSTAT_BATTERY_LEVEL_FULL = 4100
          THERMOSTAT_BATTERY_LEVEL_HIGH = 3600
          THERMOSTAT_BATTERY_LEVEL_MEDIUM = 3300
          THERMOSTAT_BATTERY_LEVEL_LOW = 3000
          "Below 3000: very low"
        format: int32
        type: integer
        required: false
      dashboard_data:
        description: It contains all the measurements that can be displayed on the dashboard
        type: NADashboardData
        required: false
      data_type:
        items:
          type: string
        type: array
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      last_message:
        format: int32
        type: integer
        required: false
      last_seen:
        format: int32
        type: integer
        required: false
      last_setup:
        format: int32
        type: integer
        required: false
      module_name:
        type: string
        required: false
      rf_status:
        description: |
          "It contains the current radio status. The different thresholds to take into account are :" |
          RADIO_THRESHOLD_SIGNAL_LOW = 90 
          RADIO_THRESHOLD_SIGNAL_MEDIUM = 80
          RADIO_THRESHOLD_SIGNAL_HIGH = 70
          RADIO_THRESHOLD_SIGNAL_FULL = 60
        format: int32
        type: integer
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
  NAThermMeasure:
    properties:
      setpoint_temp:
        format: float
        type: number
        required: false
      temperature:
        format: float
        type: number
        required: false
      time:
        format: int32
        type: integer
        required: false
  NAThermProgram:
    properties:
      name:
        type: string
        required: false
      program_id:
        type: string
        required: false
      selected:
        type: boolean
        required: false
      timetable:
        items:
          type: NATimeTableItem
        type: array
        required: false
      zones:
        items:
          type: NAZone
        type: array
        required: false
  NAThermStateBody:
    properties:
      battery_vp:
        format: int32
        type: integer
        required: false
      last_plug_seen:
        format: int32
        type: integer
        required: false
      last_therm_seen:
        format: int32
        type: integer
        required: false
      measured:
        type: NAThermMeasure
        required: false
      plug_connected_boiler:
        type: boolean
        required: false
      rf_status:
        format: int32
        type: integer
        required: false
      setpoint:
        type: NASetpoint
        required: false
      setpoint_order:
        type: NASetpoint
        required: false
      therm_orientation:
        format: int32
        type: integer
        required: false
      therm_program:
        type: NAThermProgram
        required: false
      therm_program_backup:
        items:
          type: NAThermProgram
        type: array
        required: false
      therm_program_order:
        type: NAThermProgram
        required: false
      therm_relay_cmd:
        format: int32
        type: integer
        required: false
      udp_conn:
        type: boolean
        required: false
      wifi_status:
        format: int32
        type: integer
        required: false
  NAThermStateResponse:
    properties:
      body:
        type: NAThermStateBody
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAThermostat:
    properties:
      _id:
        type: string
        required: false
      battery_vp:
        description: |
          It contains the current battery status. The threshold depends on the kind of module, below is the list of the different threshold to take into account according the module type.
          "Indoor module Battery range: 6000 ... 4200" |
          INDOOR_BATTERY_LEVEL_FULL = 5640
          INDOOR_BATTERY_LEVEL_HIGH = 5280
          INDOOR_BATTERY_LEVEL_MEDIUM = 4920
          INDOOR_BATTERY_LEVEL_LOW = 4560
          "Below 4560: very low" |
            
          "Raingauge and outdoor module Battery range: 6000 ... 3600" |
          BATTERY_LEVEL_FULL = 5500
          BATTERY_LEVEL_HIGH = 5000
          BATTERY_LEVEL_MEDIUM = 4500
          BATTERY_LEVEL_LOW = 4000
          "Below 4000: very low" |
            
          "Thermostat Battery range: 4500 ... 3000" |
          THERMOSTAT_BATTERY_LEVEL_FULL = 4100
          THERMOSTAT_BATTERY_LEVEL_HIGH = 3600
          THERMOSTAT_BATTERY_LEVEL_MEDIUM = 3300
          THERMOSTAT_BATTERY_LEVEL_LOW = 3000
          "Below 3000: very low"
        format: int32
        type: integer
        required: false
      firmware:
        format: int32
        type: integer
        required: false
      last_message:
        format: int32
        type: integer
        required: false
      last_therm_seen:
        format: int32
        type: integer
        required: false
      measured:
        description: It contains the last measurements of the Thermostat
        type: NAThermMeasure
        required: false
      module_name:
        type: string
        required: false
      rf_status:
        description: |
          "It contains the current radio status. The different thresholds to take into account are :" |
          RADIO_THRESHOLD_SIGNAL_LOW = 90 
          RADIO_THRESHOLD_SIGNAL_MEDIUM = 80
          RADIO_THRESHOLD_SIGNAL_HIGH = 70
          RADIO_THRESHOLD_SIGNAL_FULL = 60
        format: int32
        type: integer
        required: false
      setpoint:
        description: Setpoint currently in use by the Thermostat.
        type: NASetpoint
        required: false
      setpoint_history:
        description: 'The last 20 setpoints (mode, endtime, and timestamp) the thermostats has entered.'
        items:
          type: NASetpointLog
        type: array
        required: false
      setpoint_order:
        type: NASetpoint
        required: false
      therm_orientation:
        format: int32
        type: integer
        required: false
      therm_program_list:
        description: List of the weekly heating planning used by the thermostat
        items:
          type: NAThermProgram
        type: array
        required: false
      therm_relay_cmd:
        format: int32
        type: integer
        required: false
      type:
        description: |
          Included in every device or module. It defines the type of the device/module. Its values are among :
          NAMain : for the base station
          NAModule1 : for the outdoor module
          NAModule4 : for the additionnal indoor module
          NAModule3 : for the rain gauge module
          NAPlug : for the thermostat relay/plug
          NATherm1 : for the thermostat module
        type: string
        required: false
  NAThermostatDataBody:
    properties:
      devices:
        items:
          type: NAPlug
        type: array
        required: false
      user:
        type: NAUser
        required: false
  NAThermostatDataResponse:
    properties:
      body:
        type: NAThermostatDataBody
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NATimeTableItem:
    properties:
      id:
        format: int32
        type: integer
        required: false
      m_offset:
        format: int32
        type: integer
        required: false
  NAUser:
    properties:
      _id:
        type: string
        required: false
      administrative:
        description: Contains administrative information related to the user
        type: NAUserAdministrative
        required: false
      date_creation:
        type: NADate
        required: false
      devices:
        description: An array of string containing the ids of the devices owned by the user
        items:
          type: string
        type: array
        required: false
      friend_devices:
        description: |
          An array of string containing the ids of the devices on which the user has a "guest" access
        items:
          type: string
        type: array
        required: false
      mail:
        type: string
        required: false
      timeline_not_read:
        format: int32
        type: integer
        required: false
      timeline_size:
        format: int32
        type: integer
        required: false
  NAUserAdministrative:
    properties:
      country:
        description: user country
        type: string
        required: false
      feel_like_algo:
        description: 'algorithm used to compute feel like temperature, 0 -> humidex, 1 -> heat-index'
        type: string
        required: false
      lang:
        description: user locale
        type: string
        required: false
      pressureunit:
        description: '0 -> mbar, 1 -> inHg, 2 -> mmHg'
        type: string
        required: false
      reg_locale:
        description: user regional preferences (used for displaying date)
        type: string
        required: false
      unit:
        description: '0 -> metric system, 1 -> imperial system'
        type: string
        required: false
      windunit:
        description: '0 -> kph, 1 -> mph, 2 -> ms, 3 -> beaufort, 4 -> knot'
        type: string
        required: false
  NAUserResponse:
    properties:
      body:
        type: NAUser
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAWelcomeCameras:
    properties:
      alim_status:
        description: If power supply is ok (on/off)
        type: string
        required: false
      id:
        description: Id of the camera
        type: string
        required: false
      is_local:
        description: Only for scope access_camera. If Camera and application requesting the information are on the same IP (true/false)
        type: boolean
        required: false
      name:
        description: Name of the camera
        type: string
        required: false
      sd_status:
        description: If SD card status is ok (on/off)
        type: string
        required: false
      status:
        description: If camera is monitoring (on/off)
        type: string
        required: false
      type:
        description: Type of the camera
        type: string
        required: false
      vpn_url:
        description: Only for scope access_camera. Address of the camera
        type: string
        required: false
  NAWelcomeEvents:
    properties:
      camera_id:
        description: Camera that detected the event
        type: string
        required: false
      id:
        description: Identifier of the event
        type: string
        required: false
      is_arrival:
        description: If person was considered away before being seen during this event
        type: boolean
        required: false
      message:
        description: User facing event description
        type: string
        required: false
      person_id:
        description: Id of the person the event is about (if any)
        type: string
        required: false
      snapshot:
        description: 'Snapshot id, version and key. (Used in Getcamerapicture)'
        type: NAWelcomeSnapshot
        required: false
      sub_type:
        description: Subtypes of SD and Alim events. Go to Welcome page for further details.
        format: int32
        type: integer
        required: false
      time:
        description: Time of occurence of event
        format: int32
        type: integer
        required: false
      type:
        description: Type of events. Go to the Welcome page for further details.
        type: string
        required: false
      video_id:
        description: Identifier of the video
        type: string
        required: false
      video_status:
        description: 'Status of the video (recording, deleted or available)'
        type: string
        required: false
  NAWelcomeEventsData:
    properties:
      events_list:
        items:
          type: NAWelcomeEvents
        type: array
        required: false
  NAWelcomeEventsResponse:
    properties:
      body:
        type: NAWelcomeEventsData
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAWelcomeFace:
    properties:
      id:
        description: Id of the face.
        type: string
        required: false
      key:
        description: Key for this face to use in getcamerapicture.
        type: string
        required: false
      version:
        description: Version of the face if user changed their photo.
        format: int32
        type: integer
        required: false
  NAWelcomeGlobalInfo:
    properties:
      show_tags:
        description: show tags
        type: boolean
        required: false
  NAWelcomeHomeData:
    properties:
      global_info:
        type: NAWelcomeGlobalInfo
        required: false
      homes:
        items:
          type: NAWelcomeHomes
        type: array
        required: false
      user:
        type: NAWelcomeUser
        required: false
  NAWelcomeHomeDataResponse:
    properties:
      body:
        type: NAWelcomeHomeData
        required: false
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAWelcomeHomes:
    properties:
      cameras:
        items:
          type: NAWelcomeCameras
        type: array
        required: false
      events:
        items:
          type: NAWelcomeEvents
        type: array
        required: false
      id:
        description: Id of the home.
        type: string
        required: false
      modules:
        items:
          type: NAWelcomeModules
        type: array
        required: false
      name:
        description: Name of the home
        type: string
        required: false
      persons:
        items:
          type: NAWelcomePersons
        type: array
        required: false
      place:
        type: NAWelcomePlace
        required: false
  NAWelcomeModules:
    properties:
      battery_percent:
        description: remaining battery percentage
        format: int32
        type: integer
        required: false
      id:
        description: mac address of the module
        type: string
        required: false
      last_activity:
        description: Timestamp of last move detected by the module
        format: int32
        type: integer
        required: false
      name:
        description: name of the module (given by the user)
        type: string
        required: false
      rf:
        description: Radio status
        type: string
        required: false
      status:
        description: status of the module
        type: string
        required: false
      type:
        description: NACamDoorTag for tags
        type: string
        required: false
  NAWelcomePersons:
    properties:
      face:
        items:
          type: NAWelcomeFace
        type: array
        required: false
      id:
        description: Id of the person.
        type: string
        required: false
      last_seen:
        description: Time at which the person was last seen.
        format: int32
        type: integer
        required: false
      out_of_sight:
        description: True if the Person is out of sight.
        type: boolean
        required: false
      pseudo:
        description: 'Name of the person, if pseudo is missing, person is unknown.'
        type: string
        required: false
  NAWelcomePersonsAwayResponse:
    properties:
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
      time_server:
        format: int32
        type: integer
        required: false
  NAWelcomePlace:
    properties:
      city:
        description: City of the home.
        type: string
        required: false
      country:
        description: Country of the home.
        type: string
        required: false
      timezone:
        description: Timezone of the home.
        type: string
        required: false
  NAWelcomeSnapshot:
    properties:
      id:
        description: Id of the snapshot.
        type: string
        required: false
      key:
        description: Key for this snapshot.
        type: string
        required: false
      version:
        description: Version of the snapshot.
        format: int32
        type: integer
        required: false
  NAWelcomeUser:
    properties:
      lang:
        description: user locale
        type: string
        required: false
      reg_locale:
        description: user regional preferences (used for displaying date)
        type: string
        required: false
  NAWelcomeWebhookResponse:
    properties:
      status:
        type: string
        required: false
      time_exec:
        format: double
        type: number
        required: false
  NAYearMonth:
    properties:
      m:
        format: int32
        type: integer
        required: false
      'y':
        format: int32
        type: integer
        required: false
  NAZone:
    properties:
      id:
        format: int32
        type: integer
        required: false
      name:
        type: string
        required: false
      temp:
        format: float
        type: number
        required: false
      type:
        format: int32
        type: integer
        required: false
