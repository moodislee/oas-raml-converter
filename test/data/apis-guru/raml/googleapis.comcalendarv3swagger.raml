#%RAML 1.0
title: Calendar
version: v3
baseUri: 'https://www.googleapis.com/calendar/v3'
protocols:
  - HTTPS
description: Manipulates events and other calendar data.
(oas-tags-definition):
  - name: acl
  - name: calendarList
  - name: calendars
  - name: channels
  - name: colors
  - name: events
  - name: freebusy
  - name: settings
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_calendar_64dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): calendar
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/google-apps/calendar/firstapp'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/calendar'
        - 'https://www.googleapis.com/auth/calendar.readonly'
    description: Oauth 2.0 authentication
/calendars:
  displayName: calendars
  '/{calendarId}':
    displayName: '{calendarId}'
    /events:
      displayName: events
      '/{eventId}':
        displayName: '{eventId}'
        uriParameters:
          eventId:
            description: Event identifier.
            required: true
            type: string
        delete:
          displayName: calendar.events.delete
          description: Deletes an event.
          responses:
            '200':
              description: Successful response
          queryParameters:
            sendNotifications:
              description: Whether to send notifications about the deletion of the event. Optional. The default is False.
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - events
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: calendar.events.get
          description: Returns an event.
          responses:
            '200':
              body:
                application/json:
                  type: Event
              description: Successful response
          queryParameters:
            alwaysIncludeEmail:
              description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
              type: boolean
            maxAttendees:
              description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
              minimum: 1
              type: integer
            timeZone:
              description: Time zone used in the response. Optional. The default is the time zone of the calendar.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - events
        patch:
          displayName: calendar.events.patch
          description: Updates an event. This method supports patch semantics.
          body:
            application/json:
              type: Event
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Event
              description: Successful response
          queryParameters:
            alwaysIncludeEmail:
              description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
              type: boolean
            maxAttendees:
              description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
              minimum: 1
              type: integer
            sendNotifications:
              description: 'Whether to send notifications about the event update (e.g. attendee''s responses, title changes, etc.). Optional. The default is False.'
              type: boolean
            supportsAttachments:
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - events
        put:
          displayName: calendar.events.update
          description: Updates an event.
          body:
            application/json:
              type: Event
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Event
              description: Successful response
          queryParameters:
            alwaysIncludeEmail:
              description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
              type: boolean
            maxAttendees:
              description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
              minimum: 1
              type: integer
            sendNotifications:
              description: 'Whether to send notifications about the event update (e.g. attendee''s responses, title changes, etc.). Optional. The default is False.'
              type: boolean
            supportsAttachments:
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - events
        /instances:
          displayName: instances
          get:
            displayName: calendar.events.instances
            description: Returns instances of the specified recurring event.
            responses:
              '200':
                body:
                  application/json:
                    type: Events
                description: Successful response
            queryParameters:
              alwaysIncludeEmail:
                description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
                type: boolean
              maxAttendees:
                description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
                minimum: 1
                type: integer
              maxResults:
                description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
                minimum: 1
                type: integer
              originalStart:
                description: The original start time of the instance in the result. Optional.
                type: string
              pageToken:
                description: Token specifying which result page to return. Optional.
                type: string
              showDeleted:
                description: Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.
                type: boolean
              timeMax:
                description: Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset.
                type: string
              timeMin:
                description: Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset.
                type: string
              timeZone:
                description: Time zone used in the response. Optional. The default is the time zone of the calendar.
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/calendar.readonly'
            (oas-tags):
              - events
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        /move:
          displayName: move
          post:
            displayName: calendar.events.move
            description: 'Moves an event to another calendar, i.e. changes an event''s organizer.'
            responses:
              '200':
                body:
                  application/json:
                    type: Event
                description: Successful response
            queryParameters:
              destination:
                description: Calendar identifier of the target calendar where the event is to be moved to.
                required: true
                type: string
              sendNotifications:
                description: Whether to send notifications about the change of the event's organizer. Optional. The default is False.
                type: boolean
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/calendar'
            (oas-tags):
              - events
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
      post:
        displayName: calendar.events.insert
        description: Creates an event.
        body:
          application/json:
            type: Event
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Event
            description: Successful response
        queryParameters:
          maxAttendees:
            description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
            minimum: 1
            type: integer
          sendNotifications:
            description: Whether to send notifications about the creation of the new event. Optional. The default is False.
            type: boolean
          supportsAttachments:
            description: Whether API client performing operation supports event attachments. Optional. The default is False.
            type: boolean
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar'
        (oas-tags):
          - events
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      /quickAdd:
        displayName: quickAdd
        post:
          displayName: calendar.events.quickAdd
          description: Creates an event based on a simple text string.
          responses:
            '200':
              body:
                application/json:
                  type: Event
              description: Successful response
          queryParameters:
            text:
              description: The text describing the event to be created.
              required: true
              type: string
            sendNotifications:
              description: Whether to send notifications about the creation of the event. Optional. The default is False.
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - events
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      get:
        displayName: calendar.events.list
        description: Returns events on the specified calendar.
        responses:
          '200':
            body:
              application/json:
                type: Events
            description: Successful response
        queryParameters:
          alwaysIncludeEmail:
            description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
            type: boolean
          iCalUID:
            description: Specifies event ID in the iCalendar format to be included in the response. Optional.
            type: string
          maxAttendees:
            description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
            minimum: 1
            type: integer
          maxResults:
            default: 250
            description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
            minimum: 1
            type: integer
          orderBy:
            description: 'The order of the events returned in the result. Optional. The default is an unspecified, stable order.'
            enum:
              - startTime
              - updated
            type: string
          pageToken:
            description: Token specifying which result page to return. Optional.
            type: string
          privateExtendedProperty:
            collectionFormat: multi
            description: Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
          q:
            description: 'Free text search terms to find events that match these terms in any field, except for extended properties. Optional.'
            type: string
          sharedExtendedProperty:
            collectionFormat: multi
            description: Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
          showDeleted:
            description: 'Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.'
            type: boolean
          showHiddenInvitations:
            description: Whether to include hidden invitations in the result. Optional. The default is False.
            type: boolean
          singleEvents:
            description: 'Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.'
            type: boolean
          syncToken:
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
              There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.

              These are: 
              - iCalUID 
              - orderBy 
              - privateExtendedProperty 
              - q 
              - sharedExtendedProperty 
              - timeMin 
              - timeMax 
              - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
            type: string
          timeMax:
            description: 'Upper bound (exclusive) for an event''s start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.'
            type: string
          timeMin:
            description: 'Lower bound (inclusive) for an event''s end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.'
            type: string
          timeZone:
            description: Time zone used in the response. Optional. The default is the time zone of the calendar.
            type: string
          updatedMin:
            description: 'Lower bound for an event''s last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar.readonly'
        (oas-tags):
          - events
      /watch:
        displayName: watch
        post:
          displayName: calendar.events.watch
          description: Watch for changes to Events resources.
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              body:
                application/json:
                  type: Channel
              description: Successful response
          queryParameters:
            alwaysIncludeEmail:
              description: 'Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.'
              type: boolean
            iCalUID:
              description: Specifies event ID in the iCalendar format to be included in the response. Optional.
              type: string
            maxAttendees:
              description: 'The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.'
              minimum: 1
              type: integer
            maxResults:
              default: 250
              description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
              minimum: 1
              type: integer
            orderBy:
              description: 'The order of the events returned in the result. Optional. The default is an unspecified, stable order.'
              enum:
                - startTime
                - updated
              type: string
            pageToken:
              description: Token specifying which result page to return. Optional.
              type: string
            privateExtendedProperty:
              collectionFormat: multi
              description: Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
              items:
                type: string
              type: array
              facets:
                collectionFormat: string
            q:
              description: 'Free text search terms to find events that match these terms in any field, except for extended properties. Optional.'
              type: string
            sharedExtendedProperty:
              collectionFormat: multi
              description: Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
              items:
                type: string
              type: array
              facets:
                collectionFormat: string
            showDeleted:
              description: 'Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.'
              type: boolean
            showHiddenInvitations:
              description: Whether to include hidden invitations in the result. Optional. The default is False.
              type: boolean
            singleEvents:
              description: 'Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.'
              type: boolean
            syncToken:
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
                There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.

                These are: 
                - iCalUID 
                - orderBy 
                - privateExtendedProperty 
                - q 
                - sharedExtendedProperty 
                - timeMin 
                - timeMax 
                - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
              type: string
            timeMax:
              description: 'Upper bound (exclusive) for an event''s start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.'
              type: string
            timeMin:
              description: 'Lower bound (inclusive) for an event''s end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.'
              type: string
            timeZone:
              description: Time zone used in the response. Optional. The default is the time zone of the calendar.
              type: string
            updatedMin:
              description: 'Lower bound for an event''s last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - events
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /import:
        displayName: import
        post:
          displayName: calendar.events.import
          description: Imports an event. This operation is used to add a private copy of an existing event to a calendar.
          body:
            application/json:
              type: Event
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Event
              description: Successful response
          queryParameters:
            supportsAttachments:
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - events
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
    uriParameters:
      calendarId:
        description: 'Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.'
        required: true
        type: string
    get:
      displayName: calendar.calendars.get
      description: Returns metadata for a calendar.
      responses:
        '200':
          body:
            application/json:
              type: Calendar
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/calendar.readonly'
      (oas-tags):
        - calendars
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    put:
      displayName: calendar.calendars.update
      description: Updates metadata for a calendar.
      body:
        application/json:
          type: Calendar
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Calendar
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/calendar'
      (oas-tags):
        - calendars
    /acl:
      displayName: acl
      post:
        displayName: calendar.acl.insert
        description: Creates an access control rule.
        body:
          application/json:
            type: AclRule
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: AclRule
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar'
        (oas-tags):
          - acl
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{ruleId}':
        displayName: '{ruleId}'
        uriParameters:
          ruleId:
            description: ACL rule identifier.
            required: true
            type: string
        delete:
          displayName: calendar.acl.delete
          description: Deletes an access control rule.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - acl
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        patch:
          displayName: calendar.acl.patch
          description: Updates an access control rule. This method supports patch semantics.
          body:
            application/json:
              type: AclRule
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: AclRule
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - acl
        get:
          displayName: calendar.acl.get
          description: Returns an access control rule.
          responses:
            '200':
              body:
                application/json:
                  type: AclRule
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - acl
        put:
          displayName: calendar.acl.update
          description: Updates an access control rule.
          body:
            application/json:
              type: AclRule
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: AclRule
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - acl
      get:
        displayName: calendar.acl.list
        description: Returns the rules in the access control list for the calendar.
        responses:
          '200':
            body:
              application/json:
                type: Acl
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
            type: integer
          pageToken:
            description: Token specifying which result page to return. Optional.
            type: string
          showDeleted:
            description: Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to "none". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.
            type: boolean
          syncToken:
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar'
        (oas-tags):
          - acl
      /watch:
        displayName: watch
        post:
          displayName: calendar.acl.watch
          description: Watch for changes to ACL resources.
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              body:
                application/json:
                  type: Channel
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
              type: integer
            pageToken:
              description: Token specifying which result page to return. Optional.
              type: string
            showDeleted:
              description: Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to "none". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.
              type: boolean
            syncToken:
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - acl
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
    /clear:
      displayName: clear
      post:
        displayName: calendar.calendars.clear
        description: Clears a primary calendar. This operation deletes all events associated with the primary calendar of an account.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar'
        (oas-tags):
          - calendars
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    delete:
      displayName: calendar.calendars.delete
      description: Deletes a secondary calendar. Use calendars.clear for clearing all events on primary calendars.
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/calendar'
      (oas-tags):
        - calendars
    patch:
      displayName: calendar.calendars.patch
      description: Updates metadata for a calendar. This method supports patch semantics.
      body:
        application/json:
          type: Calendar
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Calendar
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/calendar'
      (oas-tags):
        - calendars
  post:
    displayName: calendar.calendars.insert
    description: Creates a secondary calendar.
    body:
      application/json:
        type: Calendar
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Calendar
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/calendar'
    (oas-tags):
      - calendars
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/users:
  displayName: users
  /me:
    displayName: me
    /settings:
      displayName: settings
      '/{setting}':
        displayName: '{setting}'
        uriParameters:
          setting:
            description: The id of the user setting.
            required: true
            type: string
        get:
          displayName: calendar.settings.get
          description: Returns a single user setting.
          responses:
            '200':
              body:
                application/json:
                  type: Setting
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - settings
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /watch:
        displayName: watch
        post:
          displayName: calendar.settings.watch
          description: Watch for changes to Settings resources.
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              body:
                application/json:
                  type: Channel
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
              type: integer
            pageToken:
              description: Token specifying which result page to return. Optional.
              type: string
            syncToken:
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - settings
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      get:
        displayName: calendar.settings.list
        description: Returns all user settings for the authenticated user.
        responses:
          '200':
            body:
              application/json:
                type: Settings
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
            type: integer
          pageToken:
            description: Token specifying which result page to return. Optional.
            type: string
          syncToken:
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar.readonly'
        (oas-tags):
          - settings
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    /calendarList:
      displayName: calendarList
      get:
        displayName: calendar.calendarList.list
        description: Returns entries on the user's calendar list.
        responses:
          '200':
            body:
              application/json:
                type: CalendarList
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
            type: integer
          minAccessRole:
            description: The minimum access role for the user in the returned entries. Optional. The default is no restriction.
            enum:
              - freeBusyReader
              - owner
              - reader
              - writer
            type: string
          pageToken:
            description: Token specifying which result page to return. Optional.
            type: string
          showDeleted:
            description: Whether to include deleted calendar list entries in the result. Optional. The default is False.
            type: boolean
          showHidden:
            description: Whether to show hidden entries. Optional. The default is False.
            type: boolean
          syncToken:
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
              To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar.readonly'
        (oas-tags):
          - calendarList
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: calendar.calendarList.insert
        description: Adds an entry to the user's calendar list.
        body:
          application/json:
            type: CalendarListEntry
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: CalendarListEntry
            description: Successful response
        queryParameters:
          colorRgbFormat:
            description: 'Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.'
            type: boolean
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/calendar'
        (oas-tags):
          - calendarList
      /watch:
        displayName: watch
        post:
          displayName: calendar.calendarList.watch
          description: Watch for changes to CalendarList resources.
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              body:
                application/json:
                  type: Channel
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
              type: integer
            minAccessRole:
              description: The minimum access role for the user in the returned entries. Optional. The default is no restriction.
              enum:
                - freeBusyReader
                - owner
                - reader
                - writer
              type: string
            pageToken:
              description: Token specifying which result page to return. Optional.
              type: string
            showDeleted:
              description: Whether to include deleted calendar list entries in the result. Optional. The default is False.
              type: boolean
            showHidden:
              description: Whether to show hidden entries. Optional. The default is False.
              type: boolean
            syncToken:
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
                To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - calendarList
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      '/{calendarId}':
        displayName: '{calendarId}'
        uriParameters:
          calendarId:
            description: 'Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.'
            required: true
            type: string
        delete:
          displayName: calendar.calendarList.delete
          description: Deletes an entry on the user's calendar list.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - calendarList
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: calendar.calendarList.get
          description: Returns an entry on the user's calendar list.
          responses:
            '200':
              body:
                application/json:
                  type: CalendarListEntry
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar.readonly'
          (oas-tags):
            - calendarList
        put:
          displayName: calendar.calendarList.update
          description: Updates an entry on the user's calendar list.
          body:
            application/json:
              type: CalendarListEntry
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: CalendarListEntry
              description: Successful response
          queryParameters:
            colorRgbFormat:
              description: 'Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.'
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - calendarList
        patch:
          displayName: calendar.calendarList.patch
          description: Updates an entry on the user's calendar list. This method supports patch semantics.
          body:
            application/json:
              type: CalendarListEntry
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: CalendarListEntry
              description: Successful response
          queryParameters:
            colorRgbFormat:
              description: 'Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.'
              type: boolean
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/calendar'
          (oas-tags):
            - calendarList
/channels:
  displayName: channels
  /stop:
    displayName: stop
    post:
      displayName: calendar.channels.stop
      description: Stop watching resources through this channel
      body:
        application/json:
          type: Channel
          (oas-body-name): resource
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/calendar.readonly'
      (oas-tags):
        - channels
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/colors:
  displayName: colors
  get:
    displayName: calendar.colors.get
    description: Returns the color definitions for calendars and events.
    responses:
      '200':
        body:
          application/json:
            type: Colors
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/calendar.readonly'
    (oas-tags):
      - colors
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/freeBusy:
  displayName: freeBusy
  post:
    displayName: calendar.freebusy.query
    description: Returns free/busy information for a set of calendars.
    body:
      application/json:
        type: FreeBusyRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: FreeBusyResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/calendar.readonly'
    (oas-tags):
      - freebusy
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
types:
  Acl:
    properties:
      etag:
        description: ETag of the collection.
        type: string
        required: false
      items:
        description: List of rules on the access control list.
        items:
          type: AclRule
        type: array
        required: false
      kind:
        default: 'calendar#acl'
        description: 'Type of the collection ("calendar#acl").'
        type: string
        required: false
      nextPageToken:
        description: 'Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.'
        type: string
        required: false
      nextSyncToken:
        description: 'Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.'
        type: string
        required: false
  AclRule:
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: Identifier of the ACL rule.
        type: string
        required: false
      kind:
        default: 'calendar#aclRule'
        description: 'Type of the resource ("calendar#aclRule").'
        type: string
        required: false
      role:
        description: |-
          The role assigned to the scope. Possible values are:  
          - "none" - Provides no access. 
          - "freeBusyReader" - Provides read access to free/busy information. 
          - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
          - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
          - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
        type: string
        required: false
      scope:
        description: The scope of the rule.
        properties:
          type:
            description: |-
              The type of the scope. Possible values are:  
              - "default" - The public scope. This is the default value. 
              - "user" - Limits the scope to a single user. 
              - "group" - Limits the scope to a group. 
              - "domain" - Limits the scope to a domain.  Note: The permissions granted to the "default", or public, scope apply to any user, authenticated or not.
            type: string
            required: false
          value:
            description: 'The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type "default".'
            type: string
            required: false
        type: object
        required: false
  Calendar:
    properties:
      description:
        description: Description of the calendar. Optional.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: Identifier of the calendar. To retrieve IDs call the calendarList.list() method.
        type: string
        required: false
      kind:
        default: 'calendar#calendar'
        description: 'Type of the resource ("calendar#calendar").'
        type: string
        required: false
      location:
        description: Geographic location of the calendar as free-form text. Optional.
        type: string
        required: false
      summary:
        description: Title of the calendar.
        type: string
        required: false
      timeZone:
        description: 'The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) Optional.'
        type: string
        required: false
  CalendarList:
    properties:
      etag:
        description: ETag of the collection.
        type: string
        required: false
      items:
        description: Calendars that are present on the user's calendar list.
        items:
          type: CalendarListEntry
        type: array
        required: false
      kind:
        default: 'calendar#calendarList'
        description: 'Type of the collection ("calendar#calendarList").'
        type: string
        required: false
      nextPageToken:
        description: 'Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.'
        type: string
        required: false
      nextSyncToken:
        description: 'Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.'
        type: string
        required: false
  CalendarListEntry:
    properties:
      accessRole:
        description: |-
          The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  
          - "freeBusyReader" - Provides read access to free/busy information. 
          - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
          - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
          - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
        type: string
        required: false
      backgroundColor:
        description: 'The main color of the calendar in the hexadecimal format "#0088aa". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.'
        type: string
        required: false
      colorId:
        description: The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional.
        type: string
        required: false
      defaultReminders:
        description: The default reminders that the authenticated user has for this calendar.
        items:
          type: EventReminder
        type: array
        required: false
      deleted:
        default: false
        description: Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.
        type: boolean
        required: false
      description:
        description: Description of the calendar. Optional. Read-only.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      foregroundColor:
        description: 'The foreground color of the calendar in the hexadecimal format "#ffffff". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.'
        type: string
        required: false
      hidden:
        default: false
        description: Whether the calendar has been hidden from the list. Optional. The default is False.
        type: boolean
        required: false
      id:
        description: Identifier of the calendar.
        type: string
        required: false
      kind:
        default: 'calendar#calendarListEntry'
        description: 'Type of the resource ("calendar#calendarListEntry").'
        type: string
        required: false
      location:
        description: Geographic location of the calendar as free-form text. Optional. Read-only.
        type: string
        required: false
      notificationSettings:
        description: The notifications that the authenticated user is receiving for this calendar.
        properties:
          notifications:
            description: The list of notifications set for this calendar.
            items:
              type: CalendarNotification
            type: array
            required: false
        type: object
        required: false
      primary:
        default: false
        description: Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.
        type: boolean
        required: false
      selected:
        default: false
        description: Whether the calendar content shows up in the calendar UI. Optional. The default is False.
        type: boolean
        required: false
      summary:
        description: Title of the calendar. Read-only.
        type: string
        required: false
      summaryOverride:
        description: The summary that the authenticated user has set for this calendar. Optional.
        type: string
        required: false
      timeZone:
        description: The time zone of the calendar. Optional. Read-only.
        type: string
        required: false
  CalendarNotification:
    properties:
      method:
        description: |-
          The method used to deliver the notification. Possible values are:  
          - "email" - Reminders are sent via email. 
          - "sms" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates. SMS reminders are only available for Google Apps for Work, Education, and Government customers.
        type: string
        required: false
      type:
        description: |-
          The type of notification. Possible values are:  
          - "eventCreation" - Notification sent when a new event is put on the calendar. 
          - "eventChange" - Notification sent when an event is changed. 
          - "eventCancellation" - Notification sent when an event is cancelled. 
          - "eventResponse" - Notification sent when an event is changed. 
          - "agenda" - An agenda with the events of the day (sent out in the morning).
        type: string
        required: false
  Channel:
    properties:
      address:
        description: The address where notifications are delivered for this channel.
        type: string
        required: false
      expiration:
        description: 'Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      id:
        description: A UUID or similar unique string that identifies this channel.
        type: string
        required: false
      kind:
        default: 'api#channel'
        description: 'Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string "api#channel".'
        type: string
        required: false
      params:
        additionalProperties:
          description: Declares a new parameter by name.
          type: string
        description: Additional parameters controlling delivery channel behavior. Optional.
        type: object
        required: false
      payload:
        description: A Boolean value to indicate whether payload is wanted. Optional.
        type: boolean
        required: false
      resourceId:
        description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
        type: string
        required: false
      resourceUri:
        description: A version-specific identifier for the watched resource.
        type: string
        required: false
      token:
        description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
        type: string
        required: false
      type:
        description: The type of delivery mechanism used for this channel.
        type: string
        required: false
  ColorDefinition:
    properties:
      background:
        description: The background color associated with this color definition.
        type: string
        required: false
      foreground:
        description: The foreground color that can be used to write on top of a background with 'background' color.
        type: string
        required: false
  Colors:
    properties:
      calendar:
        additionalProperties:
          description: A calendar color defintion.
          type: ColorDefinition
        description: 'A global palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.'
        type: object
        required: false
      event:
        additionalProperties:
          description: An event color definition.
          type: ColorDefinition
        description: 'A global palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.'
        type: object
        required: false
      kind:
        default: 'calendar#colors'
        description: 'Type of the resource ("calendar#colors").'
        type: string
        required: false
      updated:
        description: Last modification time of the color palette (as a RFC3339 timestamp). Read-only.
        format: rfc3339
        type: datetime
        required: false
  Error:
    properties:
      domain:
        description: 'Domain, or broad category, of the error.'
        type: string
        required: false
      reason:
        description: |-
          Specific reason for the error. Some of the possible values are:  
          - "groupTooBig" - The group of users requested is too large for a single query. 
          - "tooManyCalendarsRequested" - The number of calendars requested is too large for a single query. 
          - "notFound" - The requested resource was not found. 
          - "internalError" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list.
        type: string
        required: false
  Event:
    properties:
      anyoneCanAddSelf:
        default: false
        description: Whether anyone can invite themselves to the event (currently works for Google+ events only). Optional. The default is False.
        type: boolean
        required: false
      attachments:
        description: |-
          File attachments for the event. Currently only Google Drive attachments are supported.
          In order to modify attachments the supportsAttachments request parameter should be set to true.
          There can be at most 25 attachments per event,
        items:
          type: EventAttachment
        type: array
        required: false
      attendees:
        description: The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.
        items:
          type: EventAttendee
        type: array
        required: false
      attendeesOmitted:
        default: false
        description: 'Whether attendees may have been omitted from the event''s representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant''s response. Optional. The default is False.'
        type: boolean
        required: false
      colorId:
        description: The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional.
        type: string
        required: false
      created:
        description: Creation time of the event (as a RFC3339 timestamp). Read-only.
        format: rfc3339
        type: datetime
        required: false
      creator:
        description: The creator of the event. Read-only.
        properties:
          displayName:
            description: 'The creator''s name, if available.'
            type: string
            required: false
          email:
            description: 'The creator''s email address, if available.'
            type: string
            required: false
          id:
            description: 'The creator''s Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API'
            type: string
            required: false
          self:
            default: false
            description: Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.
            type: boolean
            required: false
        type: object
        required: false
      description:
        description: Description of the event. Optional.
        type: string
        required: false
      end:
        description: 'The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.'
        type: EventDateTime
        required: false
      endTimeUnspecified:
        default: false
        description: 'Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.'
        type: boolean
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      extendedProperties:
        description: Extended properties of the event.
        properties:
          private:
            additionalProperties:
              description: The name of the private property and the corresponding value.
              type: string
            description: Properties that are private to the copy of the event that appears on this calendar.
            type: object
            required: false
          shared:
            additionalProperties:
              description: The name of the shared property and the corresponding value.
              type: string
            description: Properties that are shared between copies of the event on other attendees' calendars.
            type: object
            required: false
        type: object
        required: false
      gadget:
        description: A gadget that extends this event.
        properties:
          display:
            description: |-
              The gadget's display mode. Optional. Possible values are:  
              - "icon" - The gadget displays next to the event's title in the calendar view. 
              - "chip" - The gadget displays when the event is clicked.
            type: string
            required: false
          height:
            description: The gadget's height in pixels. The height must be an integer greater than 0. Optional.
            format: int32
            type: integer
            required: false
          iconLink:
            description: The gadget's icon URL. The URL scheme must be HTTPS.
            type: string
            required: false
          link:
            description: The gadget's URL. The URL scheme must be HTTPS.
            type: string
            required: false
          preferences:
            additionalProperties:
              description: The preference name and corresponding value.
              type: string
            description: Preferences.
            type: object
            required: false
          title:
            description: The gadget's title.
            type: string
            required: false
          type:
            description: The gadget's type.
            type: string
            required: false
          width:
            description: The gadget's width in pixels. The width must be an integer greater than 0. Optional.
            format: int32
            type: integer
            required: false
        type: object
        required: false
      guestsCanInviteOthers:
        default: true
        description: Whether attendees other than the organizer can invite others to the event. Optional. The default is True.
        type: boolean
        required: false
      guestsCanModify:
        default: false
        description: Whether attendees other than the organizer can modify the event. Optional. The default is False.
        type: boolean
        required: false
      guestsCanSeeOtherGuests:
        default: true
        description: Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.
        type: boolean
        required: false
      hangoutLink:
        description: An absolute link to the Google+ hangout associated with this event. Read-only.
        type: string
        required: false
      htmlLink:
        description: An absolute link to this event in the Google Calendar Web UI. Read-only.
        type: string
        required: false
      iCalUID:
        description: |-
          Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method.
          Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
        type: string
        required: false
      id:
        description: |-
          Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  
          - characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 
          - the length of the ID must be between 5 and 1024 characters 
          - the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122.
          If you do not specify an ID, it will be automatically generated by the server.
          Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
        type: string
        required: false
      kind:
        default: 'calendar#event'
        description: 'Type of the resource ("calendar#event").'
        type: string
        required: false
      location:
        description: Geographic location of the event as free-form text. Optional.
        type: string
        required: false
      locked:
        default: false
        description: 'Whether this is a locked event copy where no changes can be made to the main event fields "summary", "description", "location", "start", "end" or "recurrence". The default is False. Read-Only.'
        type: boolean
        required: false
      organizer:
        description: 'The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.'
        properties:
          displayName:
            description: 'The organizer''s name, if available.'
            type: string
            required: false
          email:
            description: 'The organizer''s email address, if available. It must be a valid email address as per RFC5322.'
            type: string
            required: false
          id:
            description: 'The organizer''s Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API'
            type: string
            required: false
          self:
            default: false
            description: Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.
            type: boolean
            required: false
        type: object
        required: false
      originalStartTime:
        description: 'For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable.'
        type: EventDateTime
        required: false
      privateCopy:
        default: false
        description: Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.
        type: boolean
        required: false
      recurrence:
        description: 'List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events.'
        items:
          type: string
        type: array
        required: false
      recurringEventId:
        description: 'For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable.'
        type: string
        required: false
      reminders:
        description: Information about the event's reminders for the authenticated user.
        properties:
          overrides:
            description: 'If the event doesn''t use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event. The maximum number of override reminders is 5.'
            items:
              type: EventReminder
            type: array
            required: false
          useDefault:
            description: Whether the default reminders of the calendar apply to the event.
            type: boolean
            required: false
        type: object
        required: false
      sequence:
        description: Sequence number as per iCalendar.
        format: int32
        type: integer
        required: false
      source:
        description: 'Source from which the event was created. For example, a web page, an email message or any document identifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.'
        properties:
          title:
            description: Title of the source; for example a title of a web page or an email subject.
            type: string
            required: false
          url:
            description: URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.
            type: string
            required: false
        type: object
        required: false
      start:
        description: 'The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.'
        type: EventDateTime
        required: false
      status:
        description: |-
          Status of the event. Optional. Possible values are:  
          - "confirmed" - The event is confirmed. This is the default status. 
          - "tentative" - The event is tentatively confirmed. 
          - "cancelled" - The event is cancelled.
        type: string
        required: false
      summary:
        description: Title of the event.
        type: string
        required: false
      transparency:
        default: opaque
        description: |-
          Whether the event blocks time on the calendar. Optional. Possible values are:  
          - "opaque" - The event blocks time on the calendar. This is the default value. 
          - "transparent" - The event does not block time on the calendar.
        type: string
        required: false
      updated:
        description: Last modification time of the event (as a RFC3339 timestamp). Read-only.
        format: rfc3339
        type: datetime
        required: false
      visibility:
        default: default
        description: |-
          Visibility of the event. Optional. Possible values are:  
          - "default" - Uses the default visibility for events on the calendar. This is the default value. 
          - "public" - The event is public and event details are visible to all readers of the calendar. 
          - "private" - The event is private and only event attendees may view event details. 
          - "confidential" - The event is private. This value is provided for compatibility reasons.
        type: string
        required: false
  EventAttachment:
    properties:
      fileId:
        description: |-
          ID of the attached file. Read-only.
          For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.
        type: string
        required: false
      fileUrl:
        description: |-
          URL link to the attachment.
          For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.
        type: string
        required: false
      iconLink:
        description: URL link to the attachment's icon. Read-only.
        type: string
        required: false
      mimeType:
        description: Internet media type (MIME type) of the attachment.
        type: string
        required: false
      title:
        description: Attachment title.
        type: string
        required: false
  EventAttendee:
    properties:
      additionalGuests:
        default: 0
        description: Number of additional guests. Optional. The default is 0.
        format: int32
        type: integer
        required: false
      comment:
        description: The attendee's response comment. Optional.
        type: string
        required: false
      displayName:
        description: 'The attendee''s name, if available. Optional.'
        type: string
        required: false
      email:
        description: 'The attendee''s email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.'
        type: string
        required: false
      id:
        description: 'The attendee''s Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API'
        type: string
        required: false
      optional:
        default: false
        description: Whether this is an optional attendee. Optional. The default is False.
        type: boolean
        required: false
      organizer:
        description: Whether the attendee is the organizer of the event. Read-only. The default is False.
        type: boolean
        required: false
      resource:
        default: false
        description: Whether the attendee is a resource. Read-only. The default is False.
        type: boolean
        required: false
      responseStatus:
        description: |-
          The attendee's response status. Possible values are:  
          - "needsAction" - The attendee has not responded to the invitation. 
          - "declined" - The attendee has declined the invitation. 
          - "tentative" - The attendee has tentatively accepted the invitation. 
          - "accepted" - The attendee has accepted the invitation.
        type: string
        required: false
      self:
        default: false
        description: Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.
        type: boolean
        required: false
  EventDateTime:
    properties:
      date:
        description: 'The date, in the format "yyyy-mm-dd", if this is an all-day event.'
        type: date-only
        required: false
      dateTime:
        description: 'The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.'
        format: rfc3339
        type: datetime
        required: false
      timeZone:
        description: 'The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.'
        type: string
        required: false
  EventReminder:
    properties:
      method:
        description: |-
          The method used by this reminder. Possible values are:  
          - "email" - Reminders are sent via email. 
          - "sms" - Reminders are sent via SMS. These are only available for Google Apps for Work, Education, and Government customers. Requests to set SMS reminders for other account types are ignored. 
          - "popup" - Reminders are sent via a UI popup.
        type: string
        required: false
      minutes:
        description: Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
        format: int32
        type: integer
        required: false
  Events:
    properties:
      accessRole:
        description: |-
          The user's access role for this calendar. Read-only. Possible values are:  
          - "none" - The user has no access. 
          - "freeBusyReader" - The user has read access to free/busy information. 
          - "reader" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
          - "writer" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
          - "owner" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
        type: string
        required: false
      defaultReminders:
        description: The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).
        items:
          type: EventReminder
        type: array
        required: false
      description:
        description: Description of the calendar. Read-only.
        type: string
        required: false
      etag:
        description: ETag of the collection.
        type: string
        required: false
      items:
        description: List of events on the calendar.
        items:
          type: Event
        type: array
        required: false
      kind:
        default: 'calendar#events'
        description: 'Type of the collection ("calendar#events").'
        type: string
        required: false
      nextPageToken:
        description: 'Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.'
        type: string
        required: false
      nextSyncToken:
        description: 'Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.'
        type: string
        required: false
      summary:
        description: Title of the calendar. Read-only.
        type: string
        required: false
      timeZone:
        description: The time zone of the calendar. Read-only.
        type: string
        required: false
      updated:
        description: Last modification time of the calendar (as a RFC3339 timestamp). Read-only.
        format: rfc3339
        type: datetime
        required: false
  FreeBusyCalendar:
    properties:
      busy:
        description: List of time ranges during which this calendar should be regarded as busy.
        items:
          type: TimePeriod
        type: array
        required: false
      errors:
        description: Optional error(s) (if computation for the calendar failed).
        items:
          type: Error
        type: array
        required: false
  FreeBusyGroup:
    properties:
      calendars:
        description: List of calendars' identifiers within a group.
        items:
          type: string
        type: array
        required: false
      errors:
        description: Optional error(s) (if computation for the group failed).
        items:
          type: Error
        type: array
        required: false
  FreeBusyRequest:
    properties:
      calendarExpansionMax:
        description: Maximal number of calendars for which FreeBusy information is to be provided. Optional.
        format: int32
        type: integer
        required: false
      groupExpansionMax:
        description: Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.
        format: int32
        type: integer
        required: false
      items:
        description: List of calendars and/or groups to query.
        items:
          type: FreeBusyRequestItem
        type: array
        required: false
      timeMax:
        description: The end of the interval for the query.
        format: rfc3339
        type: datetime
        required: false
      timeMin:
        description: The start of the interval for the query.
        format: rfc3339
        type: datetime
        required: false
      timeZone:
        default: UTC
        description: Time zone used in the response. Optional. The default is UTC.
        type: string
        required: false
  FreeBusyRequestItem:
    properties:
      id:
        description: The identifier of a calendar or a group.
        type: string
        required: false
  FreeBusyResponse:
    properties:
      calendars:
        additionalProperties:
          description: Free/busy expansions for a single calendar.
          type: FreeBusyCalendar
        description: List of free/busy information for calendars.
        type: object
        required: false
      groups:
        additionalProperties:
          description: List of calendars that are members of this group.
          type: FreeBusyGroup
        description: Expansion of groups.
        type: object
        required: false
      kind:
        default: 'calendar#freeBusy'
        description: 'Type of the resource ("calendar#freeBusy").'
        type: string
        required: false
      timeMax:
        description: The end of the interval.
        format: rfc3339
        type: datetime
        required: false
      timeMin:
        description: The start of the interval.
        format: rfc3339
        type: datetime
        required: false
  Setting:
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: The id of the user setting.
        type: string
        required: false
      kind:
        default: 'calendar#setting'
        description: 'Type of the resource ("calendar#setting").'
        type: string
        required: false
      value:
        description: Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters.
        type: string
        required: false
  Settings:
    properties:
      etag:
        description: Etag of the collection.
        type: string
        required: false
      items:
        description: List of user settings.
        items:
          type: Setting
        type: array
        required: false
      kind:
        default: 'calendar#settings'
        description: 'Type of the collection ("calendar#settings").'
        type: string
        required: false
      nextPageToken:
        description: 'Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.'
        type: string
        required: false
      nextSyncToken:
        description: 'Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.'
        type: string
        required: false
  TimePeriod:
    properties:
      end:
        description: The (exclusive) end of the time period.
        format: rfc3339
        type: datetime
        required: false
      start:
        description: The (inclusive) start of the time period.
        format: rfc3339
        type: datetime
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
