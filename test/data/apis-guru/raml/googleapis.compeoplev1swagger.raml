#%RAML 1.0
title: Google People
version: v1
baseUri: 'https://people.googleapis.com/'
protocols:
  - HTTPS
description: The Google People API service gives access to information about profiles and contacts.
(oas-tags-definition):
  - name: people
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/people/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): people
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/people/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/contacts'
        - 'https://www.googleapis.com/auth/contacts.readonly'
        - 'https://www.googleapis.com/auth/plus.login'
        - 'https://www.googleapis.com/auth/user.addresses.read'
        - 'https://www.googleapis.com/auth/user.birthday.read'
        - 'https://www.googleapis.com/auth/user.emails.read'
        - 'https://www.googleapis.com/auth/user.phonenumbers.read'
        - 'https://www.googleapis.com/auth/userinfo.email'
        - 'https://www.googleapis.com/auth/userinfo.profile'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  '/{resourceName}':
    displayName: '{resourceName}'
    /connections:
      displayName: connections
      get:
        displayName: people.people.connections.list
        description: Provides a list of the authenticated user's contacts merged with any linked profiles.
        responses:
          '200':
            body:
              application/json:
                type: ListConnectionsResponse
            description: Successful response
        queryParameters:
          pageToken:
            description: The token of the page to be returned.
            type: string
          pageSize:
            description: 'The number of connections to include in the response. Valid values are between 1 and 500, inclusive. Defaults to 100.'
            type: integer
          sortOrder:
            description: The order in which the connections should be sorted. Defaults to `LAST_MODIFIED_ASCENDING`.
            enum:
              - LAST_MODIFIED_ASCENDING
              - FIRST_NAME_ASCENDING
              - LAST_NAME_ASCENDING
            type: string
          syncToken:
            description: 'A sync token, returned by a previous call to `people.connections.list`. Only resources changed since the sync token was created are returned.'
            type: string
          requestMask.includeField:
            description: 'Comma-separated list of fields to be included in the response. Omitting this field will include all fields. Each path should start with `person.`: for example, `person.names` or `person.photos`.'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/contacts.readonly'
        (oas-tags):
          - people
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    uriParameters:
      resourceName:
        description: 'The resource name of the person to provide information about. - To get information about the authenticated user, specify `people/me`. - To get information about any user, specify the resource name that identifies the user, such as the resource names returned by [`people.connections.list`](/people/api/rest/v1/people.connections/list).'
        required: true
        type: string
    get:
      displayName: people.people.get
      description: Provides information about a person resource for a resource name. Use `people/me` to indicate the authenticated user.
      responses:
        '200':
          body:
            application/json:
              type: Person
          description: Successful response
      queryParameters:
        requestMask.includeField:
          description: 'Comma-separated list of fields to be included in the response. Omitting this field will include all fields. Each path should start with `person.`: for example, `person.names` or `person.photos`.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/userinfo.profile'
      (oas-tags):
        - people
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/people:batchGet':
    displayName: 'people:batchGet'
    get:
      displayName: people.people.getBatchGet
      description: Provides information about a list of specific people by specifying a list of requested resource names. Use `people/me` to indicate the authenticated user.
      responses:
        '200':
          body:
            application/json:
              type: GetPeopleResponse
          description: Successful response
      queryParameters:
        resourceNames:
          collectionFormat: multi
          description: 'The resource name, such as one returned by [`people.connections.list`](/people/api/rest/v1/people.connections/list), of one of the people to provide information about. You can include this parameter up to 50 times in one request.'
          items:
            type: string
          type: array
          facets:
            collectionFormat: string
        requestMask.includeField:
          description: 'Comma-separated list of fields to be included in the response. Omitting this field will include all fields. Each path should start with `person.`: for example, `person.names` or `person.photos`.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/userinfo.profile'
      (oas-tags):
        - people
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
types:
  Address:
    description: A person's physical address. May be a P.O. box or street address. All fields are optional.
    properties:
      city:
        description: The city of the address.
        type: string
        required: false
      country:
        description: The country of the address.
        type: string
        required: false
      countryCode:
        description: 'The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country code of the address.'
        type: string
        required: false
      extendedAddress:
        description: 'The extended address of the address; for example, the apartment number.'
        type: string
        required: false
      formattedType:
        description: The read-only type of the address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      formattedValue:
        description: The read-only value of the address formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the address.
        type: FieldMetadata
        required: false
      poBox:
        description: The P.O. box of the address.
        type: string
        required: false
      postalCode:
        description: The postal code of the address.
        type: string
        required: false
      region:
        description: 'The region of the address; for example, the state or province.'
        type: string
        required: false
      streetAddress:
        description: The street address.
        type: string
        required: false
      type:
        description: 'The type of the address. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `home` * `work` * `other`'
        type: string
        required: false
  Biography:
    description: A person's short biography.
    properties:
      metadata:
        description: Metadata about the biography.
        type: FieldMetadata
        required: false
      value:
        description: The short biography.
        type: string
        required: false
  Birthday:
    description: 'A person''s birthday. At least one of the `date` and `text` fields are specified. The `date` and `text` fields typically represent the same date, but are not guaranteed to.'
    properties:
      date:
        description: The date of the birthday.
        type: Date
        required: false
      metadata:
        description: Metadata about the birthday.
        type: FieldMetadata
        required: false
      text:
        description: A free-form string representing the user's birthday.
        type: string
        required: false
  BraggingRights:
    description: A person's bragging rights.
    properties:
      metadata:
        description: Metadata about the bragging rights.
        type: FieldMetadata
        required: false
      value:
        description: 'The bragging rights; for example, `climbed mount everest`.'
        type: string
        required: false
  ContactGroupMembership:
    description: A Google contact group membership.
    properties:
      contactGroupId:
        description: 'The contact group ID for the contact group membership. The contact group ID can be custom or predefined. Possible values include, but are not limited to, the following: * `myContacts` * `starred` * A numerical ID for user-created groups.'
        type: string
        required: false
  CoverPhoto:
    description: A person's cover photo. A large image shown on the person's profile page that represents who they are or what they care about.
    properties:
      default:
        description: True if the cover photo is the default cover photo; false if the cover photo is a user-provided cover photo.
        type: boolean
        required: false
      metadata:
        description: Metadata about the cover photo.
        type: FieldMetadata
        required: false
      url:
        description: The URL of the cover photo.
        type: string
        required: false
  Date:
    description: 'Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The day may be 0 to represent a year and month where the day is not significant. The year may be 0 to represent a month and day independent of year; for example, anniversary date.'
    properties:
      day:
        description: 'Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year/month where the day is not significant.'
        format: int32
        type: integer
        required: false
      month:
        description: Month of year. Must be from 1 to 12.
        format: int32
        type: integer
        required: false
      year:
        description: 'Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.'
        format: int32
        type: integer
        required: false
  DomainMembership:
    description: A Google Apps Domain membership.
    properties:
      inViewerDomain:
        description: True if the person is in the viewer's Google Apps domain.
        type: boolean
        required: false
  EmailAddress:
    description: A person's email address.
    properties:
      formattedType:
        description: The read-only type of the email address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the email address.
        type: FieldMetadata
        required: false
      type:
        description: 'The type of the email address. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `home` * `work` * `other`'
        type: string
        required: false
      value:
        description: The email address.
        type: string
        required: false
  Event:
    description: An event related to the person.
    properties:
      date:
        description: The date of the event.
        type: Date
        required: false
      formattedType:
        description: The read-only type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the event.
        type: FieldMetadata
        required: false
      type:
        description: 'The type of the event. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `anniversary` * `other`'
        type: string
        required: false
  FieldMetadata:
    description: Metadata about a field.
    properties:
      primary:
        description: True if the field is the primary field; false if the field is a secondary field.
        type: boolean
        required: false
      source:
        description: The source of the field.
        type: Source
        required: false
      verified:
        description: 'True if the field is verified; false if the field is unverified. A verified field is typically a name, email address, phone number, or website that has been confirmed to be owned by the person.'
        type: boolean
        required: false
  Gender:
    description: A person's gender.
    properties:
      formattedValue:
        description: The read-only value of the gender translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the gender.
        type: FieldMetadata
        required: false
      value:
        description: 'The gender for the person. The gender can be custom or predefined. Possible values include, but are not limited to, the following: * `male` * `female` * `other` * `unknown`'
        type: string
        required: false
  GetPeopleResponse:
    properties:
      responses:
        description: The response for each requested resource name.
        items:
          type: PersonResponse
        type: array
        required: false
  ImClient:
    description: A person's instant messaging client.
    properties:
      formattedProtocol:
        description: The read-only protocol of the IM client formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      formattedType:
        description: The read-only type of the IM client translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the IM client.
        type: FieldMetadata
        required: false
      protocol:
        description: 'The protocol of the IM client. The protocol can be custom or predefined. Possible values include, but are not limited to, the following: * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`'
        type: string
        required: false
      type:
        description: 'The type of the IM client. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `home` * `work` * `other`'
        type: string
        required: false
      username:
        description: The user name used in the IM client.
        type: string
        required: false
  Interest:
    description: One of the person's interests.
    properties:
      metadata:
        description: Metadata about the interest.
        type: FieldMetadata
        required: false
      value:
        description: 'The interest; for example, `stargazing`.'
        type: string
        required: false
  ListConnectionsResponse:
    properties:
      connections:
        description: The list of people that the requestor is connected to.
        items:
          type: Person
        type: array
        required: false
      nextPageToken:
        description: The token that can be used to retrieve the next page of results.
        type: string
        required: false
      nextSyncToken:
        description: The token that can be used to retrieve changes since the last request.
        type: string
        required: false
  Locale:
    description: A person's locale preference.
    properties:
      metadata:
        description: Metadata about the locale.
        type: FieldMetadata
        required: false
      value:
        description: 'The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47) language tag representing the locale.'
        type: string
        required: false
  Membership:
    description: A person's membership in a group.
    properties:
      contactGroupMembership:
        description: The contact group membership.
        type: ContactGroupMembership
        required: false
      domainMembership:
        description: The domain membership.
        type: DomainMembership
        required: false
      metadata:
        description: Metadata about the membership.
        type: FieldMetadata
        required: false
  Name:
    description: 'A person''s name. If the name is a mononym, the family name is empty.'
    properties:
      displayName:
        description: The display name formatted according to the locale specified by the viewer's account or the Accept-Language HTTP header.
        type: string
        required: false
      familyName:
        description: The family name.
        type: string
        required: false
      givenName:
        description: The given name.
        type: string
        required: false
      honorificPrefix:
        description: 'The honorific prefixes, such as `Mrs.` or `Dr.`'
        type: string
        required: false
      honorificSuffix:
        description: 'The honorific suffixes, such as `Jr.`'
        type: string
        required: false
      metadata:
        description: Metadata about the name.
        type: FieldMetadata
        required: false
      middleName:
        description: The middle name(s).
        type: string
        required: false
      phoneticFamilyName:
        description: The family name spelled as it sounds.
        type: string
        required: false
      phoneticGivenName:
        description: The given name spelled as it sounds.
        type: string
        required: false
      phoneticHonorificPrefix:
        description: The honorific prefixes spelled as they sound.
        type: string
        required: false
      phoneticHonorificSuffix:
        description: The honorific suffixes spelled as they sound.
        type: string
        required: false
      phoneticMiddleName:
        description: The middle name(s) spelled as they sound.
        type: string
        required: false
  Nickname:
    description: A person's nickname.
    properties:
      metadata:
        description: Metadata about the nickname.
        type: FieldMetadata
        required: false
      type:
        description: The type of the nickname.
        enum:
          - DEFAULT
          - MAIDEN_NAME
          - INITIALS
          - GPLUS
          - OTHER_NAME
        type: string
        required: false
      value:
        description: The nickname.
        type: string
        required: false
  Occupation:
    description: A person's occupation.
    properties:
      metadata:
        description: Metadata about the occupation.
        type: FieldMetadata
        required: false
      value:
        description: 'The occupation; for example, `carpenter`.'
        type: string
        required: false
  Organization:
    description: A person's past or current organization. Overlapping date ranges are permitted.
    properties:
      current:
        description: True if the organization is the person's current organization; false if the organization is a past organization.
        type: boolean
        required: false
      department:
        description: The person's department at the organization.
        type: string
        required: false
      domain:
        description: 'The domain name associated with the organization; for example, `google.com`.'
        type: string
        required: false
      endDate:
        description: The end date when the person left the organization.
        type: Date
        required: false
      formattedType:
        description: The read-only type of the organization translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      jobDescription:
        description: The person's job description at the organization.
        type: string
        required: false
      location:
        description: The location of the organization office the person works at.
        type: string
        required: false
      metadata:
        description: Metadata about the organization.
        type: FieldMetadata
        required: false
      name:
        description: The name of the organization.
        type: string
        required: false
      phoneticName:
        description: The phonetic name of the organization.
        type: string
        required: false
      startDate:
        description: The start date when the person joined the organization.
        type: Date
        required: false
      symbol:
        description: 'The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or acronym.'
        type: string
        required: false
      title:
        description: The person's job title at the organization.
        type: string
        required: false
      type:
        description: 'The type of the organization. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `work` * `school`'
        type: string
        required: false
  Person:
    description: 'Information about a person merged from various data sources such as the authenticated user''s contacts and profile data. Fields other than IDs, metadata, and group memberships are user-edited. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true.'
    properties:
      addresses:
        description: The person's street addresses.
        items:
          type: Address
        type: array
        required: false
      ageRange:
        description: The person's age range.
        enum:
          - AGE_RANGE_UNSPECIFIED
          - LESS_THAN_EIGHTEEN
          - EIGHTEEN_TO_TWENTY
          - TWENTY_ONE_OR_OLDER
        type: string
        required: false
      biographies:
        description: The person's biographies.
        items:
          type: Biography
        type: array
        required: false
      birthdays:
        description: The person's birthdays.
        items:
          type: Birthday
        type: array
        required: false
      braggingRights:
        description: The person's bragging rights.
        items:
          type: BraggingRights
        type: array
        required: false
      coverPhotos:
        description: The person's cover photos.
        items:
          type: CoverPhoto
        type: array
        required: false
      emailAddresses:
        description: The person's email addresses.
        items:
          type: EmailAddress
        type: array
        required: false
      etag:
        description: 'The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation.'
        type: string
        required: false
      events:
        description: The person's events.
        items:
          type: Event
        type: array
        required: false
      genders:
        description: The person's genders.
        items:
          type: Gender
        type: array
        required: false
      imClients:
        description: The person's instant messaging clients.
        items:
          type: ImClient
        type: array
        required: false
      interests:
        description: The person's interests.
        items:
          type: Interest
        type: array
        required: false
      locales:
        description: The person's locale preferences.
        items:
          type: Locale
        type: array
        required: false
      memberships:
        description: The person's group memberships.
        items:
          type: Membership
        type: array
        required: false
      metadata:
        description: Metadata about the person.
        type: PersonMetadata
        required: false
      names:
        description: The person's names.
        items:
          type: Name
        type: array
        required: false
      nicknames:
        description: The person's nicknames.
        items:
          type: Nickname
        type: array
        required: false
      occupations:
        description: The person's occupations.
        items:
          type: Occupation
        type: array
        required: false
      organizations:
        description: The person's past or current organizations.
        items:
          type: Organization
        type: array
        required: false
      phoneNumbers:
        description: The person's phone numbers.
        items:
          type: PhoneNumber
        type: array
        required: false
      photos:
        description: The person's photos.
        items:
          type: Photo
        type: array
        required: false
      relations:
        description: The person's relations.
        items:
          type: Relation
        type: array
        required: false
      relationshipInterests:
        description: The kind of relationship the person is looking for.
        items:
          type: RelationshipInterest
        type: array
        required: false
      relationshipStatuses:
        description: The person's relationship statuses.
        items:
          type: RelationshipStatus
        type: array
        required: false
      residences:
        description: The person's residences.
        items:
          type: Residence
        type: array
        required: false
      resourceName:
        description: 'The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters. Always starts with `people/`.'
        type: string
        required: false
      skills:
        description: The person's skills.
        items:
          type: Skill
        type: array
        required: false
      taglines:
        description: The person's taglines.
        items:
          type: Tagline
        type: array
        required: false
      urls:
        description: The person's associated URLs.
        items:
          type: Url
        type: array
        required: false
  PersonMetadata:
    description: Metadata about a person.
    properties:
      deleted:
        description: 'True if the person resource has been deleted. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token.'
        type: boolean
        required: false
      objectType:
        description: The type of the person object.
        enum:
          - OBJECT_TYPE_UNSPECIFIED
          - PERSON
          - PAGE
        type: string
        required: false
      previousResourceNames:
        description: 'Any former resource names this person has had. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL.'
        items:
          type: string
        type: array
        required: false
      sources:
        description: The sources of data for the person.
        items:
          type: Source
        type: array
        required: false
  PersonResponse:
    description: The response for a single person
    properties:
      httpStatusCode:
        description: '[HTTP 1.1 status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).'
        format: int32
        type: integer
        required: false
      person:
        description: The person.
        type: Person
        required: false
      requestedResourceName:
        description: 'The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.'
        type: string
        required: false
  PhoneNumber:
    description: A person's phone number.
    properties:
      canonicalForm:
        description: 'The read-only canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number.'
        type: string
        required: false
      formattedType:
        description: The read-only type of the phone number translated and formatted in the viewer's account locale or the the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the phone number.
        type: FieldMetadata
        required: false
      type:
        description: 'The type of the phone number. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`'
        type: string
        required: false
      value:
        description: The phone number.
        type: string
        required: false
  Photo:
    description: A person's photo. A picture shown next to the person's name to help others recognize the person.
    properties:
      metadata:
        description: Metadata about the photo.
        type: FieldMetadata
        required: false
      url:
        description: The URL of the photo.
        type: string
        required: false
  Relation:
    description: A person's relation to another person.
    properties:
      formattedType:
        description: The type of the relation translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header.
        type: string
        required: false
      metadata:
        description: Metadata about the relation.
        type: FieldMetadata
        required: false
      person:
        description: The name of the other person this relation refers to.
        type: string
        required: false
      type:
        description: 'The person''s relation to the other person. The type can be custom or predefined. Possible values include, but are not limited to, the following values: * `spouse` * `child` * `mother` * `father` * `parent` * `brother` * `sister` * `friend` * `relative` * `domesticPartner` * `manager` * `assistant` * `referredBy` * `partner`'
        type: string
        required: false
  RelationshipInterest:
    description: The kind of relationship the person is looking for.
    properties:
      formattedValue:
        description: The value of the relationship interest translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header.
        type: string
        required: false
      metadata:
        description: Metadata about the relationship interest.
        type: FieldMetadata
        required: false
      value:
        description: 'The kind of relationship the person is looking for. The value can be custom or predefined. Possible values include, but are not limited to, the following values: * `friend` * `date` * `relationship` * `networking`'
        type: string
        required: false
  RelationshipStatus:
    description: A person's relationship status.
    properties:
      formattedValue:
        description: The read-only value of the relationship status translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the relationship status.
        type: FieldMetadata
        required: false
      value:
        description: 'The relationship status. The value can be custom or predefined. Possible values include, but are not limited to, the following: * `single` * `inARelationship` * `engaged` * `married` * `itsComplicated` * `openRelationship` * `widowed` * `inDomesticPartnership` * `inCivilUnion`'
        type: string
        required: false
  Residence:
    description: A person's past or current residence.
    properties:
      current:
        description: True if the residence is the person's current residence; false if the residence is a past residence.
        type: boolean
        required: false
      metadata:
        description: Metadata about the residence.
        type: FieldMetadata
        required: false
      value:
        description: The address of the residence.
        type: string
        required: false
  Skill:
    description: A skill that the person has.
    properties:
      metadata:
        description: Metadata about the skill.
        type: FieldMetadata
        required: false
      value:
        description: 'The skill; for example, `underwater basket weaving`.'
        type: string
        required: false
  Source:
    description: The source of a field.
    properties:
      id:
        description: A unique identifier within the source type generated by the server.
        type: string
        required: false
      type:
        description: The source type.
        enum:
          - OTHER
          - ACCOUNT
          - PROFILE
          - DOMAIN_PROFILE
          - CONTACT
        type: string
        required: false
  Tagline:
    description: A brief one-line description of the person.
    properties:
      metadata:
        description: Metadata about the tagline.
        type: FieldMetadata
        required: false
      value:
        description: The tagline.
        type: string
        required: false
  Url:
    description: A person's associated URLs.
    properties:
      formattedType:
        description: The read-only type of the URL translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
        required: false
      metadata:
        description: Metadata about the URL.
        type: FieldMetadata
        required: false
      type:
        description: 'The type of the URL. The type can be custom or predefined. Possible values include, but are not limited to, the following: * `home` * `work` * `blog` * `profile` * `homePage` * `ftp` * `reservations` * `appInstallPage`: website for a Google+ application. * `other`'
        type: string
        required: false
      value:
        description: The URL.
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
