#%RAML 1.0
title: Cloud Monitoring
version: v2beta2
baseUri: 'https://www.googleapis.com/cloudmonitoring/v2beta2/projects'
protocols:
  - HTTPS
description: Accesses Google Cloud Monitoring data.
(oas-tags-definition):
  - name: metricDescriptors
  - name: timeseries
  - name: timeseriesDescriptors
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/cloudmonitoring/v2beta2/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): cloudmonitoring
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/monitoring/v2beta2/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/monitoring'
    description: Oauth 2.0 authentication
'/{project}':
  displayName: '{project}'
  /timeseriesDescriptors:
    displayName: timeseriesDescriptors
    '/{metric}':
      displayName: '{metric}'
      uriParameters:
        metric:
          description: 'Metric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.'
          required: true
          type: string
      get:
        displayName: cloudmonitoring.timeseriesDescriptors.list
        description: List the descriptors of the time series that match the metric and labels values and that have data points in the interval. Large responses are paginated; use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.
        responses:
          '200':
            body:
              application/json:
                type: ListTimeseriesDescriptorsResponse
            description: Successful response
        queryParameters:
          youngest:
            description: 'End of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.'
            required: true
            type: string
          aggregator:
            description: The aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.
            enum:
              - max
              - mean
              - min
              - sum
            type: string
          count:
            default: 100
            description: 'Maximum number of time series descriptors per page. Used for pagination. If not specified, count = 100.'
            maximum: 1000
            minimum: 1
            type: integer
          labels:
            collectionFormat: multi
            description: |-
              A collection of labels for the matching time series, which are represented as:  
              - key==value: key equals the value 
              - key=~value: key regex matches the value 
              - key!=value: key does not equal the value 
              - key!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:
              label=cloud.googleapis.com%2Flocation=~us-central1.*
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
          oldest:
            description: 'Start of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]'
            type: string
          pageToken:
            description: 'The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.'
            type: string
          timespan:
            description: |-
              Length of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:  
              - s: second 
              - m: minute 
              - h: hour 
              - d: day 
              - w: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.

              If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].
            type: string
          window:
            description: |-
              The sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:  
              - m: minute 
              - h: hour 
              - d: day 
              - w: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/monitoring'
        (oas-tags):
          - timeseriesDescriptors
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
  '/timeseries:write':
    displayName: 'timeseries:write'
    post:
      displayName: cloudmonitoring.timeseries.write
      description: 'Put data points to one or more time series for one or more metrics. If a time series does not exist, a new time series will be created. It is not allowed to write a time series point that is older than the existing youngest point of that time series. Points that are older than the existing youngest point of that time series will be discarded silently. Therefore, users should make sure that points of a time series are written sequentially in the order of their end time.'
      body:
        application/json:
          type: WriteTimeseriesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: WriteTimeseriesResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/monitoring'
      (oas-tags):
        - timeseries
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /timeseries:
    displayName: timeseries
    '/{metric}':
      displayName: '{metric}'
      uriParameters:
        metric:
          description: 'Metric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.'
          required: true
          type: string
      get:
        displayName: cloudmonitoring.timeseries.list
        description: List the data points of the time series that match the metric and labels values and that have data points in the interval. Large responses are paginated; use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.
        responses:
          '200':
            body:
              application/json:
                type: ListTimeseriesResponse
            description: Successful response
        queryParameters:
          youngest:
            description: 'End of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.'
            required: true
            type: string
          aggregator:
            description: The aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.
            enum:
              - max
              - mean
              - min
              - sum
            type: string
          count:
            default: 6000
            description: 'Maximum number of data points per page, which is used for pagination of results.'
            maximum: 12000
            minimum: 1
            type: integer
          labels:
            collectionFormat: multi
            description: |-
              A collection of labels for the matching time series, which are represented as:  
              - key==value: key equals the value 
              - key=~value: key regex matches the value 
              - key!=value: key does not equal the value 
              - key!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:
              label=cloud.googleapis.com%2Flocation=~us-central1.*
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
          oldest:
            description: 'Start of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]'
            type: string
          pageToken:
            description: 'The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.'
            type: string
          timespan:
            description: |-
              Length of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:  
              - s: second 
              - m: minute 
              - h: hour 
              - d: day 
              - w: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.

              If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].
            type: string
          window:
            description: |-
              The sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:  
              - m: minute 
              - h: hour 
              - d: day 
              - w: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/monitoring'
        (oas-tags):
          - timeseries
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
  /metricDescriptors:
    displayName: metricDescriptors
    '/{metric}':
      displayName: '{metric}'
      uriParameters:
        metric:
          description: Name of the metric.
          required: true
          type: string
      delete:
        displayName: cloudmonitoring.metricDescriptors.delete
        description: Delete an existing metric.
        responses:
          '200':
            body:
              application/json:
                type: DeleteMetricDescriptorResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/monitoring'
        (oas-tags):
          - metricDescriptors
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    post:
      displayName: cloudmonitoring.metricDescriptors.create
      description: Create a new metric.
      body:
        application/json:
          type: MetricDescriptor
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: MetricDescriptor
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/monitoring'
      (oas-tags):
        - metricDescriptors
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: cloudmonitoring.metricDescriptors.list
      description: 'List metric descriptors that match the query. If the query is not set, then all of the metric descriptors will be returned. Large responses will be paginated, use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.'
      responses:
        '200':
          body:
            application/json:
              type: ListMetricDescriptorsResponse
          description: Successful response
      queryParameters:
        count:
          default: 100
          description: 'Maximum number of metric descriptors per page. Used for pagination. If not specified, count = 100.'
          maximum: 1000
          minimum: 1
          type: integer
        pageToken:
          description: 'The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.'
          type: string
        query:
          description: 'The query used to search against existing metrics. Separate keywords with a space; the service joins all keywords with AND, meaning that all keywords must match for a metric to be returned. If this field is omitted, all metrics are returned. If an empty string is passed with this field, no metrics are returned.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/monitoring'
      (oas-tags):
        - metricDescriptors
types:
  DeleteMetricDescriptorResponse:
    description: The response of cloudmonitoring.metricDescriptors.delete.
    properties:
      kind:
        default: 'cloudmonitoring#deleteMetricDescriptorResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#deleteMetricDescriptorResponse".'
        type: string
        required: false
  ListMetricDescriptorsRequest:
    description: The request of cloudmonitoring.metricDescriptors.list.
    properties:
      kind:
        default: 'cloudmonitoring#listMetricDescriptorsRequest'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listMetricDescriptorsRequest".'
        type: string
        required: false
  ListMetricDescriptorsResponse:
    description: The response of cloudmonitoring.metricDescriptors.list.
    properties:
      kind:
        default: 'cloudmonitoring#listMetricDescriptorsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listMetricDescriptorsResponse".'
        type: string
        required: false
      metrics:
        description: The returned metric descriptors.
        items:
          type: MetricDescriptor
        type: array
        required: false
      nextPageToken:
        description: 'Pagination token. If present, indicates that additional results are available for retrieval. To access the results past the pagination limit, pass this value to the pageToken query parameter.'
        type: string
        required: false
  ListTimeseriesDescriptorsRequest:
    description: The request of cloudmonitoring.timeseriesDescriptors.list
    properties:
      kind:
        default: 'cloudmonitoring#listTimeseriesDescriptorsRequest'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listTimeseriesDescriptorsRequest".'
        type: string
        required: false
  ListTimeseriesDescriptorsResponse:
    description: The response of cloudmonitoring.timeseriesDescriptors.list
    properties:
      kind:
        default: 'cloudmonitoring#listTimeseriesDescriptorsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listTimeseriesDescriptorsResponse".'
        type: string
        required: false
      nextPageToken:
        description: 'Pagination token. If present, indicates that additional results are available for retrieval. To access the results past the pagination limit, set this value to the pageToken query parameter.'
        type: string
        required: false
      oldest:
        description: 'The oldest timestamp of the interval of this query, as an RFC 3339 string.'
        format: rfc3339
        type: datetime
        required: false
      timeseries:
        description: The returned time series descriptors.
        items:
          type: TimeseriesDescriptor
        type: array
        required: false
      youngest:
        description: 'The youngest timestamp of the interval of this query, as an RFC 3339 string.'
        format: rfc3339
        type: datetime
        required: false
  ListTimeseriesRequest:
    description: The request of cloudmonitoring.timeseries.list
    properties:
      kind:
        default: 'cloudmonitoring#listTimeseriesRequest'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listTimeseriesRequest".'
        type: string
        required: false
  ListTimeseriesResponse:
    description: The response of cloudmonitoring.timeseries.list
    properties:
      kind:
        default: 'cloudmonitoring#listTimeseriesResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#listTimeseriesResponse".'
        type: string
        required: false
      nextPageToken:
        description: 'Pagination token. If present, indicates that additional results are available for retrieval. To access the results past the pagination limit, set the pageToken query parameter to this value. All of the points of a time series will be returned before returning any point of the subsequent time series.'
        type: string
        required: false
      oldest:
        description: The oldest timestamp of the interval of this query as an RFC 3339 string.
        format: rfc3339
        type: datetime
        required: false
      timeseries:
        description: The returned time series.
        items:
          type: Timeseries
        type: array
        required: false
      youngest:
        description: The youngest timestamp of the interval of this query as an RFC 3339 string.
        format: rfc3339
        type: datetime
        required: false
  MetricDescriptor:
    description: 'A metricDescriptor defines the name, label keys, and data type of a particular metric.'
    properties:
      description:
        description: Description of this metric.
        type: string
        required: false
      labels:
        description: Labels defined for this metric.
        items:
          type: MetricDescriptorLabelDescriptor
        type: array
        required: false
      name:
        description: The name of this metric.
        type: string
        required: false
      project:
        description: The project ID to which the metric belongs.
        type: string
        required: false
      typeDescriptor:
        description: Type description for this metric.
        type: MetricDescriptorTypeDescriptor
        required: false
  MetricDescriptorLabelDescriptor:
    description: 'A label in a metric is a description of this metric, including the key of this description (what the description is), and the value for this description.'
    properties:
      description:
        description: Label description.
        type: string
        required: false
      key:
        description: Label key.
        type: string
        required: false
  MetricDescriptorTypeDescriptor:
    description: A type in a metric contains information about how the metric is collected and what its data points look like.
    properties:
      metricType:
        description: The method of collecting data for the metric. See Metric types.
        type: string
        required: false
      valueType:
        description: The data type of of individual points in the metric's time series. See Metric value types.
        type: string
        required: false
  Point:
    description: 'Point is a single point in a time series. It consists of a start time, an end time, and a value.'
    properties:
      boolValue:
        description: The value of this data point. Either "true" or "false".
        type: boolean
        required: false
      distributionValue:
        description: The value of this data point as a distribution. A distribution value can contain a list of buckets and/or an underflowBucket and an overflowBucket. The values of these points can be used to create a histogram.
        type: PointDistribution
        required: false
      doubleValue:
        description: The value of this data point as a double-precision floating-point number.
        format: double
        type: number
        required: false
      end:
        description: 'The interval [start, end] is the time period to which the point''s value applies. For gauge metrics, whose values are instantaneous measurements, this interval should be empty (start should equal end). For cumulative metrics (of which deltas and rates are special cases), the interval should be non-empty. Both start and end are RFC 3339 strings.'
        format: rfc3339
        type: datetime
        required: false
      int64Value:
        description: The value of this data point as a 64-bit integer.
        format: int64
        type: string
        facets:
          format: string
        required: false
      start:
        description: 'The interval [start, end] is the time period to which the point''s value applies. For gauge metrics, whose values are instantaneous measurements, this interval should be empty (start should equal end). For cumulative metrics (of which deltas and rates are special cases), the interval should be non-empty. Both start and end are RFC 3339 strings.'
        format: rfc3339
        type: datetime
        required: false
      stringValue:
        description: The value of this data point in string format.
        type: string
        required: false
  PointDistribution:
    description: 'Distribution data point value type. When writing distribution points, try to be consistent with the boundaries of your buckets. If you must modify the bucket boundaries, then do so by merging, partitioning, or appending rather than skewing them.'
    properties:
      buckets:
        description: The finite buckets.
        items:
          type: PointDistributionBucket
        type: array
        required: false
      overflowBucket:
        description: The overflow bucket.
        type: PointDistributionOverflowBucket
        required: false
      underflowBucket:
        description: The underflow bucket.
        type: PointDistributionUnderflowBucket
        required: false
  PointDistributionBucket:
    description: 'The histogram''s bucket. Buckets that form the histogram of a distribution value. If the upper bound of a bucket, say U1, does not equal the lower bound of the next bucket, say L2, this means that there is no event in [U1, L2).'
    properties:
      count:
        description: The number of events whose values are in the interval defined by this bucket.
        format: int64
        type: string
        facets:
          format: string
        required: false
      lowerBound:
        description: The lower bound of the value interval of this bucket (inclusive).
        format: double
        type: number
        required: false
      upperBound:
        description: The upper bound of the value interval of this bucket (exclusive).
        format: double
        type: number
        required: false
  PointDistributionOverflowBucket:
    description: The overflow bucket is a special bucket that does not have the upperBound field; it includes all of the events that are no less than its lower bound.
    properties:
      count:
        description: The number of events whose values are in the interval defined by this bucket.
        format: int64
        type: string
        facets:
          format: string
        required: false
      lowerBound:
        description: The lower bound of the value interval of this bucket (inclusive).
        format: double
        type: number
        required: false
  PointDistributionUnderflowBucket:
    description: The underflow bucket is a special bucket that does not have the lowerBound field; it includes all of the events that are less than its upper bound.
    properties:
      count:
        description: The number of events whose values are in the interval defined by this bucket.
        format: int64
        type: string
        facets:
          format: string
        required: false
      upperBound:
        description: The upper bound of the value interval of this bucket (exclusive).
        format: double
        type: number
        required: false
  Timeseries:
    description: The monitoring data is organized as metrics and stored as data points that are recorded over time. Each data point represents information like the CPU utilization of your virtual machine. A historical record of these data points is called a time series.
    properties:
      points:
        description: 'The data points of this time series. The points are listed in order of their end timestamp, from younger to older.'
        items:
          type: Point
        type: array
        required: false
      timeseriesDesc:
        description: The descriptor of this time series.
        type: TimeseriesDescriptor
        required: false
  TimeseriesDescriptor:
    description: TimeseriesDescriptor identifies a single time series.
    properties:
      labels:
        additionalProperties:
          description: The label's name.
          type: string
        description: The label's name.
        type: object
        required: false
      metric:
        description: The name of the metric.
        type: string
        required: false
      project:
        description: The Developers Console project number to which this time series belongs.
        type: string
        required: false
  TimeseriesDescriptorLabel:
    properties:
      key:
        description: The label's name.
        type: string
        required: false
      value:
        description: The label's value.
        type: string
        required: false
  TimeseriesPoint:
    description: 'When writing time series, TimeseriesPoint should be used instead of Timeseries, to enforce single point for each time series in the timeseries.write request.'
    properties:
      point:
        description: The data point in this time series snapshot.
        type: Point
        required: false
      timeseriesDesc:
        description: The descriptor of this time series.
        type: TimeseriesDescriptor
        required: false
  WriteTimeseriesRequest:
    description: The request of cloudmonitoring.timeseries.write
    properties:
      commonLabels:
        additionalProperties:
          description: The label's name.
          type: string
        description: The label's name.
        type: object
        required: false
      timeseries:
        description: Provide time series specific labels and the data points for each time series. The labels in timeseries and the common_labels should form a complete list of labels that required by the metric.
        items:
          type: TimeseriesPoint
        type: array
        required: false
  WriteTimeseriesResponse:
    description: The response of cloudmonitoring.timeseries.write
    properties:
      kind:
        default: 'cloudmonitoring#writeTimeseriesResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "cloudmonitoring#writeTimeseriesResponse".'
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
