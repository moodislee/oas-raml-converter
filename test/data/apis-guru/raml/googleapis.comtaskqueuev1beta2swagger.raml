#%RAML 1.0
title: TaskQueue
version: v1beta2
baseUri: 'https://www.googleapis.com/taskqueue/v1beta2/projects'
protocols:
  - HTTPS
description: Accesses a Google App Engine Pull Task Queue over REST.
(oas-tags-definition):
  - name: taskqueues
  - name: tasks
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/taskqueue/v1beta2/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): taskqueue
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/appengine/docs/python/taskqueue/rest'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/taskqueue'
        - 'https://www.googleapis.com/auth/taskqueue.consumer'
    description: Oauth 2.0 authentication
'/{project}':
  displayName: '{project}'
  /taskqueues:
    displayName: taskqueues
    '/{taskqueue}':
      displayName: '{taskqueue}'
      /tasks:
        displayName: tasks
        '/{task}':
          displayName: '{task}'
          uriParameters:
            task:
              description: The id of the task to delete.
              required: true
              type: string
          post:
            displayName: taskqueue.tasks.update
            description: Update tasks that are leased out of a TaskQueue.
            body:
              application/json:
                type: Task
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: Task
                description: Successful response
            queryParameters:
              newLeaseSeconds:
                description: The new lease in seconds.
                required: true
                type: integer
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/taskqueue.consumer'
            (oas-tags):
              - tasks
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          patch:
            displayName: taskqueue.tasks.patch
            description: Update tasks that are leased out of a TaskQueue. This method supports patch semantics.
            body:
              application/json:
                type: Task
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: Task
                description: Successful response
            queryParameters:
              newLeaseSeconds:
                description: The new lease in seconds.
                required: true
                type: integer
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/taskqueue.consumer'
            (oas-tags):
              - tasks
          get:
            displayName: taskqueue.tasks.get
            description: Get a particular task from a TaskQueue.
            responses:
              '200':
                body:
                  application/json:
                    type: Task
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/taskqueue.consumer'
            (oas-tags):
              - tasks
          delete:
            displayName: taskqueue.tasks.delete
            description: Delete a task from a TaskQueue.
            responses:
              '200':
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/taskqueue.consumer'
            (oas-tags):
              - tasks
        /lease:
          displayName: lease
          post:
            displayName: taskqueue.tasks.lease
            description: Lease 1 or more tasks from a TaskQueue.
            responses:
              '200':
                body:
                  application/json:
                    type: Tasks
                description: Successful response
            queryParameters:
              numTasks:
                description: The number of tasks to lease.
                required: true
                type: integer
              leaseSecs:
                description: The lease in seconds.
                required: true
                type: integer
              groupByTag:
                description: 'When true, all returned tasks will have the same tag'
                type: boolean
              tag:
                description: 'The tag allowed for tasks in the response. Must only be specified if group_by_tag is true. If group_by_tag is true and tag is not specified the tag will be that of the oldest task by eta, i.e. the first available tag'
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/taskqueue.consumer'
            (oas-tags):
              - tasks
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        post:
          displayName: taskqueue.tasks.insert
          description: Insert a new task in a TaskQueue
          body:
            application/json:
              type: Task
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Task
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/taskqueue.consumer'
          (oas-tags):
            - tasks
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: taskqueue.tasks.list
          description: List Tasks in a TaskQueue
          responses:
            '200':
              body:
                application/json:
                  type: Tasks2
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/taskqueue.consumer'
          (oas-tags):
            - tasks
      uriParameters:
        taskqueue:
          description: The id of the taskqueue to get the properties of.
          required: true
          type: string
      get:
        displayName: taskqueue.taskqueues.get
        description: Get detailed information about a TaskQueue.
        responses:
          '200':
            body:
              application/json:
                type: TaskQueue
            description: Successful response
        queryParameters:
          getStats:
            description: Whether to get stats. Optional.
            type: boolean
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/taskqueue.consumer'
        (oas-tags):
          - taskqueues
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
types:
  Task:
    properties:
      enqueueTimestamp:
        description: Time (in seconds since the epoch) at which the task was enqueued.
        format: int64
        type: string
        facets:
          format: string
        required: false
      id:
        description: Name of the task.
        type: string
        required: false
      kind:
        default: 'taskqueues#task'
        description: 'The kind of object returned, in this case set to task.'
        type: string
        required: false
      leaseTimestamp:
        description: Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.
        format: int64
        type: string
        facets:
          format: string
        required: false
      payloadBase64:
        description: A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.
        type: string
        required: false
      queueName:
        description: Name of the queue that the task is in.
        type: string
        required: false
      retry_count:
        description: The number of leases applied to this task.
        format: int32
        type: integer
        required: false
      tag:
        description: 'Tag for the task, could be used later to lease tasks grouped by a specific tag.'
        type: string
        required: false
  TaskQueue:
    properties:
      acl:
        description: ACLs that are applicable to this TaskQueue object.
        properties:
          adminEmails:
            description: 'Email addresses of users who are "admins" of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.'
            items:
              type: string
            type: array
            required: false
          consumerEmails:
            description: Email addresses of users who can "consume" tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.
            items:
              type: string
            type: array
            required: false
          producerEmails:
            description: Email addresses of users who can "produce" tasks into the TaskQueue. This means they can Insert tasks into the queue.
            items:
              type: string
            type: array
            required: false
        type: object
        required: false
      id:
        description: Name of the taskqueue.
        type: string
        required: false
      kind:
        default: 'taskqueues#taskqueue'
        description: 'The kind of REST object returned, in this case taskqueue.'
        type: string
        required: false
      maxLeases:
        description: The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.
        format: int32
        type: integer
        required: false
      stats:
        description: Statistics for the TaskQueue object in question.
        properties:
          leasedLastHour:
            description: Number of tasks leased in the last hour.
            format: int64
            type: string
            facets:
              format: string
            required: false
          leasedLastMinute:
            description: Number of tasks leased in the last minute.
            format: int64
            type: string
            facets:
              format: string
            required: false
          oldestTask:
            description: The timestamp (in seconds since the epoch) of the oldest unfinished task.
            format: int64
            type: string
            facets:
              format: string
            required: false
          totalTasks:
            description: Number of tasks in the queue.
            format: int32
            type: integer
            required: false
        type: object
        required: false
  Tasks:
    properties:
      items:
        description: The actual list of tasks returned as a result of the lease operation.
        items:
          type: Task
        type: array
        required: false
      kind:
        default: 'taskqueue#tasks'
        description: 'The kind of object returned, a list of tasks.'
        type: string
        required: false
  Tasks2:
    properties:
      items:
        description: The actual list of tasks currently active in the TaskQueue.
        items:
          type: Task
        type: array
        required: false
      kind:
        default: 'taskqueues#tasks'
        description: 'The kind of object returned, a list of tasks.'
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
