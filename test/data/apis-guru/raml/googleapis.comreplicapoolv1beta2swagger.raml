#%RAML 1.0
title: Google Compute Engine Instance Group Manager
version: v1beta2
baseUri: 'https://www.googleapis.com/replicapool/v1beta2/projects'
protocols:
  - HTTPS
description: '[Deprecated. Please use Instance Group Manager in Compute API] Provides groups of homogenous Compute Engine instances.'
(oas-tags-definition):
  - name: instanceGroupManagers
  - name: zoneOperations
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/replicapool/v1beta2/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): replicapool
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/compute/docs/instance-groups/manager/v1beta2'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - 'https://www.googleapis.com/auth/compute'
        - 'https://www.googleapis.com/auth/compute.readonly'
    description: Oauth 2.0 authentication
'/{project}':
  displayName: '{project}'
  /zones:
    displayName: zones
    '/{zone}':
      displayName: '{zone}'
      /instanceGroupManagers:
        displayName: instanceGroupManagers
        '/{instanceGroupManager}':
          displayName: '{instanceGroupManager}'
          /recreateInstances:
            displayName: recreateInstances
            post:
              displayName: replicapool.instanceGroupManagers.recreateInstances
              description: 'Recreates the specified instances. The instances are deleted, then recreated using the instance group manager''s current instance template.'
              body:
                application/json:
                  type: InstanceGroupManagersRecreateInstancesRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /setTargetPools:
            displayName: setTargetPools
            post:
              displayName: replicapool.instanceGroupManagers.setTargetPools
              description: Modifies the target pools to which all new instances in this group are assigned. Existing instances in the group are not affected.
              body:
                application/json:
                  type: InstanceGroupManagersSetTargetPoolsRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /setInstanceTemplate:
            displayName: setInstanceTemplate
            post:
              displayName: replicapool.instanceGroupManagers.setInstanceTemplate
              description: Sets the instance template to use when creating new instances in this group. Existing instances are not affected.
              body:
                application/json:
                  type: InstanceGroupManagersSetInstanceTemplateRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /resize:
            displayName: resize
            post:
              displayName: replicapool.instanceGroupManagers.resize
              description: 'Resizes the managed instance group up or down. If resized up, new instances are created using the current instance template. If resized down, instances are removed in the order outlined in Resizing a managed instance group.'
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              queryParameters:
                size:
                  description: Number of instances that should exist in this Instance Group Manager.
                  minimum: 0
                  required: true
                  type: integer
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /deleteInstances:
            displayName: deleteInstances
            post:
              displayName: replicapool.instanceGroupManagers.deleteInstances
              description: 'Deletes the specified instances. The instances are deleted, then removed from the instance group and any target pools of which they were a member. The targetSize of the instance group manager is reduced by the number of instances deleted.'
              body:
                application/json:
                  type: InstanceGroupManagersDeleteInstancesRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /abandonInstances:
            displayName: abandonInstances
            post:
              displayName: replicapool.instanceGroupManagers.abandonInstances
              description: 'Removes the specified instances from the managed instance group, and from any target pools of which they were members, without deleting the instances.'
              body:
                application/json:
                  type: InstanceGroupManagersAbandonInstancesRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/compute'
              (oas-tags):
                - instanceGroupManagers
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          uriParameters:
            instanceGroupManager:
              description: Name of the Instance Group Manager resource to delete.
              required: true
              type: string
          get:
            displayName: replicapool.instanceGroupManagers.get
            description: Returns the specified Instance Group Manager resource.
            responses:
              '200':
                body:
                  application/json:
                    type: InstanceGroupManager
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/compute.readonly'
            (oas-tags):
              - instanceGroupManagers
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          delete:
            displayName: replicapool.instanceGroupManagers.delete
            description: 'Deletes the instance group manager and all instances contained within. If you''d like to delete the manager without deleting the instances, you must first abandon the instances to remove them from the group.'
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/compute'
            (oas-tags):
              - instanceGroupManagers
        get:
          displayName: replicapool.instanceGroupManagers.list
          description: Retrieves the list of Instance Group Manager resources contained within the specified zone.
          responses:
            '200':
              body:
                application/json:
                  type: InstanceGroupManagerList
              description: Successful response
          queryParameters:
            filter:
              description: Optional. Filter expression for filtering listed resources.
              type: string
            maxResults:
              default: 500
              description: Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
              maximum: 500
              minimum: 0
              type: integer
            pageToken:
              description: Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/compute.readonly'
          (oas-tags):
            - instanceGroupManagers
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        post:
          displayName: replicapool.instanceGroupManagers.insert
          description: 'Creates an instance group manager, as well as the instance group and the specified number of instances.'
          body:
            application/json:
              type: InstanceGroupManager
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Operation
              description: Successful response
          queryParameters:
            size:
              description: Number of instances that should exist.
              minimum: 0
              required: true
              type: integer
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/compute'
          (oas-tags):
            - instanceGroupManagers
      /operations:
        displayName: operations
        '/{operation}':
          displayName: '{operation}'
          uriParameters:
            operation:
              description: Name of the operation resource to return.
              required: true
              type: string
          get:
            displayName: replicapool.zoneOperations.get
            description: Retrieves the specified zone-specific operation resource.
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/compute'
            (oas-tags):
              - zoneOperations
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        get:
          displayName: replicapool.zoneOperations.list
          description: Retrieves the list of operation resources contained within the specified zone.
          responses:
            '200':
              body:
                application/json:
                  type: OperationList
              description: Successful response
          queryParameters:
            filter:
              description: Optional. Filter expression for filtering listed resources.
              type: string
            maxResults:
              default: 500
              description: Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
              maximum: 500
              minimum: 0
              type: integer
            pageToken:
              description: Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/compute'
          (oas-tags):
            - zoneOperations
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
types:
  InstanceGroupManager:
    description: An Instance Group Manager resource.
    properties:
      autoHealingPolicies:
        description: The autohealing policy for this managed instance group. You can specify only one value.
        items:
          type: ReplicaPoolAutoHealingPolicy
        type: array
        required: false
      baseInstanceName:
        description: 'The base instance name to use for instances in this group. The value must be a valid RFC1035 name. Supported characters are lowercase letters, numbers, and hyphens (-). Instances are named by appending a hyphen and a random four-character string to the base instance name.'
        type: string
        required: false
      creationTimestamp:
        description: '[Output only] The time the instance group manager was created, in RFC3339 text format.'
        type: string
        required: false
      currentSize:
        description: '[Output only] The number of instances that currently exist and are a part of this group. This includes instances that are starting but are not yet RUNNING, and instances that are in the process of being deleted or abandoned.'
        format: int32
        type: integer
        required: false
      description:
        description: An optional textual description of the instance group manager.
        type: string
        required: false
      fingerprint:
        description: '[Output only] Fingerprint of the instance group manager. This field is used for optimistic locking. An up-to-date fingerprint must be provided in order to modify the Instance Group Manager resource.'
        format: byte
        type: string
        facets:
          format: string
        required: false
      group:
        description: '[Output only] The full URL of the instance group created by the manager. This group contains all of the instances being managed, and cannot contain non-managed instances.'
        type: string
        required: false
      id:
        description: '[Output only] A server-assigned unique identifier for the resource.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      instanceTemplate:
        description: The full URL to an instance template from which all new instances will be created.
        type: string
        required: false
      kind:
        default: 'replicapool#instanceGroupManager'
        description: '[Output only] The resource type. Always replicapool#instanceGroupManager.'
        type: string
        required: false
      name:
        description: 'The name of the instance group manager. Must be 1-63 characters long and comply with RFC1035. Supported characters include lowercase letters, numbers, and hyphens.'
        type: string
        required: false
      selfLink:
        description: '[Output only] The fully qualified URL for this resource.'
        type: string
        required: false
      targetPools:
        description: The full URL of all target pools to which new instances in the group are added. Updating the target pool values does not affect existing instances.
        items:
          type: string
        type: array
        required: false
      targetSize:
        description: '[Output only] The number of instances that the manager is attempting to maintain. Deleting or abandoning instances affects this number, as does resizing the group.'
        format: int32
        type: integer
        required: false
  InstanceGroupManagerList:
    properties:
      id:
        description: Unique identifier for the resource; defined by the server (output only).
        type: string
        required: false
      items:
        description: A list of instance resources.
        items:
          type: InstanceGroupManager
        type: array
        required: false
      kind:
        default: 'replicapool#instanceGroupManagerList'
        description: Type of resource.
        type: string
        required: false
      nextPageToken:
        description: A token used to continue a truncated list request (output only).
        type: string
        required: false
      selfLink:
        description: Server defined URL for this resource (output only).
        type: string
        required: false
  InstanceGroupManagersAbandonInstancesRequest:
    properties:
      instances:
        description: |-
          The names of one or more instances to abandon. For example:
          { 'instances': [ 'instance-c3po', 'instance-r2d2' ] }
        items:
          type: string
        type: array
        required: false
  InstanceGroupManagersDeleteInstancesRequest:
    properties:
      instances:
        description: |-
          Names of instances to delete.

          Example: 'instance-foo', 'instance-bar'
        items:
          type: string
        type: array
        required: false
  InstanceGroupManagersRecreateInstancesRequest:
    properties:
      instances:
        description: |-
          The names of one or more instances to recreate. For example:
          { 'instances': [ 'instance-c3po', 'instance-r2d2' ] }
        items:
          type: string
        type: array
        required: false
  InstanceGroupManagersSetInstanceTemplateRequest:
    properties:
      instanceTemplate:
        description: The full URL to an Instance Template from which all new instances will be created.
        type: string
        required: false
  InstanceGroupManagersSetTargetPoolsRequest:
    properties:
      fingerprint:
        description: 'The current fingerprint of the Instance Group Manager resource. If this does not match the server-side fingerprint of the resource, then the request will be rejected.'
        format: byte
        type: string
        facets:
          format: string
        required: false
      targetPools:
        description: A list of fully-qualified URLs to existing Target Pool resources. New instances in the Instance Group Manager will be added to the specified target pools; existing instances are not affected.
        items:
          type: string
        type: array
        required: false
  Operation:
    description: 'An operation resource, used to manage asynchronous API requests.'
    properties:
      clientOperationId:
        description: '[Output only] An optional identifier specified by the client when the mutation was initiated. Must be unique for all operation resources in the project.'
        type: string
        required: false
      creationTimestamp:
        description: '[Output Only] The time that this operation was requested, in RFC3339 text format.'
        type: string
        required: false
      endTime:
        description: '[Output Only] The time that this operation was completed, in RFC3339 text format.'
        type: string
        required: false
      error:
        description: '[Output Only] If errors occurred during processing of this operation, this field will be populated.'
        properties:
          errors:
            description: '[Output Only] The array of errors encountered while processing this operation.'
            items:
              properties:
                code:
                  description: '[Output Only] The error type identifier for this error.'
                  type: string
                  required: false
                location:
                  description: '[Output Only] Indicates the field in the request which caused the error. This property is optional.'
                  type: string
                  required: false
                message:
                  description: '[Output Only] An optional, human-readable error message.'
                  type: string
                  required: false
              type: object
            type: array
            required: false
        type: object
        required: false
      httpErrorMessage:
        description: '[Output only] If operation fails, the HTTP error message returned.'
        type: string
        required: false
      httpErrorStatusCode:
        description: '[Output only] If operation fails, the HTTP error status code returned.'
        format: int32
        type: integer
        required: false
      id:
        description: '[Output Only] Unique identifier for the resource, generated by the server.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      insertTime:
        description: '[Output Only] The time that this operation was requested, in RFC3339 text format.'
        type: string
        required: false
      kind:
        default: 'replicapool#operation'
        description: '[Output only] Type of the resource.'
        type: string
        required: false
      name:
        description: '[Output Only] Name of the resource.'
        type: string
        required: false
      operationType:
        description: '[Output only] Type of the operation. Operations include insert, update, and delete.'
        type: string
        required: false
      progress:
        description: '[Output only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess at when the operation will be complete. This number should be monotonically increasing as the operation progresses.'
        format: int32
        type: integer
        required: false
      region:
        description: '[Output Only] URL of the region where the operation resides. Only available when performing regional operations.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server-defined fully-qualified URL for this resource.'
        type: string
        required: false
      startTime:
        description: '[Output Only] The time that this operation was started by the server, in RFC3339 text format.'
        type: string
        required: false
      status:
        description: '[Output Only] Status of the operation.'
        enum:
          - DONE
          - PENDING
          - RUNNING
        type: string
        required: false
      statusMessage:
        description: '[Output Only] An optional textual description of the current status of the operation.'
        type: string
        required: false
      targetId:
        description: '[Output Only] Unique target ID which identifies a particular incarnation of the target.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      targetLink:
        description: '[Output only] URL of the resource the operation is mutating.'
        type: string
        required: false
      user:
        description: '[Output Only] User who requested the operation, for example: user@example.com.'
        type: string
        required: false
      warnings:
        description: '[Output Only] If there are issues with this operation, a warning is returned.'
        items:
          properties:
            code:
              description: '[Output only] The warning type identifier for this warning.'
              enum:
                - DEPRECATED_RESOURCE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - INJECTED_KERNELS_DEPRECATED
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_NOT_DELETED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNREACHABLE
              type: string
              required: false
            data:
              description: '[Output only] Metadata for this warning in key:value format.'
              items:
                properties:
                  key:
                    description: '[Output Only] Metadata key for this warning.'
                    type: string
                    required: false
                  value:
                    description: '[Output Only] Metadata value for this warning.'
                    type: string
                    required: false
                type: object
              type: array
              required: false
            message:
              description: '[Output only] Optional human-readable details for this warning.'
              type: string
              required: false
          type: object
        type: array
        required: false
      zone:
        description: '[Output Only] URL of the zone where the operation resides. Only available when performing per-zone operations.'
        type: string
        required: false
  OperationList:
    properties:
      id:
        description: Unique identifier for the resource; defined by the server (output only).
        type: string
        required: false
      items:
        description: The operation resources.
        items:
          type: Operation
        type: array
        required: false
      kind:
        default: 'replicapool#operationList'
        description: Type of resource.
        type: string
        required: false
      nextPageToken:
        description: A token used to continue a truncated list request (output only).
        type: string
        required: false
      selfLink:
        description: Server defined URL for this resource (output only).
        type: string
        required: false
  ReplicaPoolAutoHealingPolicy:
    properties:
      actionType:
        description: 'The action to perform when an instance becomes unhealthy. Possible values are RECREATE or REBOOT. RECREATE replaces an unhealthy instance with a new instance that is based on the instance template for this managed instance group. REBOOT performs a soft reboot on an instance. If the instance cannot reboot, the instance performs a hard restart.'
        enum:
          - REBOOT
          - RECREATE
        type: string
        required: false
      healthCheck:
        description: The URL for the HealthCheck that signals autohealing.
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
