#%RAML 1.0
title: Google Cloud Pub/Sub
version: v1beta1a
baseUri: 'https://pubsub.googleapis.com/'
protocols:
  - HTTPS
description: 'Provides reliable, many-to-many, asynchronous messaging between applications.'
(oas-tags-definition):
  - name: topics
  - name: subscriptions
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/pubsub/v1beta1a/rest'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): pubsub
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/pubsub/docs'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/pubsub'
    description: Oauth 2.0 authentication
/v1beta1a:
  displayName: v1beta1a
  /subscriptions:
    displayName: subscriptions
    '/{subscription}':
      displayName: '{subscription}'
      uriParameters:
        subscription:
          description: The name of the subscription to get.
          required: true
          type: string
      delete:
        displayName: pubsub.subscriptions.delete
        description: Deletes an existing subscription. All pending messages in the subscription are immediately dropped. Calls to Pull after deletion will return NOT_FOUND.
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      get:
        displayName: pubsub.subscriptions.get
        description: Gets the configuration details of a subscription.
        responses:
          '200':
            body:
              application/json:
                type: Subscription
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
    get:
      displayName: pubsub.subscriptions.list
      description: Lists matching subscriptions.
      responses:
        '200':
          body:
            application/json:
              type: ListSubscriptionsResponse
          description: Successful response
      queryParameters:
        query:
          description: A valid label query expression.
          type: string
        maxResults:
          description: Maximum number of subscriptions to return.
          type: integer
        pageToken:
          description: The value obtained in the last ListSubscriptionsResponse for continuation.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/pubsub'
      (oas-tags):
        - subscriptions
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    /acknowledge:
      displayName: acknowledge
      post:
        displayName: pubsub.subscriptions.acknowledge
        description: 'Acknowledges a particular received message: the Pub/Sub system can remove the given message from the subscription. Acknowledging a message whose Ack deadline has expired may succeed, but the message could have been already redelivered. Acknowledging a message more than once will not result in an error. This is only used for messages received via pull.'
        body:
          application/json:
            type: AcknowledgeRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    /modifyPushConfig:
      displayName: modifyPushConfig
      post:
        displayName: pubsub.subscriptions.modifyPushConfig
        description: Modifies the PushConfig for a specified subscription. This method can be used to suspend the flow of messages to an endpoint by clearing the PushConfig field in the request. Messages will be accumulated for delivery even if no push configuration is defined or while the configuration is modified.
        body:
          application/json:
            type: ModifyPushConfigRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    /pull:
      displayName: pull
      post:
        displayName: pubsub.subscriptions.pull
        description: 'Pulls a single message from the server. If return_immediately is true, and no messages are available in the subscription, this method returns FAILED_PRECONDITION. The system is free to return an UNAVAILABLE error if no messages are available in a reasonable amount of time (to reduce system load).'
        body:
          application/json:
            type: PullRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: PullResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    /modifyAckDeadline:
      displayName: modifyAckDeadline
      post:
        displayName: pubsub.subscriptions.modifyAckDeadline
        description: Modifies the Ack deadline for a message received from a pull request.
        body:
          application/json:
            type: ModifyAckDeadlineRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    post:
      displayName: pubsub.subscriptions.create
      description: 'Creates a subscription on a given topic for a given subscriber. If the subscription already exists, returns ALREADY_EXISTS. If the corresponding topic doesn''t exist, returns NOT_FOUND. If the name is not provided in the request, the server will assign a random name for this subscription on the same project as the topic.'
      body:
        application/json:
          type: Subscription
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Subscription
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/pubsub'
      (oas-tags):
        - subscriptions
    /pullBatch:
      displayName: pullBatch
      post:
        displayName: pubsub.subscriptions.pullBatch
        description: Pulls messages from the server. Returns an empty list if there are no messages available in the backlog. The system is free to return UNAVAILABLE if there are too many pull requests outstanding for the given subscription.
        body:
          application/json:
            type: PullBatchRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: PullBatchResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - subscriptions
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
  /topics:
    displayName: topics
    '/{topic}':
      displayName: '{topic}'
      uriParameters:
        topic:
          description: Name of the topic to delete.
          required: true
          type: string
      get:
        displayName: pubsub.topics.get
        description: 'Gets the configuration of a topic. Since the topic only has the name attribute, this method is only useful to check the existence of a topic. If other attributes are added in the future, they will be returned here.'
        responses:
          '200':
            body:
              application/json:
                type: Topic
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - topics
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      delete:
        displayName: pubsub.topics.delete
        description: 'Deletes the topic with the given name. Returns NOT_FOUND if the topic does not exist. After a topic is deleted, a new topic may be created with the same name.'
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - topics
    get:
      displayName: pubsub.topics.list
      description: Lists matching topics.
      responses:
        '200':
          body:
            application/json:
              type: ListTopicsResponse
          description: Successful response
      queryParameters:
        query:
          description: A valid label query expression.
          type: string
        maxResults:
          description: Maximum number of topics to return.
          type: integer
        pageToken:
          description: The value obtained in the last ListTopicsResponse for continuation.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/pubsub'
      (oas-tags):
        - topics
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    /publishBatch:
      displayName: publishBatch
      post:
        displayName: pubsub.topics.publishBatch
        description: Adds one or more messages to the topic. Returns NOT_FOUND if the topic does not exist.
        body:
          application/json:
            type: PublishBatchRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: PublishBatchResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - topics
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    /publish:
      displayName: publish
      post:
        displayName: pubsub.topics.publish
        description: Adds a message to the topic. Returns NOT_FOUND if the topic does not exist.
        body:
          application/json:
            type: PublishRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/pubsub'
        (oas-tags):
          - topics
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    post:
      displayName: pubsub.topics.create
      description: Creates the given topic with the given name.
      body:
        application/json:
          type: Topic
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Topic
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/pubsub'
      (oas-tags):
        - topics
types:
  AcknowledgeRequest:
    description: Request for the Acknowledge method.
    properties:
      ackId:
        description: The acknowledgment ID for the message being acknowledged. This was returned by the Pub/Sub system in the Pull response.
        items:
          type: string
        type: array
        required: false
      subscription:
        description: The subscription whose message is being acknowledged.
        type: string
        required: false
  Empty:
    description: 'An empty message that you can re-use to avoid defining duplicated empty messages in your project. A typical example is to use it as argument or the return value of a service API. For instance: service Foo { rpc Bar (proto2.Empty) returns (proto2.Empty) { }; }; BEGIN GOOGLE-INTERNAL The difference between this one and net/rpc/empty-message.proto is that 1) The generated message here is in proto2 C++ API. 2) The proto2.Empty has minimum dependencies (no message_set or net/rpc dependencies) END GOOGLE-INTERNAL'
    type: object
  Label:
    description: A key-value pair applied to a given object.
    properties:
      key:
        description: 'The key of a label is a syntactically valid URL (as per RFC 1738) with the "scheme" and initial slashes omitted and with the additional restrictions noted below. Each key should be globally unique. The "host" portion is called the "namespace" and is not necessarily resolvable to a network endpoint. Instead, the namespace indicates what system or entity defines the semantics of the label. Namespaces do not restrict the set of objects to which a label may be associated. Keys are defined by the following grammar: key = hostname "/" kpath kpath = ksegment *[ "/" ksegment ] ksegment = alphadigit | *[ alphadigit | "-" | "_" | "." ] where "hostname" and "alphadigit" are defined as in RFC 1738. Example key: spanner.google.com/universe'
        type: string
        required: false
      numValue:
        description: An integer value.
        format: int64
        type: string
        facets:
          format: string
        required: false
      strValue:
        description: A string value.
        type: string
        required: false
  ListSubscriptionsResponse:
    description: Response for the ListSubscriptions method.
    properties:
      nextPageToken:
        description: 'If not empty, indicates that there are more subscriptions that match the request and this value should be passed to the next ListSubscriptionsRequest to continue.'
        type: string
        required: false
      subscription:
        description: The subscriptions that match the request.
        items:
          type: Subscription
        type: array
        required: false
  ListTopicsResponse:
    description: Response for the ListTopics method.
    properties:
      nextPageToken:
        description: 'If not empty, indicates that there are more topics that match the request, and this value should be passed to the next ListTopicsRequest to continue.'
        type: string
        required: false
      topic:
        description: The resulting topics.
        items:
          type: Topic
        type: array
        required: false
  ModifyAckDeadlineRequest:
    description: Request for the ModifyAckDeadline method.
    properties:
      ackDeadlineSeconds:
        description: 'The new ack deadline with respect to the time this request was sent to the Pub/Sub system. Must be >= 0. For example, if the value is 10, the new ack deadline will expire 10 seconds after the ModifyAckDeadline call was made. Specifying zero may immediately make the message available for another pull request.'
        format: int32
        type: integer
        required: false
      ackId:
        description: 'The acknowledgment ID. Either this or ack_ids must be populated, not both.'
        type: string
        required: false
      ackIds:
        description: 'List of acknowledgment IDs. Either this field or ack_id should be populated, not both.'
        items:
          type: string
        type: array
        required: false
      subscription:
        description: 'Next Index: 5 The name of the subscription from which messages are being pulled.'
        type: string
        required: false
  ModifyPushConfigRequest:
    description: Request for the ModifyPushConfig method.
    properties:
      pushConfig:
        description: An empty push_config indicates that the Pub/Sub system should pause pushing messages from the given subscription.
        type: PushConfig
        required: false
      subscription:
        description: The name of the subscription.
        type: string
        required: false
  PublishBatchRequest:
    description: Request for the PublishBatch method.
    properties:
      messages:
        description: The messages to publish.
        items:
          type: PubsubMessage
        type: array
        required: false
      topic:
        description: The messages in the request will be published on this topic.
        type: string
        required: false
  PublishBatchResponse:
    description: Response for the PublishBatch method.
    properties:
      messageIds:
        description: 'The server-assigned ID of each published message, in the same order as the messages in the request. IDs are guaranteed to be unique within the topic.'
        items:
          type: string
        type: array
        required: false
  PublishRequest:
    description: Request for the Publish method.
    properties:
      message:
        description: The message to publish.
        type: PubsubMessage
        required: false
      topic:
        description: The message in the request will be published on this topic.
        type: string
        required: false
  PubsubEvent:
    description: An event indicating a received message or truncation event.
    properties:
      deleted:
        description: 'Indicates that this subscription has been deleted. (Note that pull subscribers will always receive NOT_FOUND in response in their pull request on the subscription, rather than seeing this boolean.)'
        type: boolean
        required: false
      message:
        description: A received message.
        type: PubsubMessage
        required: false
      subscription:
        description: The subscription that received the event.
        type: string
        required: false
      truncated:
        description: Indicates that this subscription has been truncated.
        type: boolean
        required: false
  PubsubMessage:
    description: A message data and its labels.
    properties:
      data:
        description: The message payload.
        format: byte
        type: string
        facets:
          format: string
        required: false
      label:
        description: Optional list of labels for this message. Keys in this collection must be unique.
        items:
          type: Label
        type: array
        required: false
      messageId:
        description: ID of this message assigned by the server at publication time. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a PubsubMessage via a Pull call or a push delivery. It must not be populated by a publisher in a Publish call.
        type: string
        required: false
      publishTime:
        description: The time at which the message was published. The time is milliseconds since the UNIX epoch.
        format: int64
        type: string
        facets:
          format: string
        required: false
  PullBatchRequest:
    description: Request for the PullBatch method.
    properties:
      maxEvents:
        description: The maximum number of PubsubEvents returned for this request. The Pub/Sub system may return fewer than the number of events specified.
        format: int32
        type: integer
        required: false
      returnImmediately:
        description: If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning no messages. The client may cancel the request if it does not wish to wait any longer for the response.
        type: boolean
        required: false
      subscription:
        description: The subscription from which messages should be pulled.
        type: string
        required: false
  PullBatchResponse:
    description: Response for the PullBatch method.
    properties:
      pullResponses:
        description: Received Pub/Sub messages or status events. The Pub/Sub system will return zero messages if there are no more messages available in the backlog. The Pub/Sub system may return fewer than the max_events requested even if there are more messages available in the backlog.
        items:
          type: PullResponse
        type: array
        required: false
  PullRequest:
    description: Request for the Pull method.
    properties:
      returnImmediately:
        description: If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning FAILED_PRECONDITION. The client may cancel the request if it does not wish to wait any longer for the response.
        type: boolean
        required: false
      subscription:
        description: The subscription from which a message should be pulled.
        type: string
        required: false
  PullResponse:
    description: Either a PubsubMessage or a truncation event. One of these two must be populated.
    properties:
      ackId:
        description: This ID must be used to acknowledge the received event or message.
        type: string
        required: false
      pubsubEvent:
        description: A pubsub message or truncation event.
        type: PubsubEvent
        required: false
  PushConfig:
    description: Configuration for a push delivery endpoint.
    properties:
      pushEndpoint:
        description: 'A URL locating the endpoint to which messages should be pushed. For example, a Webhook endpoint might use "https://example.com/push".'
        type: string
        required: false
  Subscription:
    description: A subscription resource.
    properties:
      ackDeadlineSeconds:
        description: 'For either push or pull delivery, the value is the maximum time after a subscriber receives a message before the subscriber should acknowledge or Nack the message. If the Ack deadline for a message passes without an Ack or a Nack, the Pub/Sub system will eventually redeliver the message. If a subscriber acknowledges after the deadline, the Pub/Sub system may accept the Ack, but it is possible that the message has been already delivered again. Multiple Acks to the message are allowed and will succeed. For push delivery, this value is used to set the request timeout for the call to the push endpoint. For pull delivery, this value is used as the initial value for the Ack deadline. It may be overridden for each message using its corresponding ack_id with ModifyAckDeadline. While a message is outstanding (i.e. it has been delivered to a pull subscriber and the subscriber has not yet Acked or Nacked), the Pub/Sub system will not deliver that message to another pull subscriber (on a best-effort basis).'
        format: int32
        type: integer
        required: false
      name:
        description: Name of the subscription.
        type: string
        required: false
      pushConfig:
        description: 'If push delivery is used with this subscription, this field is used to configure it.'
        type: PushConfig
        required: false
      topic:
        description: The name of the topic from which this subscription is receiving messages.
        type: string
        required: false
  Topic:
    description: A topic resource.
    properties:
      name:
        description: Name of the topic.
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
