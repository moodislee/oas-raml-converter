#%RAML 1.0
title: ContainerServiceClient
version: '2016-09-30'
baseUri: 'https://management.azure.com'
mediaType: application/json
protocols:
  - HTTPS
description: The Container Service Client.
(oas-info):
  (oas-x-apisguru-categories):
    - cloud
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-compute/2016-09-30/swagger/containerService.json'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): azure.com
  (oas-x-serviceName): arm-compute-containerService
  (oas-x-tags):
    - Azure
    - Microsoft
    - virtual machines
    - docker
annotationTypes:
  oas-x-apisguru-categories: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-x-tags: any
  oas-x-ms-long-running-operation: any
  oas-x-ms-pageable: any
  oas-x-ms-client-flatten: any
  oas-x-ms-enum: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
/subscriptions:
  displayName: subscriptions
  '/{subscriptionId}':
    displayName: '{subscriptionId}'
    /resourceGroups:
      displayName: resourceGroups
      '/{resourceGroupName}':
        displayName: '{resourceGroupName}'
        /providers:
          displayName: providers
          /Microsoft.ContainerService:
            displayName: Microsoft.ContainerService
            /containerServices:
              displayName: containerServices
              '/{containerServiceName}':
                displayName: '{containerServiceName}'
                uriParameters:
                  containerServiceName:
                    description: The name of the container service in the specified subscription and resource group.
                    required: true
                    type: string
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: ContainerServices_CreateOrUpdate
                  description: 'Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.'
                  (oas-summary): Creates or updates a container service.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: ContainerService
                      (oas-body-name): parameters
                      description: Parameters supplied to the Create or Update a Container Service operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ContainerService
                      description: OK
                    '201':
                      body:
                        application/json:
                          type: ContainerService
                      description: Created
                    '202':
                      body:
                        application/json:
                          type: ContainerService
                      description: Accepted
                  (oas-tags):
                    - ContainerServices
                get:
                  displayName: ContainerServices_Get
                  description: 'Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. '
                  (oas-summary): Gets the properties of the specified container service.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ContainerService
                      description: OK
                  (oas-tags):
                    - ContainerService
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: ContainerServices_Delete
                  description: 'Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.'
                  (oas-summary): Deletes the specified container service.
                  is:
                    - apiVersionParameter
                  responses:
                    '202':
                      description: Accepted
                    '204':
                      description: Not found
                  (oas-tags):
                    - ContainerService
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: ContainerServices_ListByResourceGroup
                description: 'Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.'
                (oas-summary): Gets a list of container services in the specified resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: ContainerServiceListResult
                    description: OK
                (oas-tags):
                  - ContainerService
    /providers:
      displayName: providers
      /Microsoft.ContainerService:
        displayName: Microsoft.ContainerService
        /containerServices:
          displayName: containerServices
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: ContainerServices_List
            description: 'Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.'
            (oas-summary): Gets a list of container services in the specified subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: ContainerServiceListResult
                description: OK
            (oas-tags):
              - ContainerServices
types:
  ContainerService:
    type: Resource
  ContainerServiceAgentPoolProfile:
    description: Profile for the container service agent pool.
    properties:
      count:
        description: 'Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. '
        format: int32
        maximum: 100
        minimum: 1
        type: integer
      dnsPrefix:
        description: DNS prefix to be used to create the FQDN for the agent pool.
        type: string
      fqdn:
        description: FDQN for the agent pool.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      name:
        description: Unique name of the agent pool profile in the context of the subscription and resource group.
        type: string
      vmSize:
        description: Size of agent VMs.
        enum:
          - Standard_A0
          - Standard_A1
          - Standard_A2
          - Standard_A3
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D1
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D1_v2
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS1
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: ContainerServiceVMSizeTypes
  ContainerServiceCustomProfile:
    description: Properties to configure a custom container service cluster.
    properties:
      orchestrator:
        description: The name of the custom orchestrator to use.
        type: string
  ContainerServiceDiagnosticsProfile:
    properties:
      vmDiagnostics:
        description: Profile for the container service VM diagnostic agent.
        type: ContainerServiceVMDiagnostics
  ContainerServiceLinuxProfile:
    description: Profile for Linux VMs in the container service cluster.
    properties:
      adminUsername:
        description: The administrator user name to use for Linux VMs.
        pattern: '^[a-z][a-z0-9_-]*$'
        type: string
      ssh:
        description: The ssh key configuration for Linux VMs.
        type: ContainerServiceSshConfiguration
  ContainerServiceListResult:
    description: The response from the List Container Services operation.
    properties:
      nextLink:
        description: The URL to get the next set of container service results.
        type: string
        required: false
      value:
        description: The list of container services.
        items:
          type: ContainerService
        type: array
        required: false
  ContainerServiceMasterProfile:
    description: Profile for the container service master.
    properties:
      count:
        default: 1
        description: 'Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.'
        enum:
          - 1
          - 3
          - 5
        format: int32
        type: integer
        required: false
      dnsPrefix:
        description: DNS prefix to be used to create the FQDN for master.
        type: string
      fqdn:
        description: FDQN for the master.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  ContainerServiceOrchestratorProfile:
    description: Profile for the container service orchestrator.
    properties:
      orchestratorType:
        description: 'The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.'
        enum:
          - Swarm
          - DCOS
          - Custom
          - Kubernetes
        type: string
        (oas-x-ms-enum):
          modelAsString: false
          name: ContainerServiceOchestratorTypes
  ContainerServiceProperties:
    description: Properties of the container service.
    properties:
      agentPoolProfiles:
        description: Properties of the agent pool.
        items:
          type: ContainerServiceAgentPoolProfile
        type: array
      customProfile:
        description: Properties for custom clusters.
        type: ContainerServiceCustomProfile
        required: false
      diagnosticsProfile:
        description: Properties of the diagnostic agent.
        type: ContainerServiceDiagnosticsProfile
        required: false
      linuxProfile:
        description: Properties of Linux VMs.
        type: ContainerServiceLinuxProfile
      masterProfile:
        description: Properties of master agents.
        type: ContainerServiceMasterProfile
      orchestratorProfile:
        description: Properties of the orchestrator.
        type: ContainerServiceOrchestratorProfile
        required: false
      provisioningState:
        description: 'The current deployment or provisioning state, which only appears in the response.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      servicePrincipalProfile:
        description: Properties for cluster service principals.
        type: ContainerServiceServicePrincipalProfile
        required: false
      windowsProfile:
        description: Properties of Windows VMs.
        type: ContainerServiceWindowsProfile
        required: false
  ContainerServiceServicePrincipalProfile:
    description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
    properties:
      clientId:
        description: The ID for the service principal.
        type: string
      secret:
        description: The secret password associated with the service principal.
        type: string
  ContainerServiceSshConfiguration:
    description: SSH configuration for Linux-based VMs running on Azure.
    properties:
      publicKeys:
        description: The list of SSH public keys used to authenticate with Linux-based VMs.
        items:
          type: ContainerServiceSshPublicKey
        type: array
  ContainerServiceSshPublicKey:
    description: Contains information about SSH certificate public key data.
    properties:
      keyData:
        description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
        type: string
  ContainerServiceVMDiagnostics:
    description: Profile for diagnostics on the container service VMs.
    properties:
      enabled:
        description: Whether the VM diagnostic agent is provisioned on the VM.
        type: boolean
      storageUri:
        description: The URI of the storage account where diagnostics are stored.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  ContainerServiceWindowsProfile:
    description: Profile for Windows VMs in the container service cluster.
    properties:
      adminPassword:
        description: The administrator password to use for Windows VMs.
        pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\^&\*\(\)])[a-zA-Z\d!@#$%\^&\*\(\)]{12,123}$'
        type: string
      adminUsername:
        description: The administrator user name to use for Windows VMs.
        pattern: '^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$'
        type: string
  Resource:
    description: The resource model definition.
    properties:
      id:
        description: Resource ID.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      location:
        description: Resource location.
        type: string
      name:
        description: Resource name.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      tags:
        additionalProperties:
          type: string
        description: Resource tags.
        type: object
        required: false
      type:
        description: Resource type.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
traits:
  apiVersionParameter:
    queryParameters:
      api-version:
        type: string
        description: Client API version.
        required: true
