#%RAML 1.0
title: NetworkManagementClient
version: '2016-09-01'
baseUri: 'https://management.azure.com'
mediaType:
  - application/json
  - text/json
protocols:
  - HTTPS
description: The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
(oas-info):
  (oas-x-apisguru-categories):
    - cloud
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-network/2016-09-01/swagger/network.json'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): azure.com
  (oas-x-serviceName): arm-network
  (oas-x-tags):
    - Azure
    - Microsoft
annotationTypes:
  oas-x-apisguru-categories: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-x-tags: any
  oas-x-ms-long-running-operation: any
  oas-x-ms-pageable: any
  oas-x-ms-client-flatten: any
  oas-x-ms-enum: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
securitySchemes:
  azure_auth:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://login.microsoftonline.com/common/oauth2/authorize'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - user_impersonation
    description: Azure Active Directory OAuth2 Flow
/subscriptions:
  displayName: subscriptions
  '/{subscriptionId}':
    displayName: '{subscriptionId}'
    /resourceGroups:
      displayName: resourceGroups
      '/{resourceGroupName}':
        displayName: '{resourceGroupName}'
        /providers:
          displayName: providers
          /Microsoft.Network:
            displayName: Microsoft.Network
            /localNetworkGateways:
              displayName: localNetworkGateways
              '/{localNetworkGatewayName}':
                displayName: '{localNetworkGatewayName}'
                uriParameters:
                  localNetworkGatewayName:
                    description: The name of the local network gateway.
                    required: true
                    type: string
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: LocalNetworkGateways_CreateOrUpdate
                  description: Creates or updates a local network gateway in the specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: LocalNetworkGateway
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update local network gateway operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: LocalNetworkGateway
                      description: Update successful. The operation returns the resulting LocalNetworkGateway resource.
                    '201':
                      body:
                        application/json:
                          type: LocalNetworkGateway
                      description: Create successful. The operation returns the resulting LocalNetworkGateway resource.
                  (oas-tags):
                    - LocalNetworkGateways
                get:
                  displayName: LocalNetworkGateways_Get
                  description: Gets the specified local network gateway in a resource group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: LocalNetworkGateway
                      description: Request successful. The operation returns the resulting LocalNetworkGateway resource.
                  (oas-tags):
                    - LocalNetworkGateways
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: LocalNetworkGateways_Delete
                  description: Deletes the specified local network gateway.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Delete successful.
                  (oas-tags):
                    - LocalNetworkGateways
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: LocalNetworkGateways_List
                description: Gets all the local network gateways in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: LocalNetworkGatewayListResult
                    description: Request successful. The operation returns a list of LocalNetworkGateway resources.
                (oas-tags):
                  - LocalNetworkGateways
            /networkInterfaces:
              displayName: networkInterfaces
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: NetworkInterfaces_List
                description: Gets all network interfaces in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: NetworkInterfaceListResult
                    description: Request successful. The operation returns a list of NetworkInterface resources.
                (oas-tags):
                  - NetworkInterfaces
              '/{networkInterfaceName}':
                displayName: '{networkInterfaceName}'
                uriParameters:
                  networkInterfaceName:
                    description: The name of the network interface.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: NetworkInterfaces_Delete
                  description: Deletes the specified network interface.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Request successful. Resource does not exist.
                  (oas-tags):
                    - NetworkInterfaces
                get:
                  displayName: NetworkInterfaces_Get
                  description: Gets information about the specified network interface.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: NetworkInterface
                      description: Request successful. The operation returns the resulting NetworkInterface resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - NetworkInterfaces
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: NetworkInterfaces_CreateOrUpdate
                  description: Creates or updates a network interface.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: NetworkInterface
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update network interface operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: NetworkInterface
                      description: Update successful. The operation returns the resulting NetworkInterface resource.
                    '201':
                      body:
                        application/json:
                          type: NetworkInterface
                      description: Create successful. The operation returns the resulting NetworkInterface resource.
                  (oas-tags):
                    - NetworkInterfaces
                /effectiveNetworkSecurityGroups:
                  displayName: effectiveNetworkSecurityGroups
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: NetworkInterfaces_ListEffectiveNetworkSecurityGroups
                    description: Gets all network security groups applied to a network interface.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: EffectiveNetworkSecurityGroupListResult
                        description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    (oas-tags):
                      - NetworkInterfaces
                /effectiveRouteTable:
                  displayName: effectiveRouteTable
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: NetworkInterfaces_GetEffectiveRouteTable
                    description: Gets all route tables applied to a network interface.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: EffectiveRouteListResult
                        description: Request successful. The operation returns a list of EffectRoute resources.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    (oas-tags):
                      - NetworkInterfaces
            /networkSecurityGroups:
              displayName: networkSecurityGroups
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: NetworkSecurityGroups_List
                description: Gets all network security groups in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: NetworkSecurityGroupListResult
                    description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
                (oas-tags):
                  - NetworkSecurityGroups
              '/{networkSecurityGroupName}':
                displayName: '{networkSecurityGroupName}'
                uriParameters:
                  networkSecurityGroupName:
                    description: The name of the network security group.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: NetworkSecurityGroups_Delete
                  description: Deletes the specified network security group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Request successful. Resource does not exist.
                  (oas-tags):
                    - NetworkSecurityGroups
                get:
                  displayName: NetworkSecurityGroups_Get
                  description: Gets the specified network security group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: NetworkSecurityGroup
                      description: Request successful. The operation returns the resulting NetworkSecurityGroup resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - NetworkSecurityGroups
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: NetworkSecurityGroups_CreateOrUpdate
                  description: Creates or updates a network security group in the specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: NetworkSecurityGroup
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update network security group operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: NetworkSecurityGroup
                      description: Update successful. The operation returns the resulting NetworkSecurityGroup resource.
                    '201':
                      body:
                        application/json:
                          type: NetworkSecurityGroup
                      description: Create successful. The operation returns the resulting NetworkSecurityGroup resource.
                  (oas-tags):
                    - NetworkSecurityGroups
                /securityRules:
                  displayName: securityRules
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: SecurityRules_List
                    description: Gets all security rules in a network security group.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: SecurityRuleListResult
                        description: Request successful. The operation returns a list of SecurityRule resources.
                    (oas-tags):
                      - SecurityRules
                  '/{securityRuleName}':
                    displayName: '{securityRuleName}'
                    uriParameters:
                      securityRuleName:
                        description: The name of the security rule.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: SecurityRules_Delete
                      description: Deletes the specified network security rule.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Delete successful.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Request successful. Resource does not exist.
                      (oas-tags):
                        - SecurityRules
                    get:
                      displayName: SecurityRules_Get
                      description: Get the specified network security rule.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: SecurityRule
                          description: Request successful. The operation returns the resulting SecurityRule resource.
                      (oas-tags):
                        - SecurityRules
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: SecurityRules_CreateOrUpdate
                      description: Creates or updates a security rule in the specified network security group.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: SecurityRule
                          (oas-body-name): securityRuleParameters
                          description: Parameters supplied to the create or update network security rule operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: SecurityRule
                          description: Update successful. The operation returns the resulting SecurityRule resource.
                        '201':
                          body:
                            application/json:
                              type: SecurityRule
                          description: Create successful. The operation returns the resulting SecurityRule resource.
                      (oas-tags):
                        - SecurityRules
            /applicationGateways:
              displayName: applicationGateways
              '/{applicationGatewayName}':
                displayName: '{applicationGatewayName}'
                uriParameters:
                  applicationGatewayName:
                    description: The name of the application gateway.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: ApplicationGateways_Delete
                  description: Deletes the specified application gateway.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Request successful. Resource with the specified name does not exist
                  (oas-tags):
                    - ApplicationGateways
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: ApplicationGateways_CreateOrUpdate
                  description: Creates or updates the specified application gateway.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: ApplicationGateway
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update application gateway operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ApplicationGateway
                      description: Update successful. The operation returns the resulting ApplicationGateway resource.
                    '201':
                      body:
                        application/json:
                          type: ApplicationGateway
                      description: Create successful. The operation returns the resulting ApplicationGateway resource.
                  (oas-tags):
                    - ApplicationGateways
                /start:
                  displayName: start
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: ApplicationGateways_Start
                    description: Starts the specified application gateway.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        description: Request successful. The operation starts the ApplicationGateway resource.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    (oas-tags):
                      - ApplicationGateways
                /backendhealth:
                  displayName: backendhealth
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: ApplicationGateways_BackendHealth
                    description: Gets the backend health of the specified application gateway in a resource group.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: ApplicationGatewayBackendHealth
                        description: Request successful.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    queryParameters:
                      $expand:
                        description: Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
                        required: false
                        type: string
                    (oas-tags):
                      - ApplicationGateways
                get:
                  displayName: ApplicationGateways_Get
                  description: Gets the specified application gateway.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ApplicationGateway
                      description: Request successful. The operation returns an ApplicationGateway resource.
                  (oas-tags):
                    - ApplicationGateways
                /stop:
                  displayName: stop
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: ApplicationGateways_Stop
                    description: Stops the specified application gateway in a resource group.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        description: Request successful. The operation stops the ApplicationGateway resource.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    (oas-tags):
                      - ApplicationGateways
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: ApplicationGateways_List
                description: Lists all application gateways in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: ApplicationGatewayListResult
                    description: Success. The operation returns a list of ApplicationGateway resources.
                (oas-tags):
                  - ApplicationGateways
            /connections:
              displayName: connections
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: VirtualNetworkGatewayConnections_List
                description: The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: VirtualNetworkGatewayConnectionListResult
                    description: Request successful. The operation resets the virtual network gateway connection shared key.
                (oas-tags):
                  - VirtualNetworkGatewayConnections
              '/{virtualNetworkGatewayConnectionName}':
                displayName: '{virtualNetworkGatewayConnectionName}'
                uriParameters:
                  virtualNetworkGatewayConnectionName:
                    description: The name of the virtual network gateway connection.
                    required: true
                    type: string
                get:
                  displayName: VirtualNetworkGatewayConnections_Get
                  description: Gets the specified virtual network gateway connection by resource group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetworkGatewayConnection
                      description: Request successful. The operation returns the resulting VirtualNetworkPeering resource.
                  (oas-tags):
                    - VirtualNetworkGatewayConnections
                /sharedkey:
                  displayName: sharedkey
                  get:
                    displayName: VirtualNetworkGatewayConnections_GetSharedKey
                    description: The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: ConnectionSharedKey
                        description: Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources.
                    (oas-tags):
                      - VirtualNetworkGatewayConnections
                  /reset:
                    displayName: reset
                    post:
                      (oas-x-ms-long-running-operation): true
                      displayName: VirtualNetworkGatewayConnections_ResetSharedKey
                      description: The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: ConnectionResetSharedKey
                          (oas-body-name): parameters
                          description: Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: ConnectionResetSharedKey
                          description: Request successful. The operation sets the virtual network gateway connection shared key.
                        '202': {}
                      (oas-tags):
                        - VirtualNetworkGatewayConnections
                  put:
                    (oas-x-ms-long-running-operation): true
                    displayName: VirtualNetworkGatewayConnections_SetSharedKey
                    description: The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
                    is:
                      - apiVersionParameter
                    body:
                      application/json:
                        type: ConnectionSharedKey
                        (oas-body-name): parameters
                        description: Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider.
                    responses:
                      '200':
                        body:
                          application/json:
                            type: ConnectionSharedKey
                        description: Request successful. The operation returns the resulting ConnectionSharedKey resource.
                      '201':
                        body:
                          application/json:
                            type: ConnectionSharedKey
                    (oas-tags):
                      - VirtualNetworkGatewayConnections
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworkGatewayConnections_Delete
                  description: Deletes the specified virtual network Gateway connection.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Delete successful.
                  (oas-tags):
                    - VirtualNetworkGatewayConnections
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworkGatewayConnections_CreateOrUpdate
                  description: Creates or updates a virtual network gateway connection in the specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: VirtualNetworkGatewayConnection
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update virtual network gateway connection operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetworkGatewayConnection
                      description: Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
                    '201':
                      body:
                        application/json:
                          type: VirtualNetworkGatewayConnection
                      description: Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
                  (oas-tags):
                    - VirtualNetworkGatewayConnections
            /expressRouteCircuits:
              displayName: expressRouteCircuits
              '/{circuitName}':
                displayName: '{circuitName}'
                uriParameters:
                  circuitName:
                    description: The name of express route circuit.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: ExpressRouteCircuits_Delete
                  description: Deletes the specified express route circuit.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted. Sets 'Disabling' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
                    '204':
                      description: Delete successful.
                  (oas-tags):
                    - ExpressRouteCircuits
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: ExpressRouteCircuits_CreateOrUpdate
                  description: Creates or updates an express route circuit.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: ExpressRouteCircuit
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update express route circuit operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ExpressRouteCircuit
                      description: Update successful. The operation returns the resulting ExpressRouteCircuit resource.
                    '201':
                      body:
                        application/json:
                          type: ExpressRouteCircuit
                      description: Create successful. The operation returns the resulting ExpressRouteCircuit resource.
                  (oas-tags):
                    - ExpressRouteCircuits
                /authorizations:
                  displayName: authorizations
                  '/{authorizationName}':
                    displayName: '{authorizationName}'
                    uriParameters:
                      authorizationName:
                        description: The name of the authorization.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: ExpressRouteCircuitAuthorizations_Delete
                      description: Deletes the specified authorization from the specified express route circuit.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Delete successful.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Delete successful.
                      (oas-tags):
                        - ExpressRouteCircuitAuthorizations
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: ExpressRouteCircuitAuthorizations_CreateOrUpdate
                      description: Creates or updates an authorization in the specified express route circuit.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: ExpressRouteCircuitAuthorization
                          (oas-body-name): authorizationParameters
                          description: Parameters supplied to the create or update express route circuit authorization operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: ExpressRouteCircuitAuthorization
                          description: Update successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
                        '201':
                          body:
                            application/json:
                              type: ExpressRouteCircuitAuthorization
                          description: Create successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
                      (oas-tags):
                        - ExpressRouteCircuitAuthorizations
                    get:
                      displayName: ExpressRouteCircuitAuthorizations_Get
                      description: Gets the specified authorization from the specified express route circuit.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: ExpressRouteCircuitAuthorization
                          description: Request successful. The operation returns the ExpressRouteCircuitAuthorization resource.
                      (oas-tags):
                        - ExpressRouteCircuitAuthorizations
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: ExpressRouteCircuitAuthorizations_List
                    description: Gets all authorizations in an express route circuit.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: AuthorizationListResult
                        description: Request successful. The operation returns a list of ExpressRouteCircuitAuthorization resources.
                    (oas-tags):
                      - ExpressRouteCircuitAuthorizations
                /peerings:
                  displayName: peerings
                  '/{peeringName}':
                    displayName: '{peeringName}'
                    uriParameters:
                      peeringName:
                        description: The name of the peering.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: ExpressRouteCircuitPeerings_Delete
                      description: Deletes the specified peering from the specified express route circuit.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Delete successful.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Delete successful.
                      (oas-tags):
                        - ExpressRouteCircuitPeerings
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: ExpressRouteCircuitPeerings_CreateOrUpdate
                      description: Creates or updates a peering in the specified express route circuits.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: ExpressRouteCircuitPeering
                          (oas-body-name): peeringParameters
                          description: Parameters supplied to the create or update express route circuit peering operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: ExpressRouteCircuitPeering
                          description: Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
                        '201':
                          body:
                            application/json:
                              type: ExpressRouteCircuitPeering
                          description: Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
                      (oas-tags):
                        - ExpressRouteCircuitPeerings
                    /routeTables:
                      displayName: routeTables
                      '/{devicePath}':
                        displayName: '{devicePath}'
                        uriParameters:
                          devicePath:
                            description: The path of the device.
                            required: true
                            type: string
                        post:
                          (oas-x-ms-long-running-operation): true
                          displayName: ExpressRouteCircuits_ListRoutesTable
                          description: Gets the currently advertised routes table associated with the express route circuit in a resource group.
                          is:
                            - apiVersionParameter
                          responses:
                            '200':
                              body:
                                application/json:
                                  type: ExpressRouteCircuitsRoutesTableListResult
                              description: Request successful. The operation returns the resulting ExpressRouteCircuitsRouteTable resource.
                            '202':
                              description: Accepted and the operation will complete asynchronously.
                          (oas-tags):
                            - ExpressRouteCircuitRoutesTable
                    /stats:
                      displayName: stats
                      get:
                        displayName: ExpressRouteCircuits_GetPeeringStats
                        description: Gets all stats from an express route circuit in a resource group.
                        is:
                          - apiVersionParameter
                        responses:
                          '200':
                            body:
                              application/json:
                                type: ExpressRouteCircuitStats
                            description: Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.
                        (oas-tags):
                          - ExpressRouteCircuitStats
                    get:
                      displayName: ExpressRouteCircuitPeerings_Get
                      description: Gets the specified authorization from the specified express route circuit.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: ExpressRouteCircuitPeering
                          description: Request successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
                      (oas-tags):
                        - ExpressRouteCircuitPeerings
                    /routeTablesSummary:
                      displayName: routeTablesSummary
                      '/{devicePath}':
                        displayName: '{devicePath}'
                        uriParameters:
                          devicePath:
                            description: The path of the device.
                            required: true
                            type: string
                        post:
                          (oas-x-ms-long-running-operation): true
                          displayName: ExpressRouteCircuits_ListRoutesTableSummary
                          description: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
                          is:
                            - apiVersionParameter
                          responses:
                            '200':
                              body:
                                application/json:
                                  type: ExpressRouteCircuitsRoutesTableSummaryListResult
                              description: Request successful. The operation returns the resulting ExpressRouteCircuitsRoutesTableSummary resource.
                            '202':
                              description: Accepted and the operation will complete asynchronously.
                          (oas-tags):
                            - ExpressRouteCircuitRoutesTableSummary
                    /arpTables:
                      displayName: arpTables
                      '/{devicePath}':
                        displayName: '{devicePath}'
                        uriParameters:
                          devicePath:
                            description: The path of the device.
                            required: true
                            type: string
                        post:
                          (oas-x-ms-long-running-operation): true
                          displayName: ExpressRouteCircuits_ListArpTable
                          description: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
                          is:
                            - apiVersionParameter
                          responses:
                            '200':
                              body:
                                application/json:
                                  type: ExpressRouteCircuitsArpTableListResult
                              description: Request successful. The operation returns the resulting ExpressRouteCircuitsArpTable resource.
                            '202':
                              description: Accepted and the operation will complete asynchronously.
                          (oas-tags):
                            - ExpressRouteCircuitArpTable
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: ExpressRouteCircuitPeerings_List
                    description: Gets all peerings in a specified express route circuit.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: ExpressRouteCircuitPeeringListResult
                        description: Request successful. The operation returns a list of ExpressRouteCircuitPeering resources.
                    (oas-tags):
                      - ExpressRouteCircuitPeerings
                get:
                  displayName: ExpressRouteCircuits_Get
                  description: Gets information about the specified express route circuit.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ExpressRouteCircuit
                      description: Request successful. The operation returns the resulting ExpressRouteCircuit resource.
                  (oas-tags):
                    - ExpressRouteCircuits
                /stats:
                  displayName: stats
                  get:
                    displayName: ExpressRouteCircuits_GetStats
                    description: Gets all the stats from an express route circuit in a resource group.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: ExpressRouteCircuitStats
                        description: Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.
                    (oas-tags):
                      - ExpressRouteCircuitStats
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: ExpressRouteCircuits_List
                description: Gets all the express route circuits in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: ExpressRouteCircuitListResult
                    description: Request successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
                (oas-tags):
                  - ExpressRouteCircuits
            /publicIPAddresses:
              displayName: publicIPAddresses
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: PublicIPAddresses_List
                description: Gets all public IP addresses in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: PublicIPAddressListResult
                    description: Request successful. The operation returns a list of PublicIPAddress resources.
                (oas-tags):
                  - PublicIPAddresses
              '/{publicIpAddressName}':
                displayName: '{publicIpAddressName}'
                uriParameters:
                  publicIpAddressName:
                    description: The name of the public IP address.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: PublicIPAddresses_Delete
                  description: Deletes the specified public IP address.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Request successful. Resource does not exist.
                  (oas-tags):
                    - PublicIPAddresses
                get:
                  displayName: PublicIPAddresses_Get
                  description: Gets the specified public IP address in a specified resource group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: PublicIPAddress
                      description: Request successful. The operation returns the resulting PublicIPAddress resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - PublicIPAddresses
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: PublicIPAddresses_CreateOrUpdate
                  description: Creates or updates a static or dynamic public IP address.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: PublicIPAddress
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update public IP address operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: PublicIPAddress
                      description: Update successful. The operation returns the resulting PublicIPAddress resource.
                    '201':
                      body:
                        application/json:
                          type: PublicIPAddress
                      description: Create successful. The operation returns the resulting PublicIPAddress resource.
                  (oas-tags):
                    - PublicIPAddresses
            /routeTables:
              displayName: routeTables
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: RouteTables_List
                description: Gets all route tables in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: RouteTableListResult
                    description: Request successful. The operation returns a list of RouteTable resources.
                (oas-tags):
                  - RouteTables
              '/{routeTableName}':
                displayName: '{routeTableName}'
                uriParameters:
                  routeTableName:
                    description: The name of the route table.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: RouteTables_Delete
                  description: Deletes the specified route table.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Request successful. Operation to delete was accepted.
                    '202':
                      description: 'Accepted. If route table not found returned synchronously, otherwise if found returned asynchronously.'
                    '204':
                      description: Request successful. Resource does not exist.
                  (oas-tags):
                    - RouteTables
                get:
                  displayName: RouteTables_Get
                  description: Gets the specified route table.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: RouteTable
                      description: Request successful. The operation returns the resulting RouteTable resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - RouteTables
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: RouteTables_CreateOrUpdate
                  description: Create or updates a route table in a specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: RouteTable
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update route table operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: RouteTable
                      description: Request successful. The operation returns the resulting RouteTable resource.
                    '201':
                      body:
                        application/json:
                          type: RouteTable
                      description: Create successful. The operation returns the resulting RouteTable resource.
                  (oas-tags):
                    - RouteTables
                /routes:
                  displayName: routes
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: Routes_List
                    description: Gets all routes in a route table.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: RouteListResult
                        description: Request successful. The operation returns a list of Route resources.
                    (oas-tags):
                      - Routes
                  '/{routeName}':
                    displayName: '{routeName}'
                    uriParameters:
                      routeName:
                        description: The name of the route.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: Routes_Delete
                      description: Deletes the specified route from a route table.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Accepted.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Route was deleted or not found.
                      (oas-tags):
                        - Routes
                    get:
                      displayName: Routes_Get
                      description: Gets the specified route from a route table.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: Route
                          description: Request successful. The operation returns the resulting Route resource.
                      (oas-tags):
                        - Routes
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: Routes_CreateOrUpdate
                      description: Creates or updates a route in the specified route table.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: Route
                          (oas-body-name): routeParameters
                          description: Parameters supplied to the create or update route operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: Route
                          description: Update successful. The operation returns the resulting Route resource.
                        '201':
                          body:
                            application/json:
                              type: Route
                          description: Create successful. The operation returns the resulting Route resource.
                      (oas-tags):
                        - Routes
            /loadBalancers:
              displayName: loadBalancers
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: LoadBalancers_List
                description: Gets all the load balancers in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: LoadBalancerListResult
                    description: Request successful. The operation returns a list of LoadBalancer resources.
                (oas-tags):
                  - LoadBalancers
              '/{loadBalancerName}':
                displayName: '{loadBalancerName}'
                uriParameters:
                  loadBalancerName:
                    description: The name of the load balancer.
                    required: true
                    type: string
                get:
                  displayName: LoadBalancers_Get
                  description: Gets the specified load balancer.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: LoadBalancer
                      description: Request successful. The operation returns the resulting LoadBalancer resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - LoadBalancers
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: LoadBalancers_Delete
                  description: Deletes the specified load balancer.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Request successful. Resource does not exist.
                  (oas-tags):
                    - LoadBalancers
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: LoadBalancers_CreateOrUpdate
                  description: Creates or updates a load balancer.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: LoadBalancer
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update load balancer operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: LoadBalancer
                      description: Update successful. The operation returns the resulting LoadBalancer resource.
                    '201':
                      body:
                        application/json:
                          type: LoadBalancer
                      description: Create successful. The operation returns the resulting LoadBalancer resource.
                  (oas-tags):
                    - LoadBalancers
            /virtualNetworkGateways:
              displayName: virtualNetworkGateways
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: VirtualNetworkGateways_List
                description: Gets all virtual network gateways by resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: VirtualNetworkGatewayListResult
                    description: Request successful. The operation returns a list of VirtualNetworkGateway resources.
                (oas-tags):
                  - VirtualNetworkGateways
              '/{virtualNetworkGatewayName}':
                displayName: '{virtualNetworkGatewayName}'
                uriParameters:
                  virtualNetworkGatewayName:
                    description: The name of the virtual network gateway.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworkGateways_Delete
                  description: Deletes the specified virtual network gateway.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Delete successful.
                  (oas-tags):
                    - VirtualNetworkGateways
                get:
                  displayName: VirtualNetworkGateways_Get
                  description: Gets the specified virtual network gateway by resource group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetworkGateway
                      description: Request successful. The operation returns a VirtualNetworkGateway resource.
                  (oas-tags):
                    - VirtualNetworkGateways
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworkGateways_CreateOrUpdate
                  description: Creates or updates a virtual network gateway in the specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: VirtualNetworkGateway
                      (oas-body-name): parameters
                      description: Parameters supplied to create or update virtual network gateway operation.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetworkGateway
                      description: Update successful. The operation returns the resulting VirtualNetworkGateway resource.
                    '201':
                      body:
                        application/json:
                          type: VirtualNetworkGateway
                      description: Create successful. The operation returns the resulting VirtualNetworkGateway resource.
                  (oas-tags):
                    - VirtualNetworkGateways
                /generatevpnclientpackage:
                  displayName: generatevpnclientpackage
                  post:
                    displayName: VirtualNetworkGateways_Generatevpnclientpackage
                    description: Generates VPN client package for P2S client of the virtual network gateway in the specified resource group.
                    is:
                      - apiVersionParameter
                    body:
                      application/json:
                        type: VpnClientParameters
                        (oas-body-name): parameters
                        description: Parameters supplied to the generate virtual network gateway VPN client package operation.
                    responses:
                      '202':
                        body:
                          application/json:
                            type: string
                        description: VPN client package URL.
                    (oas-tags):
                      - VirtualNetworkGateways
                /reset:
                  displayName: reset
                  post:
                    (oas-x-ms-long-running-operation): true
                    displayName: VirtualNetworkGateways_Reset
                    description: Resets the primary of the virtual network gateway in the specified resource group.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: VirtualNetworkGateway
                        description: Request successful. The operation reset the primary of the virtual network gateway.
                      '202':
                        description: Accepted and the operation will complete asynchronously.
                    queryParameters:
                      gatewayVip:
                        description: Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway.
                        required: false
                        type: string
                    (oas-tags):
                      - VirtualNetworkGateways
            /virtualNetworks:
              displayName: virtualNetworks
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: VirtualNetworks_List
                description: Gets all virtual networks in a resource group.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: VirtualNetworkListResult
                    description: Request successful. The operation returns a list of VirtualNetwork resources.
                (oas-tags):
                  - VirtualNetworks
              '/{virtualNetworkName}':
                displayName: '{virtualNetworkName}'
                uriParameters:
                  virtualNetworkName:
                    description: The name of the virtual network.
                    required: true
                    type: string
                delete:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworks_Delete
                  description: Deletes the specified virtual network.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: Delete successful.
                    '202':
                      description: Accepted and the operation will complete asynchronously.
                    '204':
                      description: Delete successful.
                  (oas-tags):
                    - VirtualNetworks
                get:
                  displayName: VirtualNetworks_Get
                  description: Gets the specified virtual network by resource group.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetwork
                      description: Request successful. The operation returns the resulting VirtualNetwork resource.
                  queryParameters:
                    $expand:
                      description: Expands referenced resources.
                      required: false
                      type: string
                  (oas-tags):
                    - VirtualNetworks
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: VirtualNetworks_CreateOrUpdate
                  description: Creates or updates a virtual network in the specified resource group.
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: VirtualNetwork
                      (oas-body-name): parameters
                      description: Parameters supplied to the create or update virtual network operation
                  responses:
                    '200':
                      body:
                        application/json:
                          type: VirtualNetwork
                      description: Update successful. The operation returns the resulting VirtualNetwork resource.
                    '201':
                      body:
                        application/json:
                          type: VirtualNetwork
                      description: Create successful. The operation returns the resulting VirtualNetwork resource.
                  (oas-tags):
                    - VirtualNetworks
                /CheckIPAddressAvailability:
                  displayName: CheckIPAddressAvailability
                  get:
                    displayName: VirtualNetworks_CheckIPAddressAvailability
                    description: Checks whether a private IP address is available for use.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: IPAddressAvailabilityResult
                        description: Private IP address availability and list of other free addresses if the requested one is not available.
                    queryParameters:
                      ipAddress:
                        description: The private IP address to be verified.
                        required: false
                        type: string
                /subnets:
                  displayName: subnets
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: Subnets_List
                    description: Gets all subnets in a virtual network.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: SubnetListResult
                        description: Request successful. The operation returns a list of Subnet resources.
                    (oas-tags):
                      - Subnets
                  '/{subnetName}':
                    displayName: '{subnetName}'
                    uriParameters:
                      subnetName:
                        description: The name of the subnet.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: Subnets_Delete
                      description: Deletes the specified subnet.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Delete successful.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Request successful. Resource does not exist.
                      (oas-tags):
                        - Subnets
                    get:
                      displayName: Subnets_Get
                      description: Gets the specified subnet by virtual network and resource group.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: Subnet
                          description: Request successful. The operation returns the resulting Subnet resource.
                      queryParameters:
                        $expand:
                          description: Expands referenced resources.
                          required: false
                          type: string
                      (oas-tags):
                        - Subnets
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: Subnets_CreateOrUpdate
                      description: Creates or updates a subnet in the specified virtual network.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: Subnet
                          (oas-body-name): subnetParameters
                          description: Parameters supplied to the create or update subnet operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: Subnet
                          description: Update successful. The operation returns the resulting Subnet resource.
                        '201':
                          body:
                            application/json:
                              type: Subnet
                          description: Create successful. The operation returns the resulting Subnet resource.
                      (oas-tags):
                        - Subnets
                /virtualNetworkPeerings:
                  displayName: virtualNetworkPeerings
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: VirtualNetworkPeerings_List
                    description: Gets all virtual network peerings in a virtual network.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: VirtualNetworkPeeringListResult
                        description: Request successful. The operation returns a list of VirtualNetworkPeering resources.
                    (oas-tags):
                      - VirtualNetworkPeerings
                  '/{virtualNetworkPeeringName}':
                    displayName: '{virtualNetworkPeeringName}'
                    uriParameters:
                      virtualNetworkPeeringName:
                        description: The name of the virtual network peering.
                        required: true
                        type: string
                    delete:
                      (oas-x-ms-long-running-operation): true
                      displayName: VirtualNetworkPeerings_Delete
                      description: Deletes the specified virtual network peering.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          description: Delete successful.
                        '202':
                          description: Accepted and the operation will complete asynchronously.
                        '204':
                          description: Delete successful.
                      (oas-tags):
                        - VirtualNetworkPeerings
                    put:
                      (oas-x-ms-long-running-operation): true
                      displayName: VirtualNetworkPeerings_CreateOrUpdate
                      description: Creates or updates a peering in the specified virtual network.
                      is:
                        - apiVersionParameter
                      body:
                        application/json:
                          type: VirtualNetworkPeering
                          (oas-body-name): VirtualNetworkPeeringParameters
                          description: Parameters supplied to the create or update virtual network peering operation.
                      responses:
                        '200':
                          body:
                            application/json:
                              type: VirtualNetworkPeering
                          description: Update successful. The operation returns the resulting VirtualNetworkPeering resource.
                        '201':
                          body:
                            application/json:
                              type: VirtualNetworkPeering
                          description: Create successful. The operation returns the resulting VirtualNetworkPeering resource.
                      (oas-tags):
                        - VirtualNetworkPeerings
                    get:
                      displayName: VirtualNetworkPeerings_Get
                      description: Gets the specified virtual network peering.
                      is:
                        - apiVersionParameter
                      responses:
                        '200':
                          body:
                            application/json:
                              type: VirtualNetworkPeering
                          description: Request successful. The operation returns the resulting VirtualNetworkPeering resource.
                      (oas-tags):
                        - VirtualNetworkPeerings
          /microsoft.Compute:
            displayName: microsoft.Compute
            /virtualMachineScaleSets:
              displayName: virtualMachineScaleSets
              '/{virtualMachineScaleSetName}':
                displayName: '{virtualMachineScaleSetName}'
                /virtualMachines:
                  displayName: virtualMachines
                  '/{virtualmachineIndex}':
                    displayName: '{virtualmachineIndex}'
                    /networkInterfaces:
                      displayName: networkInterfaces
                      '/{networkInterfaceName}':
                        displayName: '{networkInterfaceName}'
                        uriParameters:
                          networkInterfaceName:
                            description: The name of the network interface.
                            required: true
                            type: string
                        get:
                          displayName: NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface
                          description: Get the specified network interface in a virtual machine scale set.
                          is:
                            - apiVersionParameter
                          responses:
                            '200':
                              body:
                                application/json:
                                  type: NetworkInterface
                              description: Request successful. The operation returns the resulting NetworkInterface resource.
                          queryParameters:
                            $expand:
                              description: Expands referenced resources.
                              required: false
                              type: string
                          (oas-tags):
                            - NetworkInterfaces
                      get:
                        (oas-x-ms-pageable):
                          nextLinkName: nextLink
                        displayName: NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces
                        description: Gets information about all network interfaces in a virtual machine in a virtual machine scale set.
                        is:
                          - apiVersionParameter
                        responses:
                          '200':
                            body:
                              application/json:
                                type: NetworkInterfaceListResult
                            description: Request successful. The operation returns a list of NetworkInterface resources.
                        (oas-tags):
                          - NetworkInterfaces
                /networkInterfaces:
                  displayName: networkInterfaces
                  get:
                    (oas-x-ms-pageable):
                      nextLinkName: nextLink
                    displayName: NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces
                    description: Gets all network interfaces in a virtual machine scale set.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: NetworkInterfaceListResult
                        description: Request successful. The operation returns a list of NetworkInterface resources.
                    (oas-tags):
                      - NetworkInterfaces
    /providers:
      displayName: providers
      /Microsoft.Network:
        displayName: Microsoft.Network
        /applicationGateways:
          displayName: applicationGateways
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: ApplicationGateways_ListAll
            description: Gets all the application gateways in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: ApplicationGatewayListResult
                description: Success. The operation returns a list of ApplicationGateway resources.
            (oas-tags):
              - ApplicationGateways
        /expressRouteServiceProviders:
          displayName: expressRouteServiceProviders
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: ExpressRouteServiceProviders_List
            description: Gets all the available express route service providers.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: ExpressRouteServiceProviderListResult
                description: Request successful. The operation returns a list of ExpressRouteServiceProdiver resources.
            (oas-tags):
              - ExpressRouteServiceProviders
        /locations:
          displayName: locations
          '/{location}':
            displayName: '{location}'
            /CheckDnsNameAvailability:
              displayName: CheckDnsNameAvailability
              get:
                displayName: CheckDnsNameAvailability
                description: Checks whether a domain name in the cloudapp.net zone is available for use.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: DnsNameAvailabilityResult
                    description: Request successful. Returns whether the DNS name is available.
                queryParameters:
                  domainNameLabel:
                    description: 'The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.'
                    required: false
                    type: string
            /usages:
              displayName: usages
              get:
                (oas-x-ms-pageable):
                  nextLinkName: nextLink
                displayName: Usages_List
                description: Lists compute usages for a subscription.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: UsagesListResult
                    description: Request successful. The operation returns a list of Usage resources.
                (oas-tags):
                  - Usages
        /networkInterfaces:
          displayName: networkInterfaces
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: NetworkInterfaces_ListAll
            description: Gets all network interfaces in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: NetworkInterfaceListResult
                description: Request successful. The operation returns a list of NetworkInterface resources.
            (oas-tags):
              - NetworkInterfaces
        /publicIPAddresses:
          displayName: publicIPAddresses
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: PublicIPAddresses_ListAll
            description: Gets all the public IP addresses in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: PublicIPAddressListResult
                description: Request successful. The operation returns a list of PublicIPAddress resources.
            (oas-tags):
              - PublicIPAddresses
        /virtualNetworks:
          displayName: virtualNetworks
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: VirtualNetworks_ListAll
            description: Gets all virtual networks in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: VirtualNetworkListResult
                description: Request successful. The operation returns a list of VirtualNetwork resources.
            (oas-tags):
              - VirtualNetworks
        /loadBalancers:
          displayName: loadBalancers
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: LoadBalancers_ListAll
            description: Gets all the load balancers in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: LoadBalancerListResult
                description: Request successful. The operation returns a list of LoadBalancer resources.
            (oas-tags):
              - LoadBalancers
        /networkSecurityGroups:
          displayName: networkSecurityGroups
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: NetworkSecurityGroups_ListAll
            description: Gets all network security groups in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: NetworkSecurityGroupListResult
                description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
            (oas-tags):
              - NetworkSecurityGroups
        /routeTables:
          displayName: routeTables
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: RouteTables_ListAll
            description: Gets all route tables in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: RouteTableListResult
                description: Request successful. The operation returns a list of RouteTable resources.
            (oas-tags):
              - RouteTables
        /expressRouteCircuits:
          displayName: expressRouteCircuits
          get:
            (oas-x-ms-pageable):
              nextLinkName: nextLink
            displayName: ExpressRouteCircuits_ListAll
            description: Gets all the express route circuits in a subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: ExpressRouteCircuitListResult
                description: Request successful. The operation returns a list of ExpressRouteCircuit resources.
            (oas-tags):
              - ExpressRouteCircuits
types:
  AddressSpace:
    description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
    properties:
      addressPrefixes:
        description: A list of address blocks reserved for this virtual network in CIDR notation.
        items:
          type: string
        type: array
        required: false
  ApplicationGateway:
    type: Resource
  ApplicationGatewayAuthenticationCertificate:
    type: SubResource
  ApplicationGatewayAuthenticationCertificatePropertiesFormat:
    description: Authentication certificates properties of an application gateway.
    properties:
      data:
        description: Certificate public data.
        type: string
        required: false
      provisioningState:
        description: 'Provisioning state of the authentication certificate resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  ApplicationGatewayBackendAddress:
    description: Backend address of an application gateway.
    properties:
      fqdn:
        description: Fully qualified domain name (FQDN).
        type: string
        required: false
      ipAddress:
        description: IP address
        type: string
        required: false
  ApplicationGatewayBackendAddressPool:
    type: SubResource
  ApplicationGatewayBackendAddressPoolPropertiesFormat:
    description: Properties of Backend Address Pool of an application gateway.
    properties:
      backendAddresses:
        description: Backend addresses
        items:
          type: ApplicationGatewayBackendAddress
        type: array
        required: false
      backendIPConfigurations:
        description: Collection of references to IPs defined in network interfaces.
        items:
          type: NetworkInterfaceIPConfiguration
        type: array
        required: false
      provisioningState:
        description: 'Provisioning state of the backend address pool resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  ApplicationGatewayBackendHealth:
    description: List of ApplicationGatewayBackendHealthPool resources.
    properties:
      backendAddressPools:
        items:
          type: ApplicationGatewayBackendHealthPool
        type: array
        required: false
  ApplicationGatewayBackendHealthHttpSettings:
    description: Application gateway BackendHealthHttp settings.
    properties:
      backendHttpSettings:
        description: Reference of an ApplicationGatewayBackendHttpSettings resource.
        type: ApplicationGatewayBackendHttpSettings
        required: false
      servers:
        description: List of ApplicationGatewayBackendHealthServer resources.
        items:
          type: ApplicationGatewayBackendHealthServer
        type: array
        required: false
  ApplicationGatewayBackendHealthPool:
    description: Application gateway BackendHealth pool.
    properties:
      backendAddressPool:
        description: Reference of an ApplicationGatewayBackendAddressPool resource.
        type: ApplicationGatewayBackendAddressPool
        required: false
      backendHttpSettingsCollection:
        description: List of ApplicationGatewayBackendHealthHttpSettings resources.
        items:
          type: ApplicationGatewayBackendHealthHttpSettings
        type: array
        required: false
  ApplicationGatewayBackendHealthServer:
    description: Application gateway backendhealth http settings.
    properties:
      address:
        description: IP address or FQDN of backend server.
        type: string
        required: false
      health:
        description: 'Health of backend server. Possible values are: ''Unknown'', ''Up'', ''Down'', and ''Partial''.'
        enum:
          - Unknown
          - Up
          - Down
          - Partial
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayBackendHealthServerHealth
      ipConfiguration:
        description: Reference of IP configuration of backend server.
        type: SubResource
        required: false
  ApplicationGatewayBackendHttpSettings:
    type: SubResource
  ApplicationGatewayBackendHttpSettingsPropertiesFormat:
    description: Properties of Backend address pool settings of an application gateway.
    properties:
      authenticationCertificates:
        description: Array of references to application gateway authentication certificates.
        items:
          type: SubResource
        type: array
        required: false
      cookieBasedAffinity:
        description: 'Cookie based affinity. Possible values are: ''Enabled'' and ''Disabled''.'
        enum:
          - Enabled
          - Disabled
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayCookieBasedAffinity
      port:
        description: Port
        format: int32
        type: integer
        required: false
      probe:
        description: Probe resource of an application gateway.
        type: SubResource
        required: false
      protocol:
        description: 'Protocol. Possible values are: ''Http'' and ''Https''.'
        enum:
          - Http
          - Https
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayProtocol
      provisioningState:
        description: 'Provisioning state of the backend http settings resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      requestTimeout:
        description: Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
        format: int32
        type: integer
        required: false
  ApplicationGatewayFrontendIPConfiguration:
    type: SubResource
  ApplicationGatewayFrontendIPConfigurationPropertiesFormat:
    description: Properties of Frontend IP configuration of an application gateway.
    properties:
      privateIPAddress:
        description: PrivateIPAddress of the network interface IP Configuration.
        type: string
        required: false
      privateIPAllocationMethod:
        description: 'PrivateIP allocation method. Possible values are: ''Static'' and ''Dynamic''.'
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      provisioningState:
        description: 'Provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      publicIPAddress:
        description: Reference of the PublicIP resource.
        type: SubResource
        required: false
      subnet:
        description: Reference of the subnet resource.
        type: SubResource
        required: false
  ApplicationGatewayFrontendPort:
    type: SubResource
  ApplicationGatewayFrontendPortPropertiesFormat:
    description: Properties of Frontend port of an application gateway.
    properties:
      port:
        description: Frontend port
        format: int32
        type: integer
        required: false
      provisioningState:
        description: 'Provisioning state of the frontend port resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  ApplicationGatewayHttpListener:
    type: SubResource
  ApplicationGatewayHttpListenerPropertiesFormat:
    description: Properties of HTTP listener of an application gateway.
    properties:
      frontendIPConfiguration:
        description: Frontend IP configuration resource of an application gateway.
        type: SubResource
        required: false
      frontendPort:
        description: Frontend port resource of an application gateway.
        type: SubResource
        required: false
      hostName:
        description: Host name of HTTP listener.
        type: string
        required: false
      protocol:
        description: 'Protocol. Possible values are: ''Http'' and ''Https''.'
        enum:
          - Http
          - Https
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayProtocol
      provisioningState:
        description: 'Provisioning state of the HTTP listener resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      requireServerNameIndication:
        description: Applicable only if protocol is https. Enables SNI for multi-hosting.
        type: boolean
        required: false
      sslCertificate:
        description: SSL certificate resource of an application gateway.
        type: SubResource
        required: false
  ApplicationGatewayIPConfiguration:
    type: SubResource
  ApplicationGatewayIPConfigurationPropertiesFormat:
    description: Properties of IP configuration of an application gateway.
    properties:
      provisioningState:
        description: 'Provisioning state of the application gateway subnet resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      subnet:
        description: Reference of the subnet resource. A subnet from where application gateway gets its private address.
        type: SubResource
        required: false
  ApplicationGatewayListResult:
    description: Response for ListApplicationGateways API service call.
    properties:
      nextLink:
        description: URL to get the next set of results.
        type: string
        required: false
      value:
        description: List of an application gateways in a resource group.
        items:
          type: ApplicationGateway
        type: array
        required: false
  ApplicationGatewayPathRule:
    type: SubResource
  ApplicationGatewayPathRulePropertiesFormat:
    description: Properties of probe of an application gateway.
    properties:
      backendAddressPool:
        description: Backend address pool resource of URL path map.
        type: SubResource
        required: false
      backendHttpSettings:
        description: Backend http settings resource of URL path map.
        type: SubResource
        required: false
      paths:
        description: Path rules of URL path map.
        items:
          type: string
        type: array
        required: false
      provisioningState:
        description: 'Path rule of URL path map resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  ApplicationGatewayProbe:
    type: SubResource
  ApplicationGatewayProbePropertiesFormat:
    description: Properties of probe of an application gateway.
    properties:
      host:
        description: Host name to send the probe to.
        type: string
        required: false
      interval:
        description: The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
        format: int32
        type: integer
        required: false
      path:
        description: 'Relative path of probe. Valid path starts from ''/''. Probe is sent to <Protocol>://<host>:<port><path>'
        type: string
        required: false
      protocol:
        description: 'Protocol. Possible values are: ''Http'' and ''Https''.'
        enum:
          - Http
          - Https
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayProtocol
      provisioningState:
        description: 'Provisioning state of the backend http settings resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      timeout:
        description: the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
        format: int32
        type: integer
        required: false
      unhealthyThreshold:
        description: The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
        format: int32
        type: integer
        required: false
  ApplicationGatewayPropertiesFormat:
    description: Properties of the application gateway.
    properties:
      authenticationCertificates:
        description: Authentication certificates of the application gateway resource.
        items:
          type: ApplicationGatewayAuthenticationCertificate
        type: array
        required: false
      backendAddressPools:
        description: Backend address pool of the application gateway resource.
        items:
          type: ApplicationGatewayBackendAddressPool
        type: array
        required: false
      backendHttpSettingsCollection:
        description: Backend http settings of the application gateway resource.
        items:
          type: ApplicationGatewayBackendHttpSettings
        type: array
        required: false
      frontendIPConfigurations:
        description: Frontend IP addresses of the application gateway resource.
        items:
          type: ApplicationGatewayFrontendIPConfiguration
        type: array
        required: false
      frontendPorts:
        description: Frontend ports of the application gateway resource.
        items:
          type: ApplicationGatewayFrontendPort
        type: array
        required: false
      gatewayIPConfigurations:
        description: Subnets of application the gateway resource.
        items:
          type: ApplicationGatewayIPConfiguration
        type: array
        required: false
      httpListeners:
        description: Http listeners of the application gateway resource.
        items:
          type: ApplicationGatewayHttpListener
        type: array
        required: false
      operationalState:
        description: 'Operational state of the application gateway resource. Possible values are: ''Stopped'', ''Started'', ''Running'', and ''Stopping''.'
        enum:
          - Stopped
          - Starting
          - Running
          - Stopping
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayOperationalState
      probes:
        description: Probes of the application gateway resource.
        items:
          type: ApplicationGatewayProbe
        type: array
        required: false
      provisioningState:
        description: 'Provisioning state of the application gateway resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      requestRoutingRules:
        description: Request routing rules of the application gateway resource.
        items:
          type: ApplicationGatewayRequestRoutingRule
        type: array
        required: false
      resourceGuid:
        description: Resource GUID property of the application gateway resource.
        type: string
        required: false
      sku:
        description: SKU of the application gateway resource.
        type: ApplicationGatewaySku
        required: false
      sslCertificates:
        description: SSL certificates of the application gateway resource.
        items:
          type: ApplicationGatewaySslCertificate
        type: array
        required: false
      sslPolicy:
        description: SSL policy of the application gateway resource.
        type: ApplicationGatewaySslPolicy
        required: false
      urlPathMaps:
        description: URL path map of the application gateway resource.
        items:
          type: ApplicationGatewayUrlPathMap
        type: array
        required: false
      webApplicationFirewallConfiguration:
        description: Web application firewall configuration.
        type: ApplicationGatewayWebApplicationFirewallConfiguration
        required: false
  ApplicationGatewayRequestRoutingRule:
    type: SubResource
  ApplicationGatewayRequestRoutingRulePropertiesFormat:
    description: Properties of request routing rule of the application gateway.
    properties:
      backendAddressPool:
        description: 'Backend address pool resource of the application gateway. '
        type: SubResource
        required: false
      backendHttpSettings:
        description: Frontend port resource of the application gateway.
        type: SubResource
        required: false
      httpListener:
        description: 'Http listener resource of the application gateway. '
        type: SubResource
        required: false
      provisioningState:
        description: 'Provisioning state of the request routing rule resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      ruleType:
        description: 'Rule type. Possible values are: ''Basic'' and ''PathBasedRouting''.'
        enum:
          - Basic
          - PathBasedRouting
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayRequestRoutingRuleType
      urlPathMap:
        description: URL path map resource of the application gateway.
        type: SubResource
        required: false
  ApplicationGatewaySku:
    description: SKU of an application gateway
    properties:
      capacity:
        description: Capacity (instance count) of an application gateway.
        format: int32
        type: integer
        required: false
      name:
        description: 'Name of an application gateway SKU. Possible values are: ''Standard_Small'', ''Standard_Medium'', ''Standard_Large'', ''WAF_Medium'', and ''WAF_Large''.'
        enum:
          - Standard_Small
          - Standard_Medium
          - Standard_Large
          - WAF_Medium
          - WAF_Large
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewaySkuName
      tier:
        description: 'Tier of an application gateway. Possible values are: ''Standard'' and ''WAF''.'
        enum:
          - Standard
          - WAF
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayTier
  ApplicationGatewaySslCertificate:
    type: SubResource
  ApplicationGatewaySslCertificatePropertiesFormat:
    description: Properties of SSL certificates of an application gateway.
    properties:
      data:
        description: Base-64 encoded pfx certificate. Only applicable in PUT Request.
        type: string
        required: false
      password:
        description: Password for the pfx file specified in data. Only applicable in PUT request.
        type: string
        required: false
      provisioningState:
        description: 'Provisioning state of the SSL certificate resource Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      publicCertData:
        description: Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
        type: string
        required: false
  ApplicationGatewaySslPolicy:
    description: Application gateway SSL policy.
    properties:
      disabledSslProtocols:
        description: 'SSL protocols to be disabled on application gateway. Possible values are: ''TLSv1_0'', ''TLSv1_1'', and ''TLSv1_2''.'
        items:
          enum:
            - TLSv1_0
            - TLSv1_1
            - TLSv1_2
          type: string
          (oas-x-ms-enum):
            modelAsString: true
            name: ApplicationGatewaySslProtocol
        type: array
        required: false
  ApplicationGatewayUrlPathMap:
    type: SubResource
  ApplicationGatewayUrlPathMapPropertiesFormat:
    description: Properties of UrlPathMap of the application gateway.
    properties:
      defaultBackendAddressPool:
        description: Default backend address pool resource of URL path map.
        type: SubResource
        required: false
      defaultBackendHttpSettings:
        description: Default backend http settings resource of URL path map.
        type: SubResource
        required: false
      pathRules:
        description: Path rule of URL path map resource.
        items:
          type: ApplicationGatewayPathRule
        type: array
        required: false
      provisioningState:
        description: 'Provisioning state of the backend http settings resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  ApplicationGatewayWebApplicationFirewallConfiguration:
    description: Application gateway web application firewall configuration.
    properties:
      enabled:
        description: Whether the web application firewall is enabled.
        type: boolean
      firewallMode:
        description: 'Web application firewall mode. Possible values are: ''Detection'' and ''Prevention''.'
        enum:
          - Detection
          - Prevention
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ApplicationGatewayFirewallMode
  AuthorizationListResult:
    description: Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The authorizations in an ExpressRoute Circuit.
        items:
          type: ExpressRouteCircuitAuthorization
        type: array
        required: false
  AuthorizationPropertiesFormat:
    properties:
      authorizationKey:
        description: The authorization key.
        type: string
        required: false
      authorizationUseStatus:
        description: 'AuthorizationUseStatus. Possible values are: ''Available'' and ''InUse''.'
        enum:
          - Available
          - InUse
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: AuthorizationUseStatus
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  AzureAsyncOperationResult:
    description: 'The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure.'
    properties:
      error:
        type: Error
        required: false
      status:
        description: 'Status of the Azure async operation. Possible values are: ''InProgress'', ''Succeeded'', and ''Failed''.'
        enum:
          - InProgress
          - Succeeded
          - Failed
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: NetworkOperationStatus
  BackendAddressPool:
    type: SubResource
  BackendAddressPoolPropertiesFormat:
    description: Properties of the backend address pool.
    properties:
      backendIPConfigurations:
        description: Gets collection of references to IP addresses defined in network interfaces.
        items:
          type: NetworkInterfaceIPConfiguration
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      loadBalancingRules:
        description: Gets load balancing rules that use this backend address pool.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      outboundNatRule:
        description: Gets outbound rules that use this backend address pool.
        readOnly: true
        type: SubResource
        facets:
          readOnly?: boolean
        required: false
      provisioningState:
        description: 'Get provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  BgpSettings:
    properties:
      asn:
        description: The BGP speaker's ASN.
        format: int64
        type: integer
        required: false
      bgpPeeringAddress:
        description: The BGP peering address and BGP identifier of this BGP speaker.
        type: string
        required: false
      peerWeight:
        description: The weight added to routes learned from this BGP speaker.
        format: int32
        type: integer
        required: false
  ConnectionResetSharedKey:
    properties:
      keyLength:
        description: 'The virtual network connection reset shared key length, should between 1 and 128.'
        format: int32
        maximum: 128
        minimum: 1
        type: integer
  ConnectionSharedKey:
    description: Response for GetConnectionSharedKey API service call
    properties:
      value:
        description: The virtual network connection shared key value.
        type: string
  DhcpOptions:
    description: DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
    properties:
      dnsServers:
        description: The list of DNS servers IP addresses.
        items:
          type: string
        type: array
        required: false
  DnsNameAvailabilityResult:
    description: Response for the CheckDnsNameAvailability API service call.
    properties:
      available:
        description: Domain availability (True/False).
        type: boolean
        required: false
  EffectiveNetworkSecurityGroup:
    description: Effective network security group.
    properties:
      association:
        type: EffectiveNetworkSecurityGroupAssociation
        required: false
      effectiveSecurityRules:
        description: A collection of effective security rules.
        items:
          type: EffectiveNetworkSecurityRule
        type: array
        required: false
      networkSecurityGroup:
        description: The ID of network security group that is applied.
        type: SubResource
        required: false
  EffectiveNetworkSecurityGroupAssociation:
    description: The effective network security group association.
    properties:
      networkInterface:
        description: The ID of the network interface if assigned.
        type: SubResource
        required: false
      subnet:
        description: The ID of the subnet if assigned.
        type: SubResource
        required: false
  EffectiveNetworkSecurityGroupListResult:
    description: Response for list effective network security groups API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of effective network security groups.
        items:
          type: EffectiveNetworkSecurityGroup
        type: array
        required: false
  EffectiveNetworkSecurityRule:
    description: Effective network security rules.
    properties:
      access:
        description: 'Whether network traffic is allowed or denied. Possible values are: ''Allow'' and ''Deny''.'
        enum:
          - Allow
          - Deny
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleAccess
      destinationAddressPrefix:
        description: The destination address prefix.
        type: string
        required: false
      destinationPortRange:
        description: The destination port or range.
        type: string
        required: false
      direction:
        description: 'The direction of the rule. Possible values are: ''Inbound and Outbound''.'
        enum:
          - Inbound
          - Outbound
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleDirection
      expandedDestinationAddressPrefix:
        description: Expanded destination address prefix.
        items:
          type: string
        type: array
        required: false
      expandedSourceAddressPrefix:
        description: The expanded source address prefix.
        items:
          type: string
        type: array
        required: false
      name:
        description: The name of the security rule specified by the user (if created by the user).
        type: string
        required: false
      priority:
        description: The priority of the rule.
        format: int32
        type: integer
        required: false
      protocol:
        description: 'The network protocol this rule applies to. Possible values are: ''Tcp'', ''Udp'', and ''*''.'
        enum:
          - Tcp
          - Udp
          - '*'
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleProtocol
      sourceAddressPrefix:
        description: The source address prefix.
        type: string
        required: false
      sourcePortRange:
        description: The source port or range.
        type: string
        required: false
  EffectiveRoute:
    description: Effective Route
    properties:
      addressPrefix:
        description: The address prefixes of the effective routes in CIDR notation.
        items:
          type: string
        type: array
        required: false
      name:
        description: The name of the user defined route. This is optional.
        type: string
        required: false
      nextHopIpAddress:
        description: The IP address of the next hop of the effective route.
        items:
          type: string
        type: array
        required: false
      nextHopType:
        description: 'The type of Azure hop the packet should be sent to. Possible values are: ''VirtualNetworkGateway'', ''VnetLocal'', ''Internet'', ''VirtualAppliance'', and ''None''.'
        enum:
          - VirtualNetworkGateway
          - VnetLocal
          - Internet
          - VirtualAppliance
          - None
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: RouteNextHopType
      source:
        description: 'Who created the route. Possible values are: ''Unknown'', ''User'', ''VirtualNetworkGateway'', and ''Default''.'
        enum:
          - Unknown
          - User
          - VirtualNetworkGateway
          - Default
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: EffectiveRouteSource
      state:
        description: 'The value of effective route. Possible values are: ''Active'' and ''Invalid''.'
        enum:
          - Active
          - Invalid
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: EffectiveRouteState
  EffectiveRouteListResult:
    description: Response for list effective route API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of effective routes.
        items:
          type: EffectiveRoute
        type: array
        required: false
  Error:
    properties:
      code:
        type: string
        required: false
      details:
        items:
          type: ErrorDetails
        type: array
        required: false
      innerError:
        type: string
        required: false
      message:
        type: string
        required: false
      target:
        type: string
        required: false
  ErrorDetails:
    properties:
      code:
        type: string
        required: false
      message:
        type: string
        required: false
      target:
        type: string
        required: false
  ExpressRouteCircuit:
    type: Resource
  ExpressRouteCircuitArpTable:
    description: The ARP table associated with the ExpressRouteCircuit.
    properties:
      age:
        description: Age
        format: int32
        type: integer
        required: false
      interface:
        description: Interface
        type: string
        required: false
      ipAddress:
        description: The IP address.
        type: string
        required: false
      macAddress:
        description: The MAC address.
        type: string
        required: false
  ExpressRouteCircuitAuthorization:
    type: SubResource
  ExpressRouteCircuitListResult:
    description: Response for ListExpressRouteCircuit API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of ExpressRouteCircuits in a resource group.
        items:
          type: ExpressRouteCircuit
        type: array
        required: false
  ExpressRouteCircuitPeering:
    type: SubResource
  ExpressRouteCircuitPeeringConfig:
    description: Specifies the peering configuration.
    properties:
      advertisedPublicPrefixes:
        description: The reference of AdvertisedPublicPrefixes.
        items:
          type: string
        type: array
        required: false
      advertisedPublicPrefixesState:
        description: 'AdvertisedPublicPrefixState of the Peering resource. Possible values are ''NotConfigured'', ''Configuring'', ''Configured'', and ''ValidationNeeded''.'
        enum:
          - NotConfigured
          - Configuring
          - Configured
          - ValidationNeeded
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
      customerASN:
        description: The CustomerASN of the peering.
        format: int32
        type: integer
        required: false
      routingRegistryName:
        description: The RoutingRegistryName of the configuration.
        type: string
        required: false
  ExpressRouteCircuitPeeringListResult:
    description: Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The peerings in an express route circuit.
        items:
          type: ExpressRouteCircuitPeering
        type: array
        required: false
  ExpressRouteCircuitPeeringPropertiesFormat:
    properties:
      azureASN:
        description: The Azure ASN.
        format: int32
        type: integer
        required: false
      gatewayManagerEtag:
        description: The GatewayManager Etag.
        type: string
        required: false
      lastModifiedBy:
        description: Gets whether the provider or the customer last modified the peering.
        type: string
        required: false
      microsoftPeeringConfig:
        description: The Microsoft peering configuration.
        type: ExpressRouteCircuitPeeringConfig
        required: false
      peerASN:
        description: The peer ASN.
        format: int32
        type: integer
        required: false
      peeringType:
        description: 'The PeeringType. Possible values are: ''AzurePublicPeering'', ''AzurePrivatePeering'', and ''MicrosoftPeering''.'
        enum:
          - AzurePublicPeering
          - AzurePrivatePeering
          - MicrosoftPeering
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ExpressRouteCircuitPeeringType
      primaryAzurePort:
        description: The primary port.
        type: string
        required: false
      primaryPeerAddressPrefix:
        description: The primary address prefix.
        type: string
        required: false
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      secondaryAzurePort:
        description: The secondary port.
        type: string
        required: false
      secondaryPeerAddressPrefix:
        description: The secondary address prefix.
        type: string
        required: false
      sharedKey:
        description: The shared key.
        type: string
        required: false
      state:
        description: 'The state of peering. Possible values are: ''Disabled'' and ''Enbaled'''
        enum:
          - Disabled
          - Enabled
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ExpressRouteCircuitPeeringState
      stats:
        description: Gets peering stats.
        type: ExpressRouteCircuitStats
        required: false
      vlanId:
        description: The VLAN ID.
        format: int32
        type: integer
        required: false
  ExpressRouteCircuitPropertiesFormat:
    description: Properties of ExpressRouteCircuit.
    properties:
      allowClassicOperations:
        description: Allow classic operations
        type: boolean
        required: false
      authorizations:
        description: The list of authorizations.
        items:
          type: ExpressRouteCircuitAuthorization
        type: array
        required: false
      circuitProvisioningState:
        description: The CircuitProvisioningState state of the resource.
        type: string
        required: false
      gatewayManagerEtag:
        description: The GatewayManager Etag.
        type: string
        required: false
      peerings:
        description: The list of peerings.
        items:
          type: ExpressRouteCircuitPeering
        type: array
        required: false
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      serviceKey:
        description: The ServiceKey.
        type: string
        required: false
      serviceProviderNotes:
        description: The ServiceProviderNotes.
        type: string
        required: false
      serviceProviderProperties:
        description: The ServiceProviderProperties.
        type: ExpressRouteCircuitServiceProviderProperties
        required: false
      serviceProviderProvisioningState:
        description: 'The ServiceProviderProvisioningState state of the resource. Possible values are ''NotProvisioned'', ''Provisioning'', ''Provisioned'', and ''Deprovisioning''.'
        enum:
          - NotProvisioned
          - Provisioning
          - Provisioned
          - Deprovisioning
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ServiceProviderProvisioningState
  ExpressRouteCircuitRoutesTable:
    description: The routes table associated with the ExpressRouteCircuit
    properties:
      locPrf:
        description: locPrf
        type: string
        required: false
      network:
        description: network
        type: string
        required: false
      nextHop:
        description: nextHop
        type: string
        required: false
      path:
        description: path
        type: string
        required: false
      weight:
        description: weight.
        format: int32
        type: integer
        required: false
  ExpressRouteCircuitRoutesTableSummary:
    description: The routes table associated with the ExpressRouteCircuit.
    properties:
      as:
        description: Autonomous system number.
        format: int32
        type: integer
        required: false
      neighbor:
        description: Neighbor
        type: string
        required: false
      statePfxRcd:
        description: 'Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group.'
        type: string
        required: false
      upDown:
        description: 'The length of time that the BGP session has been in the Established state, or the current status if not in the Established state.'
        type: string
        required: false
      v:
        description: BGP version number spoken to the neighbor.
        format: int32
        type: integer
        required: false
  ExpressRouteCircuitServiceProviderProperties:
    description: Contains ServiceProviderProperties in an ExpressRouteCircuit.
    properties:
      bandwidthInMbps:
        description: The BandwidthInMbps.
        format: int32
        type: integer
        required: false
      peeringLocation:
        description: The peering location.
        type: string
        required: false
      serviceProviderName:
        description: The serviceProviderName.
        type: string
        required: false
  ExpressRouteCircuitSku:
    description: Contains SKU in an ExpressRouteCircuit.
    properties:
      family:
        description: 'The family of the SKU. Possible values are: ''UnlimitedData'' and ''MeteredData''.'
        enum:
          - UnlimitedData
          - MeteredData
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ExpressRouteCircuitSkuFamily
      name:
        description: The name of the SKU.
        type: string
        required: false
      tier:
        description: The tier of the SKU. Possible values are 'Standard' and 'Premium'.
        enum:
          - Standard
          - Premium
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: ExpressRouteCircuitSkuTier
  ExpressRouteCircuitStats:
    description: Contains stats associated with the peering.
    properties:
      primarybytesIn:
        description: Gets BytesIn of the peering.
        format: int64
        type: integer
        required: false
      primarybytesOut:
        description: Gets BytesOut of the peering.
        format: int64
        type: integer
        required: false
      secondarybytesIn:
        description: Gets BytesIn of the peering.
        format: int64
        type: integer
        required: false
      secondarybytesOut:
        description: Gets BytesOut of the peering.
        format: int64
        type: integer
        required: false
  ExpressRouteCircuitsArpTableListResult:
    description: Response for ListArpTable associated with the Express Route Circuits API.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets list of the ARP table.
        items:
          type: ExpressRouteCircuitArpTable
        type: array
        required: false
  ExpressRouteCircuitsRoutesTableListResult:
    description: Response for ListRoutesTable associated with the Express Route Circuits API.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The list of routes table.
        items:
          type: ExpressRouteCircuitRoutesTable
        type: array
        required: false
  ExpressRouteCircuitsRoutesTableSummaryListResult:
    description: Response for ListRoutesTable associated with the Express Route Circuits API.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of the routes table.
        items:
          type: ExpressRouteCircuitRoutesTableSummary
        type: array
        required: false
  ExpressRouteServiceProvider:
    type: Resource
  ExpressRouteServiceProviderBandwidthsOffered:
    description: Contains bandwidths offered in ExpressRouteServiceProvider resources.
    properties:
      offerName:
        description: The OfferName.
        type: string
        required: false
      valueInMbps:
        description: The ValueInMbps.
        format: int32
        type: integer
        required: false
  ExpressRouteServiceProviderListResult:
    description: Response for the ListExpressRouteServiceProvider API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of ExpressRouteResourceProvider resources.
        items:
          type: ExpressRouteServiceProvider
        type: array
        required: false
  ExpressRouteServiceProviderPropertiesFormat:
    description: Properties of ExpressRouteServiceProvider.
    properties:
      bandwidthsOffered:
        description: Gets bandwidths offered.
        items:
          type: ExpressRouteServiceProviderBandwidthsOffered
        type: array
        required: false
      peeringLocations:
        description: Get a list of peering locations.
        items:
          type: string
        type: array
        required: false
      provisioningState:
        description: Gets the provisioning state of the resource.
        type: string
        required: false
  FrontendIPConfiguration:
    type: SubResource
  FrontendIPConfigurationPropertiesFormat:
    description: Properties of Frontend IP Configuration of the load balancer.
    properties:
      inboundNatPools:
        description: Read only. Inbound pools URIs that use this frontend IP.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      inboundNatRules:
        description: Read only. Inbound rules URIs that use this frontend IP.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      loadBalancingRules:
        description: Gets load balancing rules URIs that use this frontend IP.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      outboundNatRules:
        description: Read only. Outbound rules URIs that use this frontend IP.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      privateIPAddress:
        description: The private IP address of the IP configuration.
        type: string
        required: false
      privateIPAllocationMethod:
        description: 'The Private IP allocation method. Possible values are: ''Static'' and ''Dynamic''.'
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      publicIPAddress:
        description: The reference of the Public IP resource.
        type: PublicIPAddress
        required: false
      subnet:
        description: The reference of the subnet resource.
        type: Subnet
        required: false
  IPAddressAvailabilityResult:
    description: Response for CheckIPAddressAvailability API service call
    properties:
      available:
        description: Private IP address availability.
        type: boolean
        required: false
      availableIPAddresses:
        description: Contains other available private IP addresses if the asked for address is taken.
        items:
          type: string
        type: array
        required: false
  IPConfiguration:
    type: SubResource
  IPConfigurationPropertiesFormat:
    description: Properties of IP configuration.
    properties:
      privateIPAddress:
        description: The private IP address of the IP configuration.
        type: string
        required: false
      privateIPAllocationMethod:
        description: The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      publicIPAddress:
        description: The reference of the public IP resource.
        type: PublicIPAddress
        required: false
      subnet:
        description: The reference of the subnet resource.
        type: Subnet
        required: false
  InboundNatPool:
    type: SubResource
  InboundNatPoolPropertiesFormat:
    description: Properties of Inbound NAT pool.
    properties:
      backendPort:
        description: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
        format: int32
        type: integer
      frontendIPConfiguration:
        description: A reference to frontend IP addresses.
        type: SubResource
        required: false
      frontendPortRangeEnd:
        description: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
        format: int32
        type: integer
      frontendPortRangeStart:
        description: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
        format: int32
        type: integer
      protocol:
        description: 'The transport protocol for the endpoint. Possible values are: ''Udp'' or ''Tcp''.'
        enum:
          - Udp
          - Tcp
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: TransportProtocol
      provisioningState:
        description: 'Gets the provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  InboundNatRule:
    type: SubResource
  InboundNatRulePropertiesFormat:
    description: Properties of the inbound NAT rule.
    properties:
      backendIPConfiguration:
        description: A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
        readOnly: true
        type: NetworkInterfaceIPConfiguration
        facets:
          readOnly?: boolean
        required: false
      backendPort:
        description: The port used for the internal endpoint. Acceptable values range from 1 to 65535.
        format: int32
        type: integer
        required: false
      enableFloatingIP:
        description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        type: boolean
        required: false
      frontendIPConfiguration:
        description: A reference to frontend IP addresses.
        type: SubResource
        required: false
      frontendPort:
        description: The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
        format: int32
        type: integer
        required: false
      idleTimeoutInMinutes:
        description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        format: int32
        type: integer
        required: false
      protocol:
        description: 'The transport protocol for the endpoint. Possible values are: ''Udp'' or ''Tcp'''
        enum:
          - Udp
          - Tcp
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: TransportProtocol
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  LoadBalancer:
    type: Resource
  LoadBalancerListResult:
    description: Response for ListLoadBalancers API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of load balancers in a resource group.
        items:
          type: LoadBalancer
        type: array
        required: false
  LoadBalancerPropertiesFormat:
    description: Properties of the load balancer.
    properties:
      backendAddressPools:
        description: Collection of backend address pools used by a load balancer
        items:
          type: BackendAddressPool
        type: array
        required: false
      frontendIPConfigurations:
        description: Object representing the frontend IPs to be used for the load balancer
        items:
          type: FrontendIPConfiguration
        type: array
        required: false
      inboundNatPools:
        description: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
        items:
          type: InboundNatPool
        type: array
        required: false
      inboundNatRules:
        description: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
        items:
          type: InboundNatRule
        type: array
        required: false
      loadBalancingRules:
        description: 'Object collection representing the load balancing rules Gets the provisioning '
        items:
          type: LoadBalancingRule
        type: array
        required: false
      outboundNatRules:
        description: The outbound NAT rules.
        items:
          type: OutboundNatRule
        type: array
        required: false
      probes:
        description: Collection of probe objects used in the load balancer
        items:
          type: Probe
        type: array
        required: false
      provisioningState:
        description: 'Gets the provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      resourceGuid:
        description: The resource GUID property of the load balancer resource.
        type: string
        required: false
  LoadBalancingRule:
    type: SubResource
  LoadBalancingRulePropertiesFormat:
    description: Properties of the load balancer.
    properties:
      backendAddressPool:
        description: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
        type: SubResource
        required: false
      backendPort:
        description: 'The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535. '
        format: int32
        type: integer
        required: false
      enableFloatingIP:
        description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        type: boolean
        required: false
      frontendIPConfiguration:
        description: A reference to frontend IP addresses.
        type: SubResource
        required: false
      frontendPort:
        description: The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
        format: int32
        type: integer
      idleTimeoutInMinutes:
        description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        format: int32
        type: integer
        required: false
      loadDistribution:
        description: 'The load distribution policy for this rule. Possible values are ''Default'', ''SourceIP'', and ''SourceIPProtocol''.'
        enum:
          - Default
          - SourceIP
          - SourceIPProtocol
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: LoadDistribution
      probe:
        description: The reference of the load balancer probe used by the load balancing rule.
        type: SubResource
        required: false
      protocol:
        description: The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
        enum:
          - Udp
          - Tcp
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: TransportProtocol
      provisioningState:
        description: 'Gets the provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  LocalNetworkGateway:
    type: Resource
  LocalNetworkGatewayListResult:
    description: Response for ListLocalNetworkGateways API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of local network gateways that exists in a resource group.
        items:
          type: LocalNetworkGateway
        type: array
        required: false
  LocalNetworkGatewayPropertiesFormat:
    description: LocalNetworkGateway properties
    properties:
      bgpSettings:
        description: Local network gateway's BGP speaker settings.
        type: BgpSettings
        required: false
      gatewayIpAddress:
        description: IP address of local network gateway.
        type: string
        required: false
      localNetworkAddressSpace:
        description: Local network site address space.
        type: AddressSpace
      provisioningState:
        description: 'The provisioning state of the LocalNetworkGateway resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      resourceGuid:
        description: The resource GUID property of the LocalNetworkGateway resource.
        type: string
        required: false
  NetworkInterface:
    type: Resource
  NetworkInterfaceDnsSettings:
    description: DNS settings of a network interface.
    properties:
      appliedDnsServers:
        description: 'If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.'
        items:
          type: string
        type: array
        required: false
      dnsServers:
        description: 'List of DNS servers IP addresses. Use ''AzureProvidedDNS'' to switch to azure provided DNS resolution. ''AzureProvidedDNS'' value cannot be combined with other IPs, it must be the only value in dnsServers collection.'
        items:
          type: string
        type: array
        required: false
      internalDnsNameLabel:
        description: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
        type: string
        required: false
      internalDomainNameSuffix:
        description: 'Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.'
        type: string
        required: false
      internalFqdn:
        description: Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
        type: string
        required: false
  NetworkInterfaceIPConfiguration:
    type: SubResource
  NetworkInterfaceIPConfigurationPropertiesFormat:
    description: Properties of IP configuration.
    properties:
      applicationGatewayBackendAddressPools:
        description: The reference of ApplicationGatewayBackendAddressPool resource.
        items:
          type: ApplicationGatewayBackendAddressPool
        type: array
        required: false
      loadBalancerBackendAddressPools:
        description: The reference of LoadBalancerBackendAddressPool resource.
        items:
          type: BackendAddressPool
        type: array
        required: false
      loadBalancerInboundNatRules:
        description: A list of references of LoadBalancerInboundNatRules.
        items:
          type: InboundNatRule
        type: array
        required: false
      primary:
        description: Gets whether this is a primary customer address on the network interface.
        type: boolean
        required: false
      privateIPAddress:
        type: string
        required: false
      privateIPAddressVersion:
        description: 'Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
        enum:
          - IPv4
          - IPv6
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPVersion
      privateIPAllocationMethod:
        description: 'Defines how a private IP address is assigned. Possible values are: ''Static'' and ''Dynamic''.'
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      provisioningState:
        type: string
        required: false
      publicIPAddress:
        type: PublicIPAddress
        required: false
      subnet:
        type: Subnet
        required: false
  NetworkInterfaceListResult:
    description: Response for the ListNetworkInterface API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of network interfaces in a resource group.
        items:
          type: NetworkInterface
        type: array
        required: false
  NetworkInterfacePropertiesFormat:
    description: 'NetworkInterface properties. '
    properties:
      dnsSettings:
        description: The DNS settings in network interface.
        type: NetworkInterfaceDnsSettings
        required: false
      enableAcceleratedNetworking:
        description: If the network interface is accelerated networking enabled.
        type: boolean
        required: false
      enableIPForwarding:
        description: Indicates whether IP forwarding is enabled on this network interface.
        type: boolean
        required: false
      ipConfigurations:
        description: A list of IPConfigurations of the network interface.
        items:
          type: NetworkInterfaceIPConfiguration
        type: array
        required: false
      macAddress:
        description: The MAC address of the network interface.
        type: string
        required: false
      networkSecurityGroup:
        description: The reference of the NetworkSecurityGroup resource.
        type: NetworkSecurityGroup
        required: false
      primary:
        description: Gets whether this is a primary network interface on a virtual machine.
        type: boolean
        required: false
      provisioningState:
        description: 'The provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      resourceGuid:
        description: The resource GUID property of the network interface resource.
        type: string
        required: false
      virtualMachine:
        description: The reference of a virtual machine.
        type: SubResource
        required: false
  NetworkSecurityGroup:
    type: Resource
  NetworkSecurityGroupListResult:
    description: Response for ListNetworkSecurityGroups API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of NetworkSecurityGroup resources.
        items:
          type: NetworkSecurityGroup
        type: array
        required: false
  NetworkSecurityGroupPropertiesFormat:
    description: Network Security Group resource.
    properties:
      defaultSecurityRules:
        description: The default security rules of network security group.
        items:
          type: SecurityRule
        type: array
        required: false
      networkInterfaces:
        description: A collection of references to network interfaces.
        items:
          type: NetworkInterface
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      provisioningState:
        description: 'The provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      resourceGuid:
        description: The resource GUID property of the network security group resource.
        type: string
        required: false
      securityRules:
        description: A collection of security rules of the network security group.
        items:
          type: SecurityRule
        type: array
        required: false
      subnets:
        description: A collection of references to subnets.
        items:
          type: Subnet
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
  OutboundNatRule:
    type: SubResource
  OutboundNatRulePropertiesFormat:
    description: Outbound NAT pool of the load balancer.
    properties:
      allocatedOutboundPorts:
        description: The number of outbound ports to be used for NAT.
        format: int32
        type: integer
        required: false
      backendAddressPool:
        description: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
        type: SubResource
      frontendIPConfigurations:
        description: The Frontend IP addresses of the load balancer.
        items:
          type: SubResource
        type: array
        required: false
      provisioningState:
        description: 'Gets the provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  Probe:
    type: SubResource
  ProbePropertiesFormat:
    properties:
      intervalInSeconds:
        description: 'The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.'
        format: int32
        type: integer
        required: false
      loadBalancingRules:
        description: The load balancer rules that use this probe.
        items:
          type: SubResource
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      numberOfProbes:
        description: 'The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.'
        format: int32
        type: integer
        required: false
      port:
        description: 'The port for communicating the probe. Possible values range from 1 to 65535, inclusive.'
        format: int32
        type: integer
      protocol:
        description: 'The protocol of the end point. Possible values are: ''Http'' or ''Tcp''. If ''Tcp'' is specified, a received ACK is required for the probe to be successful. If ''Http'' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.'
        enum:
          - Http
          - Tcp
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: ProbeProtocol
      provisioningState:
        description: 'Gets the provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      requestPath:
        description: 'The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.'
        type: string
        required: false
  PublicIPAddress:
    type: Resource
  PublicIPAddressDnsSettings:
    description: Contains the FQDN of the DNS record associated with the public IP address.
    properties:
      domainNameLabel:
        description: 'The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.'
        type: string
        required: false
      fqdn:
        description: The FQDN (fully qualified domain name) of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
        type: string
        required: false
      reverseFqdn:
        description: 'The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.'
        type: string
        required: false
  PublicIPAddressListResult:
    description: Response for ListPublicIpAddresses API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: A list of public IP addresses that exists in a resource group.
        items:
          type: PublicIPAddress
        type: array
        required: false
  PublicIPAddressPropertiesFormat:
    description: Public IP address properties.
    properties:
      dnsSettings:
        description: The FQDN of the DNS record associated with the public IP address.
        type: PublicIPAddressDnsSettings
        required: false
      idleTimeoutInMinutes:
        description: The idle timeout of the public IP address.
        format: int32
        type: integer
        required: false
      ipAddress:
        type: string
        required: false
      ipConfiguration:
        readOnly: true
        type: IPConfiguration
        facets:
          readOnly?: boolean
        required: false
      provisioningState:
        description: 'The provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      publicIPAddressVersion:
        description: 'The public IP address version. Possible values are: ''IPv4'' and ''IPv6''.'
        enum:
          - IPv4
          - IPv6
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPVersion
      publicIPAllocationMethod:
        description: 'The public IP allocation method. Possible values are: ''Static'' and ''Dynamic''.'
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      resourceGuid:
        description: The resource GUID property of the public IP resource.
        type: string
        required: false
  Resource:
    properties:
      id:
        description: Resource ID.
        type: string
        required: false
      location:
        description: Resource location.
        type: string
        required: false
      name:
        description: Resource name.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      tags:
        description: Resource tags.
        type: object
        required: false
        properties:
          //:
            type: string
      type:
        description: Resource type.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  ResourceNavigationLink:
    type: SubResource
  ResourceNavigationLinkFormat:
    description: Properties of ResourceNavigationLink.
    properties:
      link:
        description: Link to the external resource
        type: string
        required: false
      linkedResourceType:
        description: Resource type of the linked resource.
        type: string
        required: false
      provisioningState:
        description: Provisioning state of the ResourceNavigationLink resource.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  Route:
    type: SubResource
  RouteListResult:
    description: Response for the ListRoute API service call
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets a list of routes in a resource group.
        items:
          type: Route
        type: array
        required: false
  RoutePropertiesFormat:
    description: Route resource
    properties:
      addressPrefix:
        description: The destination CIDR to which the route applies.
        type: string
        required: false
      nextHopIpAddress:
        description: The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
        type: string
        required: false
      nextHopType:
        description: 'The type of Azure hop the packet should be sent to. Possible values are: ''VirtualNetworkGateway'', ''VnetLocal'', ''Internet'', ''VirtualAppliance'', and ''None'''
        enum:
          - VirtualNetworkGateway
          - VnetLocal
          - Internet
          - VirtualAppliance
          - None
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: RouteNextHopType
      provisioningState:
        description: 'The provisioning state of the resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
  RouteTable:
    type: Resource
  RouteTableListResult:
    description: Response for the ListRouteTable API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets a list of route tables in a resource group.
        items:
          type: RouteTable
        type: array
        required: false
  RouteTablePropertiesFormat:
    description: Route Table resource
    properties:
      provisioningState:
        description: 'The provisioning state of the resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      routes:
        description: Collection of routes contained within a route table.
        items:
          type: Route
        type: array
        required: false
      subnets:
        description: A collection of references to subnets.
        items:
          type: Subnet
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
  SecurityRule:
    type: SubResource
  SecurityRuleListResult:
    description: Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The security rules in a network security group.
        items:
          type: SecurityRule
        type: array
        required: false
  SecurityRulePropertiesFormat:
    properties:
      access:
        description: 'The network traffic is allowed or denied. Possible values are: ''Allow'' and ''Deny''.'
        enum:
          - Allow
          - Deny
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleAccess
      description:
        description: A description for this rule. Restricted to 140 chars.
        type: string
        required: false
      destinationAddressPrefix:
        description: 'The destination address prefix. CIDR or source IP range. Asterix ''*'' can also be used to match all source IPs. Default tags such as ''VirtualNetwork'', ''AzureLoadBalancer'' and ''Internet'' can also be used.'
        type: string
      destinationPortRange:
        description: The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
        type: string
        required: false
      direction:
        description: 'The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: ''Inbound'' and ''Outbound''.'
        enum:
          - Inbound
          - Outbound
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleDirection
      priority:
        description: 'The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.'
        format: int32
        type: integer
        required: false
      protocol:
        description: 'Network protocol this rule applies to. Possible values are ''Tcp'', ''Udp'', and ''*''.'
        enum:
          - Tcp
          - Udp
          - '*'
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: SecurityRuleProtocol
      provisioningState:
        description: 'The provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      sourceAddressPrefix:
        description: 'The CIDR or source IP range. Asterix ''*'' can also be used to match all source IPs. Default tags such as ''VirtualNetwork'', ''AzureLoadBalancer'' and ''Internet'' can also be used. If this is an ingress rule, specifies where network traffic originates from. '
        type: string
      sourcePortRange:
        description: The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
        type: string
        required: false
  SubResource:
    properties:
      id:
        description: Resource ID.
        type: string
        required: false
  Subnet:
    type: SubResource
  SubnetListResult:
    description: Response for ListSubnets API service callRetrieves all subnet that belongs to a virtual network
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The subnets in a virtual network.
        items:
          type: Subnet
        type: array
        required: false
  SubnetPropertiesFormat:
    properties:
      addressPrefix:
        description: The address prefix for the subnet.
        type: string
        required: false
      ipConfigurations:
        description: Gets an array of references to the network interface IP configurations using subnet.
        items:
          type: IPConfiguration
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      networkSecurityGroup:
        description: The reference of the NetworkSecurityGroup resource.
        type: NetworkSecurityGroup
        required: false
      provisioningState:
        description: The provisioning state of the resource.
        type: string
        required: false
      resourceNavigationLinks:
        description: Gets an array of references to the external resources using subnet.
        items:
          type: ResourceNavigationLink
        type: array
        required: false
      routeTable:
        description: The reference of the RouteTable resource.
        type: RouteTable
        required: false
  TunnelConnectionHealth:
    description: VirtualNetworkGatewayConnection properties
    properties:
      connectionStatus:
        description: Virtual network Gateway connection status
        enum:
          - Unknown
          - Connecting
          - Connected
          - NotConnected
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewayConnectionStatus
      egressBytesTransferred:
        description: The Egress Bytes Transferred in this connection
        format: int64
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      ingressBytesTransferred:
        description: The Ingress Bytes Transferred in this connection
        format: int64
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      lastConnectionEstablishedUtcTime:
        description: The time at which connection was established in Utc format.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      tunnel:
        description: Tunnel name.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  Usage:
    description: Describes network resource usage.
    properties:
      currentValue:
        description: The current value of the usage.
        format: int64
        type: integer
      limit:
        description: The limit of usage.
        format: int64
        type: integer
      name:
        description: The name of the type of usage.
        type: UsageName
      unit:
        description: An enum describing the unit of measurement.
        enum:
          - Count
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: UsageUnit
  UsageName:
    description: The usage names.
    properties:
      localizedValue:
        description: A localized string describing the resource name.
        type: string
        required: false
      value:
        description: A string describing the resource name.
        type: string
        required: false
  UsagesListResult:
    description: The list usages operation response.
    properties:
      nextLink:
        description: URL to get the next set of results.
        type: string
        required: false
      value:
        description: The list network resource usages.
        items:
          type: Usage
        type: array
        required: false
  VirtualNetwork:
    type: Resource
  VirtualNetworkGateway:
    type: Resource
  VirtualNetworkGatewayConnection:
    type: Resource
  VirtualNetworkGatewayConnectionListResult:
    description: Response for the ListVirtualNetworkGatewayConnections API service call
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets a list of VirtualNetworkGatewayConnection resources that exists in a resource group.
        items:
          type: VirtualNetworkGatewayConnection
        type: array
        required: false
  VirtualNetworkGatewayConnectionPropertiesFormat:
    description: VirtualNetworkGatewayConnection properties
    properties:
      authorizationKey:
        description: The authorizationKey.
        type: string
        required: false
      connectionStatus:
        description: 'Virtual network Gateway connection status. Possible values are ''Unknown'', ''Connecting'', ''Connected'' and ''NotConnected''.'
        enum:
          - Unknown
          - Connecting
          - Connected
          - NotConnected
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewayConnectionStatus
      connectionType:
        description: 'Gateway connection type. Possible values are: ''Ipsec'',''Vnet2Vnet'',''ExpressRoute'', and ''VPNClient.'
        enum:
          - IPsec
          - Vnet2Vnet
          - ExpressRoute
          - VPNClient
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewayConnectionType
      egressBytesTransferred:
        description: The egress bytes transferred in this connection.
        format: int64
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      enableBgp:
        description: EnableBgp flag
        type: boolean
        required: false
      ingressBytesTransferred:
        description: The ingress bytes transferred in this connection.
        format: int64
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      localNetworkGateway2:
        type: LocalNetworkGateway
        required: false
      peer:
        description: The reference to peerings resource.
        type: SubResource
        required: false
      provisioningState:
        description: 'The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      resourceGuid:
        description: The resource GUID property of the VirtualNetworkGatewayConnection resource.
        type: string
        required: false
      routingWeight:
        description: The routing weight.
        format: int32
        type: integer
        required: false
      sharedKey:
        description: The IPSec shared key.
        type: string
        required: false
      tunnelConnectionStatus:
        description: Collection of all tunnels' connection health status.
        items:
          type: TunnelConnectionHealth
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      virtualNetworkGateway1:
        type: VirtualNetworkGateway
      virtualNetworkGateway2:
        type: VirtualNetworkGateway
        required: false
  VirtualNetworkGatewayIPConfiguration:
    type: SubResource
  VirtualNetworkGatewayIPConfigurationPropertiesFormat:
    description: Properties of VirtualNetworkGatewayIPConfiguration
    properties:
      privateIPAllocationMethod:
        description: 'The private IP allocation method. Possible values are: ''Static'' and ''Dynamic''.'
        enum:
          - Static
          - Dynamic
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: IPAllocationMethod
      provisioningState:
        description: 'The provisioning state of the public IP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      publicIPAddress:
        description: The reference of the public IP resource.
        type: SubResource
      subnet:
        description: The reference of the subnet resource.
        type: SubResource
  VirtualNetworkGatewayListResult:
    description: Response for the ListVirtualNetworkGateways API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets a list of VirtualNetworkGateway resources that exists in a resource group.
        items:
          type: VirtualNetworkGateway
        type: array
        required: false
  VirtualNetworkGatewayPropertiesFormat:
    description: VirtualNetworkGateway properties
    properties:
      activeActive:
        description: ActiveActive flag
        type: boolean
        required: false
      bgpSettings:
        description: Virtual network gateway's BGP speaker settings.
        type: BgpSettings
        required: false
      enableBgp:
        description: Whether BGP is enabled for this virtual network gateway or not.
        type: boolean
        required: false
      gatewayDefaultSite:
        description: The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        type: SubResource
        required: false
      gatewayType:
        description: 'The type of this virtual network gateway. Possible values are: ''Vpn'' and ''ExpressRoute''.'
        enum:
          - Vpn
          - ExpressRoute
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewayType
      ipConfigurations:
        description: IP configurations for virtual network gateway.
        items:
          type: VirtualNetworkGatewayIPConfiguration
        type: array
      provisioningState:
        description: 'The provisioning state of the VirtualNetworkGateway resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      resourceGuid:
        description: The resource GUID property of the VirtualNetworkGateway resource.
        type: string
        required: false
      sku:
        description: The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        type: VirtualNetworkGatewaySku
        required: false
      vpnClientConfiguration:
        description: The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        type: VpnClientConfiguration
        required: false
      vpnType:
        description: 'The type of this virtual network gateway. Possible values are: ''PolicyBased'' and ''RouteBased''.'
        enum:
          - PolicyBased
          - RouteBased
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: VpnType
  VirtualNetworkGatewaySku:
    description: VirtualNetworkGatewaySku details
    properties:
      capacity:
        description: The capacity.
        format: int32
        type: integer
        required: false
      name:
        description: 'Gateway SKU name. Possible values are: ''Basic'', ''HighPerformance'',''Standard'', and ''UltraPerformance''.'
        enum:
          - Basic
          - HighPerformance
          - Standard
          - UltraPerformance
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewaySkuName
      tier:
        description: 'Gateway SKU tier. Possible values are: ''Basic'', ''HighPerformance'',''Standard'', and ''UltraPerformance''.'
        enum:
          - Basic
          - HighPerformance
          - Standard
          - UltraPerformance
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkGatewaySkuTier
  VirtualNetworkListResult:
    description: Response for the ListVirtualNetworks API service call.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: Gets a list of VirtualNetwork resources in a resource group.
        items:
          type: VirtualNetwork
        type: array
        required: false
  VirtualNetworkPeering:
    type: SubResource
  VirtualNetworkPeeringListResult:
    description: Response for ListSubnets API service call. Retrieves all subnets that belong to a virtual network.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
        required: false
      value:
        description: The peerings in a virtual network.
        items:
          type: VirtualNetworkPeering
        type: array
        required: false
  VirtualNetworkPeeringPropertiesFormat:
    properties:
      allowForwardedTraffic:
        description: Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
        type: boolean
        required: false
      allowGatewayTransit:
        description: If gateway links can be used in remote virtual networking to link to this virtual network.
        type: boolean
        required: false
      allowVirtualNetworkAccess:
        description: Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
        type: boolean
        required: false
      peeringState:
        description: 'The status of the virtual network peering. Possible values are ''Initiated'', ''Connected'', and ''Disconnected''.'
        enum:
          - Initiated
          - Connected
          - Disconnected
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: true
          name: VirtualNetworkPeeringState
      provisioningState:
        description: The provisioning state of the resource.
        type: string
        required: false
      remoteVirtualNetwork:
        description: The reference of the remote virtual network.
        type: SubResource
        required: false
      useRemoteGateways:
        description: 'If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.'
        type: boolean
        required: false
  VirtualNetworkPropertiesFormat:
    properties:
      addressSpace:
        description: The AddressSpace that contains an array of IP address ranges that can be used by subnets.
        type: AddressSpace
        required: false
      dhcpOptions:
        description: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
        type: DhcpOptions
        required: false
      provisioningState:
        description: 'The provisioning state of the PublicIP resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        type: string
        required: false
      resourceGuid:
        description: The resourceGuid property of the Virtual Network resource.
        type: string
        required: false
      subnets:
        description: A list of subnets in a Virtual Network.
        items:
          type: Subnet
        type: array
        required: false
      virtualNetworkPeerings:
        description: A list of peerings in a Virtual Network.
        items:
          type: VirtualNetworkPeering
        type: array
        required: false
  VpnClientConfiguration:
    description: VpnClientConfiguration for P2S client.
    properties:
      vpnClientAddressPool:
        description: The reference of the address space resource which represents Address space for P2S VpnClient.
        type: AddressSpace
        required: false
      vpnClientRevokedCertificates:
        description: VpnClientRevokedCertificate for Virtual network gateway.
        items:
          type: VpnClientRevokedCertificate
        type: array
        required: false
      vpnClientRootCertificates:
        description: VpnClientRootCertificate for virtual network gateway.
        items:
          type: VpnClientRootCertificate
        type: array
        required: false
  VpnClientParameters:
    description: VpnClientParameters
    properties:
      ProcessorArchitecture:
        description: 'VPN client Processor Architecture. Possible values are: ''AMD64'' and ''X86''.'
        enum:
          - Amd64
          - X86
        type: string
        (oas-x-ms-enum):
          modelAsString: true
          name: ProcessorArchitecture
  VpnClientRevokedCertificate:
    type: SubResource
  VpnClientRevokedCertificatePropertiesFormat:
    description: Properties of the revoked VPN client certificate of virtual network gateway.
    properties:
      provisioningState:
        description: 'The provisioning state of the VPN client revoked certificate resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      thumbprint:
        description: The revoked VPN client certificate thumbprint.
        type: string
        required: false
  VpnClientRootCertificate:
    type: SubResource
  VpnClientRootCertificatePropertiesFormat:
    description: Properties of SSL certificates of application gateway
    properties:
      provisioningState:
        description: 'The provisioning state of the VPN client root certificate resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      publicCertData:
        description: The certificate public data.
        type: string
traits:
  apiVersionParameter:
    queryParameters:
      api-version:
        type: string
        description: Client API version.
        required: true
