#%RAML 1.0
title: Google Apps Script Execution
version: v1
baseUri: 'https://script.googleapis.com/'
protocols:
  - HTTPS
description: Executes Google Apps Script projects.
(oas-tags-definition):
  - name: scripts
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_apps_script_64dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/script/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): script
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/apps-script/execution/rest/v1/scripts/run'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://mail.google.com/'
        - 'https://www.google.com/calendar/feeds'
        - 'https://www.google.com/m8/feeds'
        - 'https://www.googleapis.com/auth/admin.directory.group'
        - 'https://www.googleapis.com/auth/admin.directory.user'
        - 'https://www.googleapis.com/auth/drive'
        - 'https://www.googleapis.com/auth/forms'
        - 'https://www.googleapis.com/auth/forms.currentonly'
        - 'https://www.googleapis.com/auth/groups'
        - 'https://www.googleapis.com/auth/spreadsheets'
        - 'https://www.googleapis.com/auth/userinfo.email'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  /scripts:
    displayName: scripts
    '/{scriptId}:run':
      displayName: '{scriptId}:run'
      uriParameters:
        scriptId:
          description: 'The project key of the script to be executed. To find the project key, open the project in the script editor, then select **File > Project properties**.'
          required: true
          type: string
      post:
        displayName: script.scripts.run
        description: 'Runs a function in an Apps Script project that has been deployed for use with the Apps Script Execution API. This method requires authorization with an OAuth 2.0 token that includes at least one of the scopes listed in the [Authentication](#authentication) section; script projects that do not require authorization cannot be executed through this API. To find the correct scopes to include in the authentication token, open the project in the script editor, then select **File > Project properties** and click the **Scopes** tab.'
        body:
          application/json:
            type: ExecutionRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Operation
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/userinfo.email'
        (oas-tags):
          - scripts
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
types:
  ExecutionError:
    description: 'An object that provides information about the nature of an error in the Apps Script Execution API. If an `run` call succeeds but the script function (or Apps Script itself) throws an exception, the response body''s `error` field will contain a `Status` object. The `Status` object''s `details` field will contain an array with a single one of these `ExecutionError` objects.'
    properties:
      errorMessage:
        description: 'The error message thrown by Apps Script, usually localized into the user''s language.'
        type: string
        required: false
      errorType:
        description: 'The error type, for example `TypeError` or `ReferenceError`. If the error type is unavailable, this field is not included.'
        type: string
        required: false
      scriptStackTraceElements:
        description: 'An array of objects that provide a stack trace through the script to show where the execution failed, with the deepest call first.'
        items:
          type: ScriptStackTraceElement
        type: array
        required: false
  ExecutionRequest:
    description: A request to run the function in a script. The script is identified by the specified `script_id`. Executing a function on a script will return results based on the implementation of the script.
    properties:
      devMode:
        description: 'If `true` and the user is an owner of the script, the script runs at the most recently saved version rather than the version deployed for use with the Execution API. Optional; default is `false`.'
        type: boolean
        required: false
      function:
        description: The name of the function to execute in the given script. The name does not include parentheses or parameters.
        type: string
        required: false
      parameters:
        description: 'The parameters to be passed to the function being executed. The type for each parameter should match the expected type in Apps Script. Parameters cannot be Apps Script-specific objects (such as a `Document` or `Calendar`); they can only be primitive types such as a `string`, `number`, `array`, `object`, or `boolean`. Optional.'
        items: {}
        type: array
        required: false
      sessionState:
        description: This field is not used.
        type: string
        required: false
  ExecutionResponse:
    description: 'An object that provides the return value of a function executed through the Apps Script Execution API. If an `run` call succeeds and the script function returns successfully, the response body''s `response` field will contain this `ExecutionResponse` object.'
    properties:
      result:
        description: 'The return value of the script function. The type will match the type returned in Apps Script. Functions called through the Execution API cannot return Apps Script-specific objects (such as a `Document` or `Calendar`); they can only return primitive types such as a `string`, `number`, `array`, `object`, or `boolean`.'
        required: false
      status:
        enum:
          - SUCCESS
          - CANCELED
        type: string
        required: false
  Operation:
    description: |-
      The response will not arrive until the function finishes executing. The maximum runtime is listed in the guide to [limitations in Apps Script](https://developers.google.com/apps-script/guides/services/quotas#current_limitations).
      If the script function returns successfully, the `response` field will contain an `ExecutionResponse` object with the function's return value in the object's `result` field.

      If the script function (or Apps Script itself) throws an exception, the `error` field will contain a `Status` object. The `Status` object's `details` field will contain an array with a single `ExecutionError` object that provides information about the nature of the error.

      If the `run` call itself fails (for example, because of a malformed request or an authorization error), the method will return an HTTP response code in the 4XX range with a different format for the response body. Client libraries will automatically convert a 4XX response into an exception class.
    properties:
      done:
        description: This field is not used.
        type: boolean
        required: false
      error:
        description: 'If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, this field will contain a `Status` object. The `Status` object''s `details` field will contain an array with a single `ExecutionError` object that provides information about the nature of the error.'
        type: Status
        required: false
      metadata:
        description: This field is not used.
        type: object
        required: false
        properties:
          //:
            description: Properties of the object. Contains field @type with type URL.
      name:
        description: This field is not used.
        type: string
        required: false
      response:
        description: 'If the script function returns successfully, this field will contain an `ExecutionResponse` object with the function''s return value as the object''s `result` field.'
        type: object
        required: false
        properties:
          //:
            description: Properties of the object. Contains field @type with type URL.
  ScriptStackTraceElement:
    description: A stack trace through the script that shows where the execution failed.
    properties:
      function:
        description: The name of the function that failed.
        type: string
        required: false
      lineNumber:
        description: The line number where the script failed.
        format: int32
        type: integer
        required: false
  Status:
    description: 'If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, the response body''s `error` field will contain this `Status` object.'
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
        required: false
      details:
        description: An array that contains a single `ExecutionError` object that provides information about the nature of the error.
        items:
          type: object
          properties:
            //:
              description: Properties of the object. Contains field @type with type URL.
        type: array
        required: false
      message:
        description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
