#%RAML 1.0
title: Google Mirror
version: v1
baseUri: 'https://www.googleapis.com/mirror/v1'
protocols:
  - HTTPS
description: Interacts with Glass users via the timeline.
(oas-tags-definition):
  - name: accounts
  - name: contacts
  - name: locations
  - name: settings
  - name: subscriptions
  - name: timeline
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/mirror/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): mirror
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/glass'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/glass.location'
        - 'https://www.googleapis.com/auth/glass.timeline'
    description: Oauth 2.0 authentication
/subscriptions:
  displayName: subscriptions
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: The ID of the subscription.
        required: true
        type: string
    delete:
      displayName: mirror.subscriptions.delete
      description: Deletes a subscription.
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - subscriptions
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    put:
      displayName: mirror.subscriptions.update
      description: Updates an existing subscription in place.
      body:
        application/json:
          type: Subscription
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Subscription
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - subscriptions
  get:
    displayName: mirror.subscriptions.list
    description: Retrieves a list of subscriptions for the authenticated user and service.
    responses:
      '200':
        body:
          application/json:
            type: SubscriptionsListResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - subscriptions
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: mirror.subscriptions.insert
    description: Creates a new subscription.
    body:
      application/json:
        type: Subscription
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Subscription
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - subscriptions
/timeline:
  displayName: timeline
  '/{itemId}':
    displayName: '{itemId}'
    /attachments:
      displayName: attachments
      '/{attachmentId}':
        displayName: '{attachmentId}'
        uriParameters:
          attachmentId:
            description: The ID of the attachment.
            required: true
            type: string
        get:
          displayName: mirror.timeline.attachments.get
          description: Retrieves an attachment on a timeline item by item ID and attachment ID.
          responses:
            '200':
              body:
                application/json:
                  type: Attachment
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/glass.timeline'
          (oas-tags):
            - timeline
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        delete:
          displayName: mirror.timeline.attachments.delete
          description: Deletes an attachment from a timeline item.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/glass.timeline'
          (oas-tags):
            - timeline
      post:
        displayName: mirror.timeline.attachments.insert
        description: Adds a new attachment to a timeline item.
        responses:
          '200':
            body:
              application/json:
                type: Attachment
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/glass.timeline'
        (oas-tags):
          - timeline
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      get:
        displayName: mirror.timeline.attachments.list
        description: Returns a list of attachments for a timeline item.
        responses:
          '200':
            body:
              application/json:
                type: AttachmentsListResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/glass.timeline'
        (oas-tags):
          - timeline
  get:
    displayName: mirror.timeline.list
    description: Retrieves a list of timeline items for the authenticated user.
    responses:
      '200':
        body:
          application/json:
            type: TimelineListResponse
        description: Successful response
    queryParameters:
      bundleId:
        description: 'If provided, only items with the given bundleId will be returned.'
        type: string
      includeDeleted:
        description: 'If true, tombstone records for deleted items will be returned.'
        type: boolean
      maxResults:
        description: 'The maximum number of items to include in the response, used for paging.'
        type: integer
      orderBy:
        description: Controls the order in which timeline items are returned.
        enum:
          - displayTime
          - writeTime
        type: string
      pageToken:
        description: Token for the page of results to return.
        type: string
      pinnedOnly:
        description: 'If true, only pinned items will be returned.'
        type: boolean
      sourceItemId:
        description: 'If provided, only items with the given sourceItemId will be returned.'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - timeline
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: mirror.timeline.insert
    description: Inserts a new item into the timeline.
    body:
      application/json:
        type: TimelineItem
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: TimelineItem
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - timeline
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: The ID of the timeline item.
        required: true
        type: string
    delete:
      displayName: mirror.timeline.delete
      description: Deletes a timeline item.
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - timeline
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: mirror.timeline.get
      description: Gets a single timeline item by ID.
      responses:
        '200':
          body:
            application/json:
              type: TimelineItem
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - timeline
    patch:
      displayName: mirror.timeline.patch
      description: Updates a timeline item in place. This method supports patch semantics.
      body:
        application/json:
          type: TimelineItem
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: TimelineItem
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - timeline
    put:
      displayName: mirror.timeline.update
      description: Updates a timeline item in place.
      body:
        application/json:
          type: TimelineItem
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: TimelineItem
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - timeline
/accounts:
  displayName: accounts
  '/{userToken}':
    displayName: '{userToken}'
    '/{accountType}':
      displayName: '{accountType}'
      '/{accountName}':
        displayName: '{accountName}'
        uriParameters:
          accountName:
            description: The name of the account to be passed to the Android Account Manager.
            required: true
            type: string
        post:
          displayName: mirror.accounts.insert
          description: Inserts a new account for a user
          body:
            application/json:
              type: Account
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Account
              description: Successful response
          (oas-tags):
            - accounts
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
/contacts:
  displayName: contacts
  post:
    displayName: mirror.contacts.insert
    description: Inserts a new contact.
    body:
      application/json:
        type: Contact
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Contact
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - contacts
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: The ID of the contact.
        required: true
        type: string
    get:
      displayName: mirror.contacts.get
      description: Gets a single contact by ID.
      responses:
        '200':
          body:
            application/json:
              type: Contact
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - contacts
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    put:
      displayName: mirror.contacts.update
      description: Updates a contact in place.
      body:
        application/json:
          type: Contact
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Contact
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - contacts
    delete:
      displayName: mirror.contacts.delete
      description: Deletes a contact.
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - contacts
    patch:
      displayName: mirror.contacts.patch
      description: Updates a contact in place. This method supports patch semantics.
      body:
        application/json:
          type: Contact
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Contact
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - contacts
  get:
    displayName: mirror.contacts.list
    description: Retrieves a list of contacts for the authenticated user.
    responses:
      '200':
        body:
          application/json:
            type: ContactsListResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - contacts
/locations:
  displayName: locations
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: The ID of the location or latest for the last known location.
        required: true
        type: string
    get:
      displayName: mirror.locations.get
      description: Gets a single location by ID.
      responses:
        '200':
          body:
            application/json:
              type: Location
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - locations
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  get:
    displayName: mirror.locations.list
    description: Retrieves a list of locations for the user.
    responses:
      '200':
        body:
          application/json:
            type: LocationsListResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/glass.timeline'
    (oas-tags):
      - locations
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/settings:
  displayName: settings
  '/{id}':
    displayName: '{id}'
    uriParameters:
      id:
        description: |-
          The ID of the setting. The following IDs are valid: 
          - locale - The key to the user’s language/locale (BCP 47 identifier) that Glassware should use to render localized content. 
          - timezone - The key to the user’s current time zone region as defined in the tz database. Example: America/Los_Angeles.
        required: true
        type: string
    get:
      displayName: mirror.settings.get
      description: Gets a single setting by ID.
      responses:
        '200':
          body:
            application/json:
              type: Setting
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/glass.timeline'
      (oas-tags):
        - settings
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
types:
  Account:
    description: Represents an account passed into the Account Manager on Glass.
    properties:
      authTokens:
        items:
          type: AuthToken
        type: array
        required: false
      features:
        items:
          type: string
        type: array
        required: false
      password:
        type: string
        required: false
      userData:
        items:
          type: UserData
        type: array
        required: false
  Attachment:
    description: 'Represents media content, such as a photo, that can be attached to a timeline item.'
    properties:
      contentType:
        description: The MIME type of the attachment.
        type: string
        required: false
      contentUrl:
        description: The URL for the content.
        type: string
        required: false
      id:
        description: The ID of the attachment.
        type: string
        required: false
      isProcessingContent:
        description: 'Indicates that the contentUrl is not available because the attachment content is still being processed. If the caller wishes to retrieve the content, it should try again later.'
        type: boolean
        required: false
  AttachmentsListResponse:
    description: A list of Attachments. This is the response from the server to GET requests on the attachments collection.
    properties:
      items:
        description: The list of attachments.
        items:
          type: Attachment
        type: array
        required: false
      kind:
        default: 'mirror#attachmentsList'
        description: 'The type of resource. This is always mirror#attachmentsList.'
        type: string
        required: false
  AuthToken:
    properties:
      authToken:
        type: string
        required: false
      type:
        type: string
        required: false
  Command:
    description: A single menu command that is part of a Contact.
    properties:
      type:
        description: |-
          The type of operation this command corresponds to. Allowed values are:  
          - TAKE_A_NOTE - Shares a timeline item with the transcription of user speech from the "Take a note" voice menu command.  
          - POST_AN_UPDATE - Shares a timeline item with the transcription of user speech from the "Post an update" voice menu command.
        type: string
        required: false
  Contact:
    description: A person or group that can be used as a creator or a contact.
    properties:
      acceptCommands:
        description: 'A list of voice menu commands that a contact can handle. Glass shows up to three contacts for each voice menu command. If there are more than that, the three contacts with the highest priority are shown for that particular command.'
        items:
          type: Command
        type: array
        required: false
      acceptTypes:
        description: 'A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item. If no acceptTypes are given, the contact will be shown for all items.'
        items:
          type: string
        type: array
        required: false
      displayName:
        description: The name to display for this contact.
        type: string
        required: false
      id:
        description: An ID for this contact. This is generated by the application and is treated as an opaque token.
        type: string
        required: false
      imageUrls:
        description: 'Set of image URLs to display for a contact. Most contacts will have a single image, but a "group" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client.'
        items:
          type: string
        type: array
        required: false
      kind:
        default: 'mirror#contact'
        description: 'The type of resource. This is always mirror#contact.'
        type: string
        required: false
      phoneNumber:
        description: 'Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number.'
        type: string
        required: false
      priority:
        description: Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities.
        type: integer
        required: false
      sharingFeatures:
        description: |-
          A list of sharing features that a contact can handle. Allowed values are:  
          - ADD_CAPTION
        items:
          type: string
        type: array
        required: false
      source:
        description: The ID of the application that created this contact. This is populated by the API
        type: string
        required: false
      speakableName:
        description: 'Name of this contact as it should be pronounced. If this contact''s name must be spoken as part of a voice disambiguation menu, this name is used as the expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic.'
        type: string
        required: false
      type:
        description: |-
          The type for this contact. This is used for sorting in UIs. Allowed values are:  
          - INDIVIDUAL - Represents a single person. This is the default. 
          - GROUP - Represents more than a single person.
        type: string
        required: false
  ContactsListResponse:
    description: A list of Contacts representing contacts. This is the response from the server to GET requests on the contacts collection.
    properties:
      items:
        description: Contact list.
        items:
          type: Contact
        type: array
        required: false
      kind:
        default: 'mirror#contacts'
        description: 'The type of resource. This is always mirror#contacts.'
        type: string
        required: false
  Location:
    description: A geographic location that can be associated with a timeline item.
    properties:
      accuracy:
        description: The accuracy of the location fix in meters.
        format: double
        type: number
        required: false
      address:
        description: The full address of the location.
        type: string
        required: false
      displayName:
        description: 'The name to be displayed. This may be a business name or a user-defined place, such as "Home".'
        type: string
        required: false
      id:
        description: The ID of the location.
        type: string
        required: false
      kind:
        default: 'mirror#location'
        description: 'The type of resource. This is always mirror#location.'
        type: string
        required: false
      latitude:
        description: 'The latitude, in degrees.'
        format: double
        type: number
        required: false
      longitude:
        description: 'The longitude, in degrees.'
        format: double
        type: number
        required: false
      timestamp:
        description: 'The time at which this location was captured, formatted according to RFC 3339.'
        format: rfc3339
        type: datetime
        required: false
  LocationsListResponse:
    description: A list of Locations. This is the response from the server to GET requests on the locations collection.
    properties:
      items:
        description: The list of locations.
        items:
          type: Location
        type: array
        required: false
      kind:
        default: 'mirror#locationsList'
        description: 'The type of resource. This is always mirror#locationsList.'
        type: string
        required: false
  MenuItem:
    description: A custom menu item that can be presented to the user by a timeline item.
    properties:
      action:
        description: |-
          Controls the behavior when the user picks the menu option. Allowed values are:  
          - CUSTOM - Custom action set by the service. When the user selects this menuItem, the API triggers a notification to your callbackUrl with the userActions.type set to CUSTOM and the userActions.payload set to the ID of this menu item. This is the default value. 
          - Built-in actions:  
          - REPLY - Initiate a reply to the timeline item using the voice recording UI. The creator attribute must be set in the timeline item for this menu to be available. 
          - REPLY_ALL - Same behavior as REPLY. The original timeline item's recipients will be added to the reply item. 
          - DELETE - Delete the timeline item. 
          - SHARE - Share the timeline item with the available contacts. 
          - READ_ALOUD - Read the timeline item's speakableText aloud; if this field is not set, read the text field; if none of those fields are set, this menu item is ignored. 
          - GET_MEDIA_INPUT - Allow users to provide media payloads to Glassware from a menu item (currently, only transcribed text from voice input is supported). Subscribe to notifications when users invoke this menu item to receive the timeline item ID. Retrieve the media from the timeline item in the payload property. 
          - VOICE_CALL - Initiate a phone call using the timeline item's creator.phoneNumber attribute as recipient. 
          - NAVIGATE - Navigate to the timeline item's location. 
          - TOGGLE_PINNED - Toggle the isPinned state of the timeline item. 
          - OPEN_URI - Open the payload of the menu item in the browser. 
          - PLAY_VIDEO - Open the payload of the menu item in the Glass video player. 
          - SEND_MESSAGE - Initiate sending a message to the timeline item's creator:  
          - If the creator.phoneNumber is set and Glass is connected to an Android phone, the message is an SMS. 
          - Otherwise, if the creator.email is set, the message is an email.
        type: string
        required: false
      contextual_command:
        description: The ContextualMenus.Command associated with this MenuItem (e.g. READ_ALOUD). The voice label for this command will be displayed in the voice menu and the touch label will be displayed in the touch menu. Note that the default menu value's display name will be overriden if you specify this property. Values that do not correspond to a ContextualMenus.Command name will be ignored.
        type: string
        required: false
      id:
        description: The ID for this menu item. This is generated by the application and is treated as an opaque token.
        type: string
        required: false
      payload:
        description: |-
          A generic payload whose meaning changes depending on this MenuItem's action.  
          - When the action is OPEN_URI, the payload is the URL of the website to view. 
          - When the action is PLAY_VIDEO, the payload is the streaming URL of the video 
          - When the action is GET_MEDIA_INPUT, the payload is the text transcription of a user's speech input
        type: string
        required: false
      removeWhenSelected:
        description: 'If set to true on a CUSTOM menu item, that item will be removed from the menu after it is selected.'
        type: boolean
        required: false
      values:
        description: 'For CUSTOM items, a list of values controlling the appearance of the menu item in each of its states. A value for the DEFAULT state must be provided. If the PENDING or CONFIRMED states are missing, they will not be shown.'
        items:
          type: MenuValue
        type: array
        required: false
  MenuValue:
    description: A single value that is part of a MenuItem.
    properties:
      displayName:
        description: 'The name to display for the menu item. If you specify this property for a built-in menu item, the default contextual voice command for that menu item is not shown.'
        type: string
        required: false
      iconUrl:
        description: URL of an icon to display with the menu item.
        type: string
        required: false
      state:
        description: |-
          The state that this value applies to. Allowed values are:  
          - DEFAULT - Default value shown when displayed in the menuItems list. 
          - PENDING - Value shown when the menuItem has been selected by the user but can still be cancelled. 
          - CONFIRMED - Value shown when the menuItem has been selected by the user and can no longer be cancelled.
        type: string
        required: false
  Notification:
    description: A notification delivered by the API.
    properties:
      collection:
        description: The collection that generated the notification.
        type: string
        required: false
      itemId:
        description: The ID of the item that generated the notification.
        type: string
        required: false
      operation:
        description: The type of operation that generated the notification.
        type: string
        required: false
      userActions:
        description: A list of actions taken by the user that triggered the notification.
        items:
          type: UserAction
        type: array
        required: false
      userToken:
        description: The user token provided by the service when it subscribed for notifications.
        type: string
        required: false
      verifyToken:
        description: The secret verify token provided by the service when it subscribed for notifications.
        type: string
        required: false
  NotificationConfig:
    description: Controls how notifications for a timeline item are presented to the user.
    properties:
      deliveryTime:
        description: The time at which the notification should be delivered.
        format: rfc3339
        type: datetime
        required: false
      level:
        description: |-
          Describes how important the notification is. Allowed values are:  
          - DEFAULT - Notifications of default importance. A chime will be played to alert users.
        type: string
        required: false
  Setting:
    description: A setting for Glass.
    properties:
      id:
        description: |-
          The setting's ID. The following IDs are valid:  
          - locale - The key to the user’s language/locale (BCP 47 identifier) that Glassware should use to render localized content.  
          - timezone - The key to the user’s current time zone region as defined in the tz database. Example: America/Los_Angeles.
        type: string
        required: false
      kind:
        default: 'mirror#setting'
        description: 'The type of resource. This is always mirror#setting.'
        type: string
        required: false
      value:
        description: 'The setting value, as a string.'
        type: string
        required: false
  Subscription:
    description: A subscription to events on a collection.
    properties:
      callbackUrl:
        description: 'The URL where notifications should be delivered (must start with https://).'
        type: string
        required: false
      collection:
        description: |-
          The collection to subscribe to. Allowed values are:  
          - timeline - Changes in the timeline including insertion, deletion, and updates. 
          - locations - Location updates. 
          - settings - Settings updates.
        type: string
        required: false
      id:
        description: The ID of the subscription.
        type: string
        required: false
      kind:
        default: 'mirror#subscription'
        description: 'The type of resource. This is always mirror#subscription.'
        type: string
        required: false
      notification:
        description: Container object for notifications. This is not populated in the Subscription resource.
        type: Notification
        required: false
      operation:
        description: |-
          A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are:  
          - UPDATE - The item has been updated. 
          - INSERT - A new item has been inserted. 
          - DELETE - The item has been deleted. 
          - MENU_ACTION - A custom menu item has been triggered by the user.
        items:
          type: string
        type: array
        required: false
      updated:
        description: 'The time at which this subscription was last modified, formatted according to RFC 3339.'
        format: rfc3339
        type: datetime
        required: false
      userToken:
        description: An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.
        type: string
        required: false
      verifyToken:
        description: A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.
        type: string
        required: false
  SubscriptionsListResponse:
    description: A list of Subscriptions. This is the response from the server to GET requests on the subscription collection.
    properties:
      items:
        description: The list of subscriptions.
        items:
          type: Subscription
        type: array
        required: false
      kind:
        default: 'mirror#subscriptionsList'
        description: 'The type of resource. This is always mirror#subscriptionsList.'
        type: string
        required: false
  TimelineItem:
    description: 'Each item in the user''s timeline is represented as a TimelineItem JSON structure, described below.'
    properties:
      attachments:
        description: |-
          A list of media attachments associated with this item. As a convenience, you can refer to attachments in your HTML payloads with the attachment or cid scheme. For example:  
          - attachment: <img src="attachment:attachment_index"> where attachment_index is the 0-based index of this array. 
          - cid: <img src="cid:attachment_id"> where attachment_id is the ID of the attachment.
        items:
          type: Attachment
        type: array
        required: false
      bundleId:
        description: The bundle ID for this item. Services can specify a bundleId to group many items together. They appear under a single top-level item on the device.
        type: string
        required: false
      canonicalUrl:
        description: A canonical URL pointing to the canonical/high quality version of the data represented by the timeline item.
        type: string
        required: false
      created:
        description: 'The time at which this item was created, formatted according to RFC 3339.'
        format: rfc3339
        type: datetime
        required: false
      creator:
        description: The user or group that created this item.
        type: Contact
        required: false
      displayTime:
        description: 'The time that should be displayed when this item is viewed in the timeline, formatted according to RFC 3339. This user''s timeline is sorted chronologically on display time, so this will also determine where the item is displayed in the timeline. If not set by the service, the display time defaults to the updated time.'
        format: rfc3339
        type: datetime
        required: false
      etag:
        description: ETag for this item.
        type: string
        required: false
      html:
        description: |-
          HTML content for this item. If both text and html are provided for an item, the html will be rendered in the timeline.
          Allowed HTML elements - You can use these elements in your timeline cards.
           
          - Headers: h1, h2, h3, h4, h5, h6 
          - Images: img 
          - Lists: li, ol, ul 
          - HTML5 semantics: article, aside, details, figure, figcaption, footer, header, nav, section, summary, time 
          - Structural: blockquote, br, div, hr, p, span 
          - Style: b, big, center, em, i, u, s, small, strike, strong, style, sub, sup 
          - Tables: table, tbody, td, tfoot, th, thead, tr  
          Blocked HTML elements: These elements and their contents are removed from HTML payloads.
           
          - Document headers: head, title 
          - Embeds: audio, embed, object, source, video 
          - Frames: frame, frameset 
          - Scripting: applet, script  
          Other elements: Any elements that aren't listed are removed, but their contents are preserved.
        type: string
        required: false
      id:
        description: The ID of the timeline item. This is unique within a user's timeline.
        type: string
        required: false
      inReplyTo:
        description: 'If this item was generated as a reply to another item, this field will be set to the ID of the item being replied to. This can be used to attach a reply to the appropriate conversation or post.'
        type: string
        required: false
      isBundleCover:
        description: |-
          Whether this item is a bundle cover.

          If an item is marked as a bundle cover, it will be the entry point to the bundle of items that have the same bundleId as that item. It will be shown only on the main timeline — not within the opened bundle.

          On the main timeline, items that are shown are:  
          - Items that have isBundleCover set to true  
          - Items that do not have a bundleId  In a bundle sub-timeline, items that are shown are:  
          - Items that have the bundleId in question AND isBundleCover set to false
        type: boolean
        required: false
      isDeleted:
        description: 'When true, indicates this item is deleted, and only the ID property is set.'
        type: boolean
        required: false
      isPinned:
        description: 'When true, indicates this item is pinned, which means it''s grouped alongside "active" items like navigation and hangouts, on the opposite side of the home screen from historical (non-pinned) timeline items. You can allow the user to toggle the value of this property with the TOGGLE_PINNED built-in menu item.'
        type: boolean
        required: false
      kind:
        default: 'mirror#timelineItem'
        description: 'The type of resource. This is always mirror#timelineItem.'
        type: string
        required: false
      location:
        description: The geographic location associated with this item.
        type: Location
        required: false
      menuItems:
        description: A list of menu items that will be presented to the user when this item is selected in the timeline.
        items:
          type: MenuItem
        type: array
        required: false
      notification:
        description: 'Controls how notifications for this item are presented on the device. If this is missing, no notification will be generated.'
        type: NotificationConfig
        required: false
      pinScore:
        description: 'For pinned items, this determines the order in which the item is displayed in the timeline, with a higher score appearing closer to the clock. Note: setting this field is currently not supported.'
        format: int32
        type: integer
        required: false
      recipients:
        description: A list of users or groups that this item has been shared with.
        items:
          type: Contact
        type: array
        required: false
      selfLink:
        description: A URL that can be used to retrieve this item.
        type: string
        required: false
      sourceItemId:
        description: Opaque string you can use to map a timeline item to data in your own service.
        type: string
        required: false
      speakableText:
        description: |-
          The speakable version of the content of this item. Along with the READ_ALOUD menu item, use this field to provide text that would be clearer when read aloud, or to provide extended information to what is displayed visually on Glass.

          Glassware should also specify the speakableType field, which will be spoken before this text in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification.
        type: string
        required: false
      speakableType:
        description: |-
          A speakable description of the type of this item. This will be announced to the user prior to reading the content of the item in cases where the additional context is useful, for example when the user requests that the item be read aloud following a notification.

          This should be a short, simple noun phrase such as "Email", "Text message", or "Daily Planet News Update".

          Glassware are encouraged to populate this field for every timeline item, even if the item does not contain speakableText or text so that the user can learn the type of the item without looking at the screen.
        type: string
        required: false
      text:
        description: Text content of this item.
        type: string
        required: false
      title:
        description: The title of this item.
        type: string
        required: false
      updated:
        description: 'The time at which this item was last modified, formatted according to RFC 3339.'
        format: rfc3339
        type: datetime
        required: false
  TimelineListResponse:
    description: A list of timeline items. This is the response from the server to GET requests on the timeline collection.
    properties:
      items:
        description: Items in the timeline.
        items:
          type: TimelineItem
        type: array
        required: false
      kind:
        default: 'mirror#timeline'
        description: 'The type of resource. This is always mirror#timeline.'
        type: string
        required: false
      nextPageToken:
        description: The next page token. Provide this as the pageToken parameter in the request to retrieve the next page of results.
        type: string
        required: false
  UserAction:
    description: Represents an action taken by the user that triggered a notification.
    properties:
      payload:
        description: |-
          An optional payload for the action.

          For actions of type CUSTOM, this is the ID of the custom menu item that was selected.
        type: string
        required: false
      type:
        description: |-
          The type of action. The value of this can be:  
          - SHARE - the user shared an item. 
          - REPLY - the user replied to an item. 
          - REPLY_ALL - the user replied to all recipients of an item. 
          - CUSTOM - the user selected a custom menu item on the timeline item. 
          - DELETE - the user deleted the item. 
          - PIN - the user pinned the item. 
          - UNPIN - the user unpinned the item. 
          - LAUNCH - the user initiated a voice command.  In the future, additional types may be added. UserActions with unrecognized types should be ignored.
        type: string
        required: false
  UserData:
    properties:
      key:
        type: string
        required: false
      value:
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
