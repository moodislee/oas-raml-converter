#%RAML 1.0
title: Replica Pool
version: v1beta1
baseUri: 'https://www.googleapis.com/replicapool/v1beta1/projects'
protocols:
  - HTTPS
description: The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
(oas-tags-definition):
  - name: pools
  - name: replicas
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/replicapool/v1beta1/rest'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): replicapool
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/compute/docs/replica-pool/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - 'https://www.googleapis.com/auth/ndev.cloudman'
        - 'https://www.googleapis.com/auth/ndev.cloudman.readonly'
        - 'https://www.googleapis.com/auth/replicapool'
        - 'https://www.googleapis.com/auth/replicapool.readonly'
    description: Oauth 2.0 authentication
'/{projectName}':
  displayName: '{projectName}'
  /zones:
    displayName: zones
    '/{zone}':
      displayName: '{zone}'
      /pools:
        displayName: pools
        '/{poolName}':
          displayName: '{poolName}'
          /updateTemplate:
            displayName: updateTemplate
            post:
              displayName: replicapool.pools.updatetemplate
              description: Update the template used by the pool.
              body:
                application/json:
                  type: Template
                  (oas-body-name): body
              responses:
                '200':
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/replicapool'
              (oas-tags):
                - pools
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /resize:
            displayName: resize
            post:
              displayName: replicapool.pools.resize
              description: 'Resize a pool. This is an asynchronous operation, and multiple overlapping resize requests can be made. Replica Pools will use the information from the last resize request.'
              responses:
                '200':
                  body:
                    application/json:
                      type: Pool
                  description: Successful response
              queryParameters:
                numReplicas:
                  description: 'The desired number of replicas to resize to. If this number is larger than the existing number of replicas, new replicas will be added. If the number is smaller, then existing replicas will be deleted.'
                  type: integer
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/replicapool'
              (oas-tags):
                - pools
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          /replicas:
            displayName: replicas
            '/{replicaName}':
              displayName: '{replicaName}'
              /restart:
                displayName: restart
                post:
                  displayName: replicapool.replicas.restart
                  description: Restarts a replica in a pool.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: Replica
                      description: Successful response
                  securedBy:
                    - Oauth2:
                        scopes:
                          - 'https://www.googleapis.com/auth/replicapool'
                  (oas-tags):
                    - replicas
                is:
                  - alt
                  - fields
                  - key
                  - oauthToken
                  - prettyPrint
                  - quotaUser
                  - userIp
              uriParameters:
                replicaName:
                  description: The name of the replica for this request.
                  required: true
                  type: string
              post:
                displayName: replicapool.replicas.delete
                description: Deletes a replica from the pool.
                body:
                  application/json:
                    type: ReplicasDeleteRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: Replica
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/replicapool'
                (oas-tags):
                  - replicas
              is:
                - alt
                - fields
                - key
                - oauthToken
                - prettyPrint
                - quotaUser
                - userIp
              get:
                displayName: replicapool.replicas.get
                description: Gets information about a specific replica.
                responses:
                  '200':
                    body:
                      application/json:
                        type: Replica
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/replicapool.readonly'
                (oas-tags):
                  - replicas
            get:
              displayName: replicapool.replicas.list
              description: Lists all replicas in a pool.
              responses:
                '200':
                  body:
                    application/json:
                      type: ReplicasListResponse
                  description: Successful response
              queryParameters:
                maxResults:
                  default: 500
                  description: 'Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default: 50)'
                  maximum: 1000
                  minimum: 0
                  type: integer
                pageToken:
                  description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
                  type: string
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/replicapool.readonly'
              (oas-tags):
                - replicas
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          uriParameters:
            poolName:
              description: The name of the replica pool for this request.
              required: true
              type: string
          post:
            displayName: replicapool.pools.delete
            description: Deletes a replica pool.
            body:
              application/json:
                type: PoolsDeleteRequest
                (oas-body-name): body
            responses:
              '200':
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/replicapool'
            (oas-tags):
              - pools
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          get:
            displayName: replicapool.pools.get
            description: Gets information about a single replica pool.
            responses:
              '200':
                body:
                  application/json:
                    type: Pool
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/replicapool.readonly'
            (oas-tags):
              - pools
        post:
          displayName: replicapool.pools.insert
          description: Inserts a new replica pool.
          body:
            application/json:
              type: Pool
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Pool
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/replicapool'
          (oas-tags):
            - pools
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: replicapool.pools.list
          description: List all replica pools.
          responses:
            '200':
              body:
                application/json:
                  type: PoolsListResponse
              description: Successful response
          queryParameters:
            maxResults:
              default: 500
              description: 'Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default: 50)'
              maximum: 1000
              minimum: 0
              type: integer
            pageToken:
              description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/replicapool.readonly'
          (oas-tags):
            - pools
types:
  AccessConfig:
    description: A Compute Engine network accessConfig. Identical to the accessConfig on corresponding Compute Engine resource.
    properties:
      name:
        description: Name of this access configuration.
        type: string
        required: false
      natIp:
        description: An external IP address associated with this instance.
        type: string
        required: false
      type:
        description: Type of this access configuration file. Currently only ONE_TO_ONE_NAT is supported.
        type: string
        required: false
  Action:
    description: An action that gets executed during initialization of the replicas.
    properties:
      commands:
        description: 'A list of commands to run, one per line. If any command fails, the whole action is considered a failure and no further actions are run. This also marks the virtual machine or replica as a failure.'
        items:
          type: string
        type: array
        required: false
      envVariables:
        description: A list of environment variables to use for the commands in this action.
        items:
          type: EnvVariable
        type: array
        required: false
      timeoutMilliSeconds:
        description: 'If an action''s commands on a particular replica do not finish in the specified timeoutMilliSeconds, the replica is considered to be in a FAILING state. No efforts are made to stop any processes that were spawned or created as the result of running the action''s commands. The default is the max allowed value, 1 hour (i.e. 3600000 milliseconds).'
        format: int32
        type: integer
        required: false
  DiskAttachment:
    description: Specifies how to attach a disk to a Replica.
    properties:
      deviceName:
        description: The device name of this disk.
        type: string
        required: false
      index:
        description: 'A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, this is assigned by the server.'
        type: integer
        required: false
  EnvVariable:
    description: An environment variable to set for an action.
    properties:
      hidden:
        description: 'Deprecated, do not use.'
        type: boolean
        required: false
      name:
        description: The name of the environment variable.
        type: string
        required: false
      value:
        description: The value of the variable.
        type: string
        required: false
  ExistingDisk:
    description: A pre-existing persistent disk that will be attached to every Replica in the Pool in READ_ONLY mode.
    properties:
      attachment:
        description: How the disk will be attached to the Replica.
        type: DiskAttachment
        required: false
      source:
        description: The name of the Persistent Disk resource. The Persistent Disk resource must be in the same zone as the Pool.
        type: string
        required: false
  HealthCheck:
    properties:
      checkIntervalSec:
        description: How often (in seconds) to make HTTP requests for this healthcheck. The default value is 5 seconds.
        format: int32
        type: integer
        required: false
      description:
        description: The description for this health check.
        type: string
        required: false
      healthyThreshold:
        description: The number of consecutive health check requests that need to succeed before the replica is considered healthy again. The default value is 2.
        format: int32
        type: integer
        required: false
      host:
        description: 'The value of the host header in the HTTP health check request. If left empty (default value), the localhost IP 127.0.0.1 will be used.'
        type: string
        required: false
      name:
        description: The name of this health check.
        type: string
        required: false
      path:
        description: 'The localhost request path to send this health check, in the format /path/to/use. For example, /healthcheck.'
        type: string
        required: false
      port:
        description: The TCP port for the health check requests.
        format: int32
        type: integer
        required: false
      timeoutSec:
        description: How long (in seconds) to wait before a timeout failure for this healthcheck. The default value is 5 seconds.
        format: int32
        type: integer
        required: false
      unhealthyThreshold:
        description: The number of consecutive health check requests that need to fail in order to consider the replica unhealthy. The default value is 2.
        format: int32
        type: integer
        required: false
  Label:
    description: A label to apply to this replica pool.
    properties:
      key:
        description: The key for this label.
        type: string
        required: false
      value:
        description: The value of this label.
        type: string
        required: false
  Metadata:
    description: A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.
    properties:
      fingerPrint:
        description: The fingerprint of the metadata. Required for updating the metadata entries for this instance.
        type: string
        required: false
      items:
        description: A list of metadata items.
        items:
          type: MetadataItem
        type: array
        required: false
  MetadataItem:
    description: 'A Compute Engine metadata item, defined as a key:value pair. Identical to the metadata on the corresponding Compute Engine resource.'
    properties:
      key:
        description: A metadata key.
        type: string
        required: false
      value:
        description: A metadata value.
        type: string
        required: false
  NetworkInterface:
    description: A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding Compute Engine resource.
    properties:
      accessConfigs:
        description: An array of configurations for this interface. This specifies how this interface is configured to interact with other network services.
        items:
          type: AccessConfig
        type: array
        required: false
      network:
        description: Name the Network resource to which this interface applies.
        type: string
        required: false
      networkIp:
        description: An optional IPV4 internal network address to assign to the instance for this network interface.
        type: string
        required: false
  NewDisk:
    description: A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
    properties:
      attachment:
        description: How the disk will be attached to the Replica.
        type: DiskAttachment
        required: false
      autoDelete:
        description: 'If true, then this disk will be deleted when the instance is deleted. The default value is true.'
        type: boolean
        required: false
      boot:
        description: 'If true, indicates that this is the root persistent disk.'
        type: boolean
        required: false
      initializeParams:
        description: Create the new disk using these parameters. The name of the disk will be <instance_name>-<four_random_charactersgt;.
        type: NewDiskInitializeParams
        required: false
  NewDiskInitializeParams:
    description: Initialization parameters for creating a new disk.
    properties:
      diskSizeGb:
        description: The size of the created disk in gigabytes.
        format: int64
        type: string
        facets:
          format: string
        required: false
      diskType:
        description: Name of the disk type resource describing which disk type to use to create the disk. For example 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'
        type: string
        required: false
      sourceImage:
        description: |-
          The name or fully-qualified URL of a source image to use to create this disk. If you provide a name of the source image, Replica Pool will look for an image with that name in your project. If you are specifying an image provided by Compute Engine, you will need to provide the full URL with the correct project, such as:
          http://www.googleapis.com/compute/v1/projects/debian-cloud/ global/images/debian-wheezy-7-vYYYYMMDD
        type: string
        required: false
  Pool:
    properties:
      autoRestart:
        description: Whether replicas in this pool should be restarted if they experience a failure. The default value is true.
        type: boolean
        required: false
      baseInstanceName:
        description: |-
          The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.

          If this is not specified by the user, a random base instance name is generated by the service.
        type: string
        required: false
      currentNumReplicas:
        description: '[Output Only] The current number of replicas in the pool.'
        format: int32
        type: integer
        required: false
      description:
        description: An optional description of the replica pool.
        type: string
        required: false
      healthChecks:
        description: 'Deprecated. Please use template[].healthChecks instead.'
        items:
          type: HealthCheck
        type: array
        required: false
      initialNumReplicas:
        description: The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.
        format: int32
        type: integer
        required: false
      labels:
        description: A list of labels to attach to this replica pool and all created virtual machines in this replica pool.
        items:
          type: Label
        type: array
        required: false
      name:
        description: 'The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.'
        type: string
        required: false
      numReplicas:
        description: Deprecated! Use initial_num_replicas instead.
        format: int32
        type: integer
        required: false
      resourceViews:
        description: The list of resource views that should be updated with all the replicas that are managed by this pool.
        items:
          type: string
        type: array
        required: false
      selfLink:
        description: '[Output Only] A self-link to the replica pool.'
        type: string
        required: false
      targetPool:
        description: 'Deprecated, please use target_pools instead.'
        type: string
        required: false
      targetPools:
        description: 'A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.'
        items:
          type: string
        type: array
        required: false
      template:
        description: 'The template to use when creating replicas in this pool. This template is used during initial instance creation of the pool, when growing the pool in size, or when a replica restarts.'
        type: Template
        required: false
      type:
        description: Deprecated! Do not set.
        type: string
        required: false
  PoolsDeleteRequest:
    properties:
      abandonInstances:
        description: 'If there are instances you would like to keep, you can specify them here. These instances won''t be deleted, but the associated replica objects will be removed.'
        items:
          type: string
        type: array
        required: false
  PoolsListResponse:
    properties:
      nextPageToken:
        type: string
        required: false
      resources:
        items:
          type: Pool
        type: array
        required: false
  Replica:
    description: 'An individual Replica within a Pool. Replicas are automatically created by the replica pool, using the template provided by the user. You cannot directly create replicas.'
    properties:
      name:
        description: '[Output Only] The name of the Replica object.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] The self-link of the Replica.'
        type: string
        required: false
      status:
        description: '[Output Only] Last known status of the Replica.'
        type: ReplicaStatus
        required: false
  ReplicaStatus:
    description: The current status of a Replica.
    properties:
      details:
        description: '[Output Only] Human-readable details about the current state of the replica'
        type: string
        required: false
      state:
        description: '[Output Only] The state of the Replica.'
        type: string
        required: false
      templateVersion:
        description: '[Output Only] The template used to build the replica.'
        type: string
        required: false
      vmLink:
        description: '[Output Only] Link to the virtual machine that this Replica represents.'
        type: string
        required: false
      vmStartTime:
        description: '[Output Only] The time that this Replica got to the RUNNING state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned.'
        type: string
        required: false
  ReplicasDeleteRequest:
    properties:
      abandonInstance:
        description: 'Whether the instance resource represented by this replica should be deleted or abandoned. If abandoned, the replica will be deleted but the virtual machine instance will remain. By default, this is set to false and the instance will be deleted along with the replica.'
        type: boolean
        required: false
  ReplicasListResponse:
    properties:
      nextPageToken:
        type: string
        required: false
      resources:
        items:
          type: Replica
        type: array
        required: false
  ServiceAccount:
    description: 'A Compute Engine service account, identical to the Compute Engine resource.'
    properties:
      email:
        description: 'The service account email address, for example: 123845678986@project.gserviceaccount.com'
        type: string
        required: false
      scopes:
        description: 'The list of OAuth2 scopes to obtain for the service account, for example: https://www.googleapis.com/auth/devstorage.full_control'
        items:
          type: string
        type: array
        required: false
  Tag:
    description: 'A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.'
    properties:
      fingerPrint:
        description: The fingerprint of the tag. Required for updating the list of tags.
        type: string
        required: false
      items:
        description: Items contained in this tag.
        items:
          type: string
        type: array
        required: false
  Template:
    description: The template used for creating replicas in the pool.
    properties:
      action:
        description: 'An action to run during initialization of your replicas. An action is run as shell commands which are executed one after the other in the same bash shell, so any state established by one command is inherited by later commands.'
        type: Action
        required: false
      healthChecks:
        description: A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.
        items:
          type: HealthCheck
        type: array
        required: false
      version:
        description: 'A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.'
        type: string
        required: false
      vmParams:
        description: The virtual machine parameters to use for creating replicas. You can define settings such as the machine type and the image of replicas in this pool. This is required if replica type is SMART_VM.
        type: VmParams
        required: false
  VmParams:
    description: Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.
    properties:
      baseInstanceName:
        description: Deprecated. Please use baseInstanceName instead.
        type: string
        required: false
      canIpForward:
        description: 'Enables IP Forwarding, which allows this instance to receive packets destined for a different IP address, and send packets with a different source IP. See IP Forwarding for more information.'
        type: boolean
        required: false
      description:
        description: An optional textual description of the instance.
        type: string
        required: false
      disksToAttach:
        description: A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.
        items:
          type: ExistingDisk
        type: array
        required: false
      disksToCreate:
        description: 'A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.'
        items:
          type: NewDisk
        type: array
        required: false
      machineType:
        description: The machine type for this instance. The resource name (e.g. n1-standard-1).
        type: string
        required: false
      metadata:
        description: The metadata key/value pairs assigned to this instance.
        type: Metadata
        required: false
      networkInterfaces:
        description: 'A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT.'
        items:
          type: NetworkInterface
        type: array
        required: false
      onHostMaintenance:
        type: string
        required: false
      serviceAccounts:
        description: A list of Service Accounts to enable for this instance.
        items:
          type: ServiceAccount
        type: array
        required: false
      tags:
        description: A list of tags to apply to the Google Compute Engine instance to identify resources.
        type: Tag
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
