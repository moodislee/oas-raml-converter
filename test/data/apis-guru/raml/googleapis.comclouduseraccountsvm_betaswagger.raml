#%RAML 1.0
title: Cloud User Accounts
version: vm_beta
baseUri: 'https://www.googleapis.com/clouduseraccounts/vm_beta/projects'
protocols:
  - HTTPS
description: Creates and manages users and groups for accessing Google Compute Engine virtual machines.
(oas-tags-definition):
  - name: globalAccountsOperations
  - name: groups
  - name: linux
  - name: users
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/clouduseraccounts/vm_beta/rest'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): clouduseraccounts
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/compute/docs/access/user-accounts/api/latest/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - 'https://www.googleapis.com/auth/cloud.useraccounts'
        - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
    description: Oauth 2.0 authentication
'/{project}':
  displayName: '{project}'
  /global:
    displayName: global
    /operations:
      displayName: operations
      '/{operation}':
        displayName: '{operation}'
        uriParameters:
          operation:
            description: Name of the Operations resource to delete.
            required: true
            type: string
        get:
          displayName: clouduseraccounts.globalAccountsOperations.get
          description: Retrieves the specified operation resource.
          responses:
            '200':
              body:
                application/json:
                  type: Operation
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
          (oas-tags):
            - globalAccountsOperations
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        delete:
          displayName: clouduseraccounts.globalAccountsOperations.delete
          description: Deletes the specified operation resource.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts'
          (oas-tags):
            - globalAccountsOperations
      get:
        displayName: clouduseraccounts.globalAccountsOperations.list
        description: Retrieves the list of operation resources contained within the specified project.
        responses:
          '200':
            body:
              application/json:
                type: OperationList
            description: Successful response
        queryParameters:
          filter:
            description: |-
              Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.

              The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

              For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.

              Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.

              The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
            type: string
          maxResults:
            default: 500
            description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.'
            maximum: 500
            minimum: 0
            type: integer
          orderBy:
            description: |-
              Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

              You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

              Currently, only sorting by name or creationTimestamp desc is supported.
            type: string
          pageToken:
            description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
        (oas-tags):
          - globalAccountsOperations
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    /users:
      displayName: users
      get:
        displayName: clouduseraccounts.users.list
        description: Retrieves a list of users contained within the specified project.
        responses:
          '200':
            body:
              application/json:
                type: UserList
            description: Successful response
        queryParameters:
          filter:
            description: |-
              Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.

              The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

              For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.

              Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.

              The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
            type: string
          maxResults:
            default: 500
            description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.'
            maximum: 500
            minimum: 0
            type: integer
          orderBy:
            description: |-
              Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

              You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

              Currently, only sorting by name or creationTimestamp desc is supported.
            type: string
          pageToken:
            description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: clouduseraccounts.users.insert
        description: Creates a User resource in the specified project using the data included in the request.
        body:
          application/json:
            type: User
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Operation
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud.useraccounts'
        (oas-tags):
          - users
      '/{user}':
        displayName: '{user}'
        uriParameters:
          user:
            description: Name of the user resource to return.
            required: true
            type: string
        delete:
          displayName: clouduseraccounts.users.delete
          description: Deletes the specified User resource.
          responses:
            '200':
              body:
                application/json:
                  type: Operation
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        /removePublicKey:
          displayName: removePublicKey
          post:
            displayName: clouduseraccounts.users.removePublicKey
            description: Removes the specified public key from the user.
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            queryParameters:
              fingerprint:
                description: 'The fingerprint of the public key to delete. Public keys are identified by their fingerprint, which is defined by RFC4716 to be the MD5 digest of the public key.'
                required: true
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/cloud.useraccounts'
            (oas-tags):
              - users
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        /addPublicKey:
          displayName: addPublicKey
          post:
            displayName: clouduseraccounts.users.addPublicKey
            description: Adds a public key to the specified User resource with the data included in the request.
            body:
              application/json:
                type: PublicKey
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/cloud.useraccounts'
            (oas-tags):
              - users
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        get:
          displayName: clouduseraccounts.users.get
          description: Returns the specified User resource.
          responses:
            '200':
              body:
                application/json:
                  type: User
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
          (oas-tags):
            - users
    /groups:
      displayName: groups
      get:
        displayName: clouduseraccounts.groups.list
        description: Retrieves the list of groups contained within the specified project.
        responses:
          '200':
            body:
              application/json:
                type: GroupList
            description: Successful response
        queryParameters:
          filter:
            description: |-
              Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.

              The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

              For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.

              Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.

              The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
            type: string
          maxResults:
            default: 500
            description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.'
            maximum: 500
            minimum: 0
            type: integer
          orderBy:
            description: |-
              Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

              You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

              Currently, only sorting by name or creationTimestamp desc is supported.
            type: string
          pageToken:
            description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
        (oas-tags):
          - groups
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{groupName}':
        displayName: '{groupName}'
        uriParameters:
          groupName:
            description: Name of the Group resource to return.
            required: true
            type: string
        delete:
          displayName: clouduseraccounts.groups.delete
          description: Deletes the specified Group resource.
          responses:
            '200':
              body:
                application/json:
                  type: Operation
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts'
          (oas-tags):
            - groups
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        /addMember:
          displayName: addMember
          post:
            displayName: clouduseraccounts.groups.addMember
            description: Adds users to the specified group.
            body:
              application/json:
                type: GroupsAddMemberRequest
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/cloud.useraccounts'
            (oas-tags):
              - groups
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        /removeMember:
          displayName: removeMember
          post:
            displayName: clouduseraccounts.groups.removeMember
            description: Removes users from the specified group.
            body:
              application/json:
                type: GroupsRemoveMemberRequest
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: Operation
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/cloud.useraccounts'
            (oas-tags):
              - groups
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
        get:
          displayName: clouduseraccounts.groups.get
          description: Returns the specified Group resource.
          responses:
            '200':
              body:
                application/json:
                  type: Group
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
          (oas-tags):
            - groups
      post:
        displayName: clouduseraccounts.groups.insert
        description: Creates a Group resource in the specified project using the data included in the request.
        body:
          application/json:
            type: Group
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Operation
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud.useraccounts'
        (oas-tags):
          - groups
  /zones:
    displayName: zones
    '/{zone}':
      displayName: '{zone}'
      /linuxAccountViews:
        displayName: linuxAccountViews
        post:
          displayName: clouduseraccounts.linux.getLinuxAccountViews
          description: Retrieves a list of user accounts for an instance within a specific project.
          responses:
            '200':
              body:
                application/json:
                  type: LinuxGetLinuxAccountViewsResponse
              description: Successful response
          queryParameters:
            instance:
              description: The fully-qualified URL of the virtual machine requesting the views.
              required: true
              type: string
            filter:
              description: |-
                Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.

                The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

                For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.

                Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.

                The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
              type: string
            maxResults:
              default: 500
              description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.'
              maximum: 500
              minimum: 0
              type: integer
            orderBy:
              description: |-
                Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

                You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

                Currently, only sorting by name or creationTimestamp desc is supported.
              type: string
            pageToken:
              description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
          (oas-tags):
            - linux
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /authorizedKeysView:
        displayName: authorizedKeysView
        '/{user}':
          displayName: '{user}'
          uriParameters:
            user:
              description: The user account for which you want to get a list of authorized public keys.
              required: true
              type: string
          post:
            displayName: clouduseraccounts.linux.getAuthorizedKeysView
            description: Returns a list of authorized public keys for a specific user account.
            responses:
              '200':
                body:
                  application/json:
                    type: LinuxGetAuthorizedKeysViewResponse
                description: Successful response
            queryParameters:
              instance:
                description: The fully-qualified URL of the virtual machine requesting the view.
                required: true
                type: string
              login:
                description: Whether the view was requested as part of a user-initiated login.
                type: boolean
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            (oas-tags):
              - linux
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
types:
  AuthorizedKeysView:
    description: A list of authorized public keys for a user account.
    properties:
      keys:
        description: '[Output Only] The list of authorized public keys in SSH format.'
        items:
          type: string
        type: array
        required: false
      sudoer:
        description: '[Output Only] Whether the user has the ability to elevate on the instance that requested the authorized keys.'
        type: boolean
        required: false
  Group:
    description: A Group resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
        required: false
      description:
        description: An optional textual description of the resource; provided by the client when the resource is created.
        type: string
        required: false
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      kind:
        default: 'clouduseraccounts#group'
        description: '[Output Only] Type of the resource. Always clouduseraccounts#group for groups.'
        type: string
        required: false
      members:
        description: '[Output Only] A list of URLs to User resources who belong to the group. Users may only be members of groups in the same project.'
        items:
          type: string
        type: array
        required: false
      name:
        description: Name of the resource; provided by the client when the resource is created.
        pattern: '[a-z][-a-z0-9_]{0,31}'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server defined URL for the resource.'
        type: string
        required: false
  GroupList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
        required: false
      items:
        description: '[Output Only] A list of Group resources.'
        items:
          type: Group
        type: array
        required: false
      kind:
        default: 'clouduseraccounts#groupList'
        description: '[Output Only] Type of resource. Always clouduseraccounts#groupList for lists of groups.'
        type: string
        required: false
      nextPageToken:
        description: '[Output Only] A token used to continue a truncated list request.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server defined URL for this resource.'
        type: string
        required: false
  GroupsAddMemberRequest:
    properties:
      users:
        description: Fully-qualified URLs of the User resources to add.
        items:
          type: string
        type: array
        required: false
  GroupsRemoveMemberRequest:
    properties:
      users:
        description: Fully-qualified URLs of the User resources to remove.
        items:
          type: string
        type: array
        required: false
  LinuxAccountViews:
    description: A list of all Linux accounts for this project. This API is only used by Compute Engine virtual machines to get information about user accounts for a project or instance. Linux resources are read-only views into users and groups managed by the Compute Engine Accounts API.
    properties:
      groupViews:
        description: '[Output Only] A list of all groups within a project.'
        items:
          type: LinuxGroupView
        type: array
        required: false
      kind:
        default: 'clouduseraccounts#linuxAccountViews'
        description: '[Output Only] Type of the resource. Always clouduseraccounts#linuxAccountViews for Linux resources.'
        type: string
        required: false
      userViews:
        description: '[Output Only] A list of all users within a project.'
        items:
          type: LinuxUserView
        type: array
        required: false
  LinuxGetAuthorizedKeysViewResponse:
    properties:
      resource:
        description: '[Output Only] A list of authorized public keys for a user.'
        type: AuthorizedKeysView
        required: false
  LinuxGetLinuxAccountViewsResponse:
    properties:
      resource:
        description: '[Output Only] A list of authorized user accounts and groups.'
        type: LinuxAccountViews
        required: false
  LinuxGroupView:
    description: A detailed view of a Linux group.
    properties:
      gid:
        description: '[Output Only] The Group ID.'
        type: integer
        required: false
      groupName:
        description: '[Output Only] Group name.'
        type: string
        required: false
      members:
        description: '[Output Only] List of user accounts that belong to the group.'
        items:
          type: string
        type: array
        required: false
  LinuxUserView:
    description: A detailed view of a Linux user account.
    properties:
      gecos:
        description: '[Output Only] The GECOS (user information) entry for this account.'
        type: string
        required: false
      gid:
        description: '[Output Only] User''s default group ID.'
        type: integer
        required: false
      homeDirectory:
        description: '[Output Only] The path to the home directory for this account.'
        type: string
        required: false
      shell:
        description: '[Output Only] The path to the login shell for this account.'
        type: string
        required: false
      uid:
        description: '[Output Only] User ID.'
        type: integer
        required: false
      username:
        description: '[Output Only] The username of the account.'
        type: string
        required: false
  Operation:
    description: 'An Operation resource, used to manage asynchronous API requests.'
    properties:
      clientOperationId:
        description: '[Output Only] Reserved for future use.'
        type: string
        required: false
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
        required: false
      description:
        description: '[Output Only] A textual description of the operation, which is set when the operation is created.'
        type: string
        required: false
      endTime:
        description: '[Output Only] The time that this operation was completed. This value is in RFC3339 text format.'
        type: string
        required: false
      error:
        description: '[Output Only] If errors are generated during processing of the operation, this field will be populated.'
        properties:
          errors:
            description: '[Output Only] The array of errors encountered while processing this operation.'
            items:
              properties:
                code:
                  description: '[Output Only] The error type identifier for this error.'
                  type: string
                  required: false
                location:
                  description: '[Output Only] Indicates the field in the request that caused the error. This property is optional.'
                  type: string
                  required: false
                message:
                  description: '[Output Only] An optional, human-readable error message.'
                  type: string
                  required: false
              type: object
            type: array
            required: false
        type: object
        required: false
      httpErrorMessage:
        description: '[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND.'
        type: string
        required: false
      httpErrorStatusCode:
        description: '[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found.'
        format: int32
        type: integer
        required: false
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      insertTime:
        description: '[Output Only] The time that this operation was requested. This value is in RFC3339 text format.'
        type: string
        required: false
      kind:
        default: 'clouduseraccounts#operation'
        description: '[Output Only] Type of the resource. Always compute#operation for Operation resources.'
        type: string
        required: false
      name:
        description: '[Output Only] Name of the resource.'
        type: string
        required: false
      operationType:
        description: '[Output Only] The type of operation, such as insert, update, or delete, and so on.'
        type: string
        required: false
      progress:
        description: '[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.'
        format: int32
        type: integer
        required: false
      region:
        description: '[Output Only] The URL of the region where the operation resides. Only available when performing regional operations.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
        required: false
      startTime:
        description: '[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.'
        type: string
        required: false
      status:
        description: '[Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or DONE.'
        enum:
          - DONE
          - PENDING
          - RUNNING
        type: string
        required: false
      statusMessage:
        description: '[Output Only] An optional textual description of the current status of the operation.'
        type: string
        required: false
      targetId:
        description: '[Output Only] The unique target ID, which identifies a specific incarnation of the target resource.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      targetLink:
        description: '[Output Only] The URL of the resource that the operation modifies.'
        type: string
        required: false
      user:
        description: '[Output Only] User who requested the operation, for example: user@example.com.'
        type: string
        required: false
      warnings:
        description: '[Output Only] If warning messages are generated during processing of the operation, this field will be populated.'
        items:
          properties:
            code:
              description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - INJECTED_KERNELS_DEPRECATED
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_NOT_DELETED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNREACHABLE
              type: string
              required: false
            data:
              description: |-
                [Output Only] Metadata about this warning in key: value format. For example:
                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                    type: string
                    required: false
                  value:
                    description: '[Output Only] A warning data value corresponding to the key.'
                    type: string
                    required: false
                type: object
              type: array
              required: false
            message:
              description: '[Output Only] A human-readable description of the warning code.'
              type: string
              required: false
          type: object
        type: array
        required: false
      zone:
        description: '[Output Only] The URL of the zone where the operation resides. Only available when performing per-zone operations.'
        type: string
        required: false
  OperationList:
    description: Contains a list of Operation resources.
    properties:
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        type: string
        required: false
      items:
        description: '[Output Only] A list of Operation resources.'
        items:
          type: Operation
        type: array
        required: false
      kind:
        default: 'clouduseraccounts#operationList'
        description: '[Output Only] Type of resource. Always compute#operations for Operations resource.'
        type: string
        required: false
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
        required: false
  PublicKey:
    description: A public key for authenticating to guests.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
        required: false
      description:
        description: An optional textual description of the resource; provided by the client when the resource is created.
        type: string
        required: false
      expirationTimestamp:
        description: 'Optional expiration timestamp. If provided, the timestamp must be in RFC3339 text format. If not provided, the public key never expires.'
        type: string
        required: false
      fingerprint:
        description: '[Output Only] The fingerprint of the key is defined by RFC4716 to be the MD5 digest of the public key.'
        type: string
        required: false
      key:
        description: 'Public key text in SSH format, defined by RFC4253 section 6.6.'
        type: string
        required: false
  User:
    description: A User resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
        required: false
      description:
        description: An optional textual description of the resource; provided by the client when the resource is created.
        type: string
        required: false
      groups:
        description: '[Output Only] A list of URLs to Group resources who contain the user. Users are only members of groups in the same project.'
        items:
          type: string
        type: array
        required: false
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        format: uint64
        type: string
        facets:
          format: string
        required: false
      kind:
        default: 'clouduseraccounts#user'
        description: '[Output Only] Type of the resource. Always clouduseraccounts#user for users.'
        type: string
        required: false
      name:
        description: Name of the resource; provided by the client when the resource is created.
        pattern: '[a-z][-a-z0-9_]{0,31}'
        type: string
        required: false
      owner:
        description: 'Email address of account''s owner. This account will be validated to make sure it exists. The email can belong to any domain, but it must be tied to a Google account.'
        type: string
        required: false
      publicKeys:
        description: '[Output Only] Public keys that this user may use to login.'
        items:
          type: PublicKey
        type: array
        required: false
      selfLink:
        description: '[Output Only] Server defined URL for the resource.'
        type: string
        required: false
  UserList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
        required: false
      items:
        description: '[Output Only] A list of User resources.'
        items:
          type: User
        type: array
        required: false
      kind:
        default: 'clouduseraccounts#userList'
        description: '[Output Only] Type of resource. Always clouduseraccounts#userList for lists of users.'
        type: string
        required: false
      nextPageToken:
        description: '[Output Only] A token used to continue a truncated list request.'
        type: string
        required: false
      selfLink:
        description: '[Output Only] Server defined URL for this resource.'
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
