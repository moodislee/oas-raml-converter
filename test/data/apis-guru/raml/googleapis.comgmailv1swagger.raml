#%RAML 1.0
title: Gmail
version: v1
baseUri: 'https://www.googleapis.com/gmail/v1/users'
protocols:
  - HTTPS
description: Access Gmail mailboxes including sending user email.
(oas-tags-definition):
  - name: users
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_gmail_64dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): gmail
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/gmail/api/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://mail.google.com/'
        - 'https://www.googleapis.com/auth/gmail.compose'
        - 'https://www.googleapis.com/auth/gmail.insert'
        - 'https://www.googleapis.com/auth/gmail.labels'
        - 'https://www.googleapis.com/auth/gmail.metadata'
        - 'https://www.googleapis.com/auth/gmail.modify'
        - 'https://www.googleapis.com/auth/gmail.readonly'
        - 'https://www.googleapis.com/auth/gmail.send'
        - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - 'https://www.googleapis.com/auth/gmail.settings.sharing'
    description: Oauth 2.0 authentication
'/{userId}':
  displayName: '{userId}'
  /settings:
    displayName: settings
    /filters:
      displayName: filters
      post:
        displayName: gmail.users.settings.filters.create
        description: Creates a filter.
        body:
          application/json:
            type: Filter
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Filter
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{id}':
        displayName: '{id}'
        uriParameters:
          id:
            description: The ID of the filter to be fetched.
            required: true
            type: string
        delete:
          displayName: gmail.users.settings.filters.delete
          description: Deletes a filter.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.basic'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: gmail.users.settings.filters.get
          description: Gets a filter.
          responses:
            '200':
              body:
                application/json:
                  type: Filter
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.basic'
          (oas-tags):
            - users
      get:
        displayName: gmail.users.settings.filters.list
        description: Lists the message filters of a Gmail user.
        responses:
          '200':
            body:
              application/json:
                type: ListFiltersResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
    /forwardingAddresses:
      displayName: forwardingAddresses
      get:
        displayName: gmail.users.settings.forwardingAddresses.list
        description: Lists the forwarding addresses for the specified account.
        responses:
          '200':
            body:
              application/json:
                type: ListForwardingAddressesResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: gmail.users.settings.forwardingAddresses.create
        description: 'Creates a forwarding address. If ownership verification is required, a message will be sent to the recipient and the resource''s verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted.'
        body:
          application/json:
            type: ForwardingAddress
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: ForwardingAddress
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.sharing'
        (oas-tags):
          - users
      '/{forwardingEmail}':
        displayName: '{forwardingEmail}'
        uriParameters:
          forwardingEmail:
            description: The forwarding address to be retrieved.
            required: true
            type: string
        delete:
          displayName: gmail.users.settings.forwardingAddresses.delete
          description: Deletes the specified forwarding address and revokes any verification that may have been required.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: gmail.users.settings.forwardingAddresses.get
          description: Gets the specified forwarding address.
          responses:
            '200':
              body:
                application/json:
                  type: ForwardingAddress
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.basic'
          (oas-tags):
            - users
    /imap:
      displayName: imap
      get:
        displayName: gmail.users.settings.getImap
        description: Gets IMAP settings.
        responses:
          '200':
            body:
              application/json:
                type: ImapSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      put:
        displayName: gmail.users.settings.updateImap
        description: Updates IMAP settings.
        body:
          application/json:
            type: ImapSettings
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: ImapSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
    /pop:
      displayName: pop
      get:
        displayName: gmail.users.settings.getPop
        description: Gets POP settings.
        responses:
          '200':
            body:
              application/json:
                type: PopSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      put:
        displayName: gmail.users.settings.updatePop
        description: Updates POP settings.
        body:
          application/json:
            type: PopSettings
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: PopSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
    /sendAs:
      displayName: sendAs
      get:
        displayName: gmail.users.settings.sendAs.list
        description: Lists the send-as aliases for the specified account. The result includes the primary send-as address associated with the account as well as any custom "from" aliases.
        responses:
          '200':
            body:
              application/json:
                type: ListSendAsResponse
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: gmail.users.settings.sendAs.create
        description: 'Creates a custom "from" send-as alias. If an SMTP MSA is specified, Gmail will attempt to connect to the SMTP service to validate the configuration before creating the alias. If ownership verification is required for the alias, a message will be sent to the email address and the resource''s verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.'
        body:
          application/json:
            type: SendAs
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: SendAs
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.sharing'
        (oas-tags):
          - users
      '/{sendAsEmail}':
        displayName: '{sendAsEmail}'
        uriParameters:
          sendAsEmail:
            description: The send-as alias to be updated.
            required: true
            type: string
        delete:
          displayName: gmail.users.settings.sendAs.delete
          description: Deletes the specified send-as alias. Revokes any verification that may have been required for using it.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: gmail.users.settings.sendAs.get
          description: Gets the specified send-as alias. Fails with an HTTP 404 error if the specified address is not a member of the collection.
          responses:
            '200':
              body:
                application/json:
                  type: SendAs
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.basic'
          (oas-tags):
            - users
        patch:
          displayName: gmail.users.settings.sendAs.patch
          description: 'Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. This method supports patch semantics.'
          body:
            application/json:
              type: SendAs
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: SendAs
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          (oas-tags):
            - users
        put:
          displayName: gmail.users.settings.sendAs.update
          description: 'Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.'
          body:
            application/json:
              type: SendAs
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: SendAs
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          (oas-tags):
            - users
        /verify:
          displayName: verify
          post:
            displayName: gmail.users.settings.sendAs.verify
            description: Sends a verification email to the specified send-as alias address. The verification status must be pending.
            responses:
              '200':
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/gmail.settings.sharing'
            (oas-tags):
              - users
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
    /autoForwarding:
      displayName: autoForwarding
      put:
        displayName: gmail.users.settings.updateAutoForwarding
        description: Updates the auto-forwarding setting for the specified account. A verified forwarding address must be specified when auto-forwarding is enabled.
        body:
          application/json:
            type: AutoForwarding
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: AutoForwarding
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.sharing'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      get:
        displayName: gmail.users.settings.getAutoForwarding
        description: Gets the auto-forwarding setting for the specified account.
        responses:
          '200':
            body:
              application/json:
                type: AutoForwarding
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
    /vacation:
      displayName: vacation
      get:
        displayName: gmail.users.settings.getVacation
        description: Gets vacation responder settings.
        responses:
          '200':
            body:
              application/json:
                type: VacationSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      put:
        displayName: gmail.users.settings.updateVacation
        description: Updates vacation responder settings.
        body:
          application/json:
            type: VacationSettings
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: VacationSettings
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.settings.basic'
        (oas-tags):
          - users
  /watch:
    displayName: watch
    post:
      displayName: gmail.users.watch
      description: Set up or update a push notification watch on the given user mailbox.
      body:
        application/json:
          type: WatchRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: WatchResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /drafts:
    displayName: drafts
    get:
      displayName: gmail.users.drafts.list
      description: Lists the drafts in the user's mailbox.
      responses:
        '200':
          body:
            application/json:
              type: ListDraftsResponse
          description: Successful response
      queryParameters:
        includeSpamTrash:
          default: false
          description: Include drafts from SPAM and TRASH in the results.
          type: boolean
        maxResults:
          default: 100
          description: Maximum number of drafts to return.
          type: integer
        pageToken:
          description: Page token to retrieve a specific page of results in the list.
          type: string
        q:
          description: 'Only return draft messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    /send:
      displayName: send
      post:
        displayName: gmail.users.drafts.send
        description: 'Sends the specified, existing draft to the recipients in the To, Cc, and Bcc headers.'
        body:
          application/json:
            type: Draft
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Message
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: The ID of the draft to delete.
          required: true
          type: string
      get:
        displayName: gmail.users.drafts.get
        description: Gets the specified draft.
        responses:
          '200':
            body:
              application/json:
                type: Draft
            description: Successful response
        queryParameters:
          format:
            default: full
            description: The format to return the draft in.
            enum:
              - full
              - metadata
              - minimal
              - raw
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.readonly'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      put:
        displayName: gmail.users.drafts.update
        description: Replaces a draft's content.
        body:
          application/json:
            type: Draft
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Draft
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
      delete:
        displayName: gmail.users.drafts.delete
        description: Immediately and permanently deletes the specified draft. Does not simply trash it.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
    post:
      displayName: gmail.users.drafts.create
      description: Creates a new draft with the DRAFT label.
      body:
        application/json:
          type: Draft
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Draft
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.modify'
      (oas-tags):
        - users
  /history:
    displayName: history
    get:
      displayName: gmail.users.history.list
      description: Lists the history of all changes to the given mailbox. History results are returned in chronological order (increasing historyId).
      responses:
        '200':
          body:
            application/json:
              type: ListHistoryResponse
          description: Successful response
      queryParameters:
        labelId:
          description: Only return messages with a label matching the ID.
          type: string
        maxResults:
          default: 100
          description: The maximum number of history records to return.
          type: integer
        pageToken:
          description: Page token to retrieve a specific page of results in the list.
          type: string
        startHistoryId:
          description: 'Required. Returns history records after the specified startHistoryId. The supplied startHistoryId should be obtained from the historyId of a message, thread, or previous list response. History IDs increase chronologically but are not contiguous with random gaps in between valid IDs. Supplying an invalid or out of date startHistoryId typically returns an HTTP 404 error code. A historyId is typically valid for at least a week, but in some rare circumstances may be valid for only a few hours. If you receive an HTTP 404 error response, your application should perform a full sync. If you receive no nextPageToken in the response, there are no updates to retrieve and you can store the returned historyId for a future request.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /labels:
    displayName: labels
    post:
      displayName: gmail.users.labels.create
      description: Creates a new label.
      body:
        application/json:
          type: Label
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Label
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.modify'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: The ID of the label to update.
          required: true
          type: string
      get:
        displayName: gmail.users.labels.get
        description: Gets the specified label.
        responses:
          '200':
            body:
              application/json:
                type: Label
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.readonly'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      put:
        displayName: gmail.users.labels.update
        description: Updates the specified label.
        body:
          application/json:
            type: Label
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Label
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
      delete:
        displayName: gmail.users.labels.delete
        description: Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
      patch:
        displayName: gmail.users.labels.patch
        description: Updates the specified label. This method supports patch semantics.
        body:
          application/json:
            type: Label
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Label
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
    get:
      displayName: gmail.users.labels.list
      description: Lists all labels in the user's mailbox.
      responses:
        '200':
          body:
            application/json:
              type: ListLabelsResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
  /messages:
    displayName: messages
    post:
      displayName: gmail.users.messages.insert
      description: 'Directly inserts a message into only this user''s mailbox similar to IMAP APPEND, bypassing most scanning and classification. Does not send a message.'
      body:
        application/json:
          type: Message
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Message
          description: Successful response
      queryParameters:
        deleted:
          default: false
          description: Mark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.
          type: boolean
        internalDateSource:
          default: receivedTime
          description: Source for Gmail's internal date of the message.
          enum:
            - dateHeader
            - receivedTime
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.modify'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    /import:
      displayName: import
      post:
        displayName: gmail.users.messages.import
        description: 'Imports a message into only this user''s mailbox, with standard email delivery scanning and classification similar to receiving via SMTP. Does not send a message.'
        body:
          application/json:
            type: Message
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Message
            description: Successful response
        queryParameters:
          deleted:
            default: false
            description: Mark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.
            type: boolean
          internalDateSource:
            default: dateHeader
            description: Source for Gmail's internal date of the message.
            enum:
              - dateHeader
              - receivedTime
            type: string
          neverMarkSpam:
            default: false
            description: Ignore the Gmail spam classifier decision and never mark this email as SPAM in the mailbox.
            type: boolean
          processForCalendar:
            default: false
            description: Process calendar invites in the email and add any extracted meetings to the Google Calendar for this user.
            type: boolean
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.modify'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: The ID of the message to retrieve.
          required: true
          type: string
      delete:
        displayName: gmail.users.messages.delete
        description: Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer messages.trash instead.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://mail.google.com/'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      /modify:
        displayName: modify
        post:
          displayName: gmail.users.messages.modify
          description: Modifies the labels on the specified message.
          body:
            application/json:
              type: ModifyMessageRequest
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Message
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /untrash:
        displayName: untrash
        post:
          displayName: gmail.users.messages.untrash
          description: Removes the specified message from the trash.
          responses:
            '200':
              body:
                application/json:
                  type: Message
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /trash:
        displayName: trash
        post:
          displayName: gmail.users.messages.trash
          description: Moves the specified message to the trash.
          responses:
            '200':
              body:
                application/json:
                  type: Message
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      get:
        displayName: gmail.users.messages.get
        description: Gets the specified message.
        responses:
          '200':
            body:
              application/json:
                type: Message
            description: Successful response
        queryParameters:
          format:
            default: full
            description: The format to return the message in.
            enum:
              - full
              - metadata
              - minimal
              - raw
            type: string
          metadataHeaders:
            collectionFormat: multi
            description: 'When given and format is METADATA, only include headers specified.'
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.readonly'
        (oas-tags):
          - users
    get:
      displayName: gmail.users.messages.list
      description: Lists the messages in the user's mailbox.
      responses:
        '200':
          body:
            application/json:
              type: ListMessagesResponse
          description: Successful response
      queryParameters:
        includeSpamTrash:
          default: false
          description: Include messages from SPAM and TRASH in the results.
          type: boolean
        labelIds:
          collectionFormat: multi
          description: Only return messages with labels that match all of the specified label IDs.
          items:
            type: string
          type: array
          facets:
            collectionFormat: string
        maxResults:
          default: 100
          description: Maximum number of messages to return.
          type: integer
        pageToken:
          description: Page token to retrieve a specific page of results in the list.
          type: string
        q:
          description: 'Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread". Parameter cannot be used when accessing the api using the gmail.metadata scope.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    /send:
      displayName: send
      post:
        displayName: gmail.users.messages.send
        description: 'Sends the specified message to the recipients in the To, Cc, and Bcc headers.'
        body:
          application/json:
            type: Message
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Message
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.send'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    /batchDelete:
      displayName: batchDelete
      post:
        displayName: gmail.users.messages.batchDelete
        description: Deletes many messages by message ID. Provides no guarantees that messages were not already deleted or even existed at all.
        body:
          application/json:
            type: BatchDeleteMessagesRequest
            (oas-body-name): body
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://mail.google.com/'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    '/{messageId}':
      displayName: '{messageId}'
      /attachments:
        displayName: attachments
        '/{id}':
          displayName: '{id}'
          uriParameters:
            id:
              description: The ID of the attachment.
              required: true
              type: string
          get:
            displayName: gmail.users.messages.attachments.get
            description: Gets the specified message attachment.
            responses:
              '200':
                body:
                  application/json:
                    type: MessagePartBody
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/gmail.readonly'
            (oas-tags):
              - users
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
  /profile:
    displayName: profile
    get:
      displayName: gmail.users.getProfile
      description: Gets the current user's Gmail profile.
      responses:
        '200':
          body:
            application/json:
              type: Profile
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /stop:
    displayName: stop
    post:
      displayName: gmail.users.stop
      description: Stop receiving push notifications for the given user mailbox.
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /threads:
    displayName: threads
    get:
      displayName: gmail.users.threads.list
      description: Lists the threads in the user's mailbox.
      responses:
        '200':
          body:
            application/json:
              type: ListThreadsResponse
          description: Successful response
      queryParameters:
        includeSpamTrash:
          default: false
          description: Include threads from SPAM and TRASH in the results.
          type: boolean
        labelIds:
          collectionFormat: multi
          description: Only return threads with labels that match all of the specified label IDs.
          items:
            type: string
          type: array
          facets:
            collectionFormat: string
        maxResults:
          default: 100
          description: Maximum number of threads to return.
          type: integer
        pageToken:
          description: Page token to retrieve a specific page of results in the list.
          type: string
        q:
          description: 'Only return threads matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread". Parameter cannot be used when accessing the api using the gmail.metadata scope.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/gmail.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: The ID of the thread to retrieve.
          required: true
          type: string
      delete:
        displayName: gmail.users.threads.delete
        description: Immediately and permanently deletes the specified thread. This operation cannot be undone. Prefer threads.trash instead.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://mail.google.com/'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      /untrash:
        displayName: untrash
        post:
          displayName: gmail.users.threads.untrash
          description: Removes the specified thread from the trash.
          responses:
            '200':
              body:
                application/json:
                  type: Thread
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /trash:
        displayName: trash
        post:
          displayName: gmail.users.threads.trash
          description: Moves the specified thread to the trash.
          responses:
            '200':
              body:
                application/json:
                  type: Thread
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /modify:
        displayName: modify
        post:
          displayName: gmail.users.threads.modify
          description: Modifies the labels applied to the thread. This applies to all messages in the thread.
          body:
            application/json:
              type: ModifyThreadRequest
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Thread
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/gmail.modify'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      get:
        displayName: gmail.users.threads.get
        description: Gets the specified thread.
        responses:
          '200':
            body:
              application/json:
                type: Thread
            description: Successful response
        queryParameters:
          format:
            default: full
            description: The format to return the messages in.
            enum:
              - full
              - metadata
              - minimal
            type: string
          metadataHeaders:
            collectionFormat: multi
            description: 'When given and format is METADATA, only include headers specified.'
            items:
              type: string
            type: array
            facets:
              collectionFormat: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/gmail.readonly'
        (oas-tags):
          - users
types:
  AutoForwarding:
    description: Auto-forwarding settings for an account.
    properties:
      disposition:
        description: The state that a message should be left in after it has been forwarded.
        enum:
          - archive
          - dispositionUnspecified
          - leaveInInbox
          - markRead
          - trash
        type: string
        required: false
      emailAddress:
        description: Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.
        type: string
        required: false
      enabled:
        description: Whether all incoming mail is automatically forwarded to another address.
        type: boolean
        required: false
  BatchDeleteMessagesRequest:
    properties:
      ids:
        description: The IDs of the messages to delete.
        items:
          type: string
        type: array
        required: false
  Draft:
    description: A draft email in the user's mailbox.
    properties:
      id:
        description: The immutable ID of the draft.
        type: string
        required: false
      message:
        description: The message content of the draft.
        type: Message
        required: false
  Filter:
    description: Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.
    properties:
      action:
        description: Action that the filter performs.
        type: FilterAction
        required: false
      criteria:
        description: Matching criteria for the filter.
        type: FilterCriteria
        required: false
      id:
        description: The server assigned ID of the filter.
        type: string
        required: false
  FilterAction:
    description: A set of actions to perform on a message.
    properties:
      addLabelIds:
        description: List of labels to add to the message.
        items:
          type: string
        type: array
        required: false
      forward:
        description: Email address that the message should be forwarded to.
        type: string
        required: false
      removeLabelIds:
        description: List of labels to remove from the message.
        items:
          type: string
        type: array
        required: false
  FilterCriteria:
    description: Message matching criteria.
    properties:
      excludeChats:
        description: Whether the response should exclude chats.
        type: boolean
        required: false
      from:
        description: The sender's display name or email address.
        type: string
        required: false
      hasAttachment:
        description: Whether the message has any attachment.
        type: boolean
        required: false
      negatedQuery:
        description: 'Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
        type: string
        required: false
      query:
        description: 'Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
        type: string
        required: false
      size:
        description: 'The size of the entire RFC822 message in bytes, including all headers and attachments.'
        format: int32
        type: integer
        required: false
      sizeComparison:
        description: How the message size in bytes should be in relation to the size field.
        enum:
          - larger
          - smaller
          - unspecified
        type: string
        required: false
      subject:
        description: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.
        type: string
        required: false
      to:
        description: 'The recipient''s display name or email address. Includes recipients in the "to", "cc", and "bcc" header fields. You can use simply the local part of the email address. For example, "example" and "example@" both match "example@gmail.com". This field is case-insensitive.'
        type: string
        required: false
  ForwardingAddress:
    description: Settings for a forwarding address.
    properties:
      forwardingEmail:
        description: An email address to which messages can be forwarded.
        type: string
        required: false
      verificationStatus:
        description: Indicates whether this address has been verified and is usable for forwarding. Read-only.
        enum:
          - accepted
          - pending
          - verificationStatusUnspecified
        type: string
        required: false
  History:
    description: A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.
    properties:
      id:
        description: The mailbox sequence ID.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      labelsAdded:
        description: Labels added to messages in this history record.
        items:
          type: HistoryLabelAdded
        type: array
        required: false
      labelsRemoved:
        description: Labels removed from messages in this history record.
        items:
          type: HistoryLabelRemoved
        type: array
        required: false
      messages:
        description: 'List of messages changed in this history record. The fields for specific change types, such as messagesAdded may duplicate messages in this field. We recommend using the specific change-type fields instead of this.'
        items:
          type: Message
        type: array
        required: false
      messagesAdded:
        description: Messages added to the mailbox in this history record.
        items:
          type: HistoryMessageAdded
        type: array
        required: false
      messagesDeleted:
        description: Messages deleted (not Trashed) from the mailbox in this history record.
        items:
          type: HistoryMessageDeleted
        type: array
        required: false
  HistoryLabelAdded:
    properties:
      labelIds:
        description: Label IDs added to the message.
        items:
          type: string
        type: array
        required: false
      message:
        type: Message
        required: false
  HistoryLabelRemoved:
    properties:
      labelIds:
        description: Label IDs removed from the message.
        items:
          type: string
        type: array
        required: false
      message:
        type: Message
        required: false
  HistoryMessageAdded:
    properties:
      message:
        type: Message
        required: false
  HistoryMessageDeleted:
    properties:
      message:
        type: Message
        required: false
  ImapSettings:
    description: IMAP settings for an account.
    properties:
      autoExpunge:
        description: 'If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.'
        type: boolean
        required: false
      enabled:
        description: Whether IMAP is enabled for the account.
        type: boolean
        required: false
      expungeBehavior:
        description: The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.
        enum:
          - archive
          - deleteForever
          - expungeBehaviorUnspecified
          - trash
        type: string
        required: false
      maxFolderSize:
        description: 'An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.'
        format: int32
        type: integer
        required: false
  Label:
    description: Labels are used to categorize messages and threads within the user's mailbox.
    properties:
      id:
        description: The immutable ID of the label.
        type: string
        required: false
      labelListVisibility:
        description: The visibility of the label in the label list in the Gmail web interface.
        enum:
          - labelHide
          - labelShow
          - labelShowIfUnread
        type: string
        required: false
      messageListVisibility:
        description: The visibility of the label in the message list in the Gmail web interface.
        enum:
          - hide
          - show
        type: string
        required: false
      messagesTotal:
        description: The total number of messages with the label.
        format: int32
        type: integer
        required: false
      messagesUnread:
        description: The number of unread messages with the label.
        format: int32
        type: integer
        required: false
      name:
        description: The display name of the label.
        type: string
        required: false
      threadsTotal:
        description: The total number of threads with the label.
        format: int32
        type: integer
        required: false
      threadsUnread:
        description: The number of unread threads with the label.
        format: int32
        type: integer
        required: false
      type:
        description: 'The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.'
        enum:
          - system
          - user
        type: string
        required: false
  ListDraftsResponse:
    properties:
      drafts:
        description: List of drafts.
        items:
          type: Draft
        type: array
        required: false
      nextPageToken:
        description: Token to retrieve the next page of results in the list.
        type: string
        required: false
      resultSizeEstimate:
        description: Estimated total number of results.
        type: integer
        required: false
  ListFiltersResponse:
    description: Response for the ListFilters method.
    properties:
      filter:
        description: List of a user's filters.
        items:
          type: Filter
        type: array
        required: false
  ListForwardingAddressesResponse:
    description: Response for the ListForwardingAddresses method.
    properties:
      forwardingAddresses:
        description: List of addresses that may be used for forwarding.
        items:
          type: ForwardingAddress
        type: array
        required: false
  ListHistoryResponse:
    properties:
      history:
        description: List of history records. Any messages contained in the response will typically only have id and threadId fields populated.
        items:
          type: History
        type: array
        required: false
      historyId:
        description: The ID of the mailbox's current history record.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      nextPageToken:
        description: Page token to retrieve the next page of results in the list.
        type: string
        required: false
  ListLabelsResponse:
    properties:
      labels:
        description: List of labels.
        items:
          type: Label
        type: array
        required: false
  ListMessagesResponse:
    properties:
      messages:
        description: List of messages.
        items:
          type: Message
        type: array
        required: false
      nextPageToken:
        description: Token to retrieve the next page of results in the list.
        type: string
        required: false
      resultSizeEstimate:
        description: Estimated total number of results.
        type: integer
        required: false
  ListSendAsResponse:
    description: Response for the ListSendAs method.
    properties:
      sendAs:
        description: List of send-as aliases.
        items:
          type: SendAs
        type: array
        required: false
  ListThreadsResponse:
    properties:
      nextPageToken:
        description: Page token to retrieve the next page of results in the list.
        type: string
        required: false
      resultSizeEstimate:
        description: Estimated total number of results.
        type: integer
        required: false
      threads:
        description: List of threads.
        items:
          type: Thread
        type: array
        required: false
  Message:
    description: An email message.
    properties:
      historyId:
        description: The ID of the last history record that modified this message.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      id:
        description: The immutable ID of the message.
        type: string
        required: false
      internalDate:
        description: 'The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      labelIds:
        description: List of IDs of labels applied to this message.
        items:
          type: string
        type: array
        required: false
      payload:
        description: The parsed email structure in the message parts.
        type: MessagePart
        required: false
      raw:
        description: The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.
        format: byte
        type: string
        facets:
          format: string
        required: false
      sizeEstimate:
        description: Estimated size in bytes of the message.
        format: int32
        type: integer
        required: false
      snippet:
        description: A short part of the message text.
        type: string
        required: false
      threadId:
        description: |-
          The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: 
          - The requested threadId must be specified on the Message or Draft.Message you supply with your request. 
          - The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. 
          - The Subject headers must match.
        type: string
        required: false
  MessagePart:
    description: A single MIME message part.
    properties:
      body:
        description: 'The message part body for this part, which may be empty for container MIME message parts.'
        type: MessagePartBody
        required: false
      filename:
        description: The filename of the attachment. Only present if this message part represents an attachment.
        type: string
        required: false
      headers:
        description: 'List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.'
        items:
          type: MessagePartHeader
        type: array
        required: false
      mimeType:
        description: The MIME type of the message part.
        type: string
        required: false
      partId:
        description: The immutable ID of the message part.
        type: string
        required: false
      parts:
        description: 'The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521.'
        items:
          type: MessagePart
        type: array
        required: false
  MessagePartBody:
    description: The body of a single MIME message part.
    properties:
      attachmentId:
        description: 'When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.'
        type: string
        required: false
      data:
        description: The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.
        format: byte
        type: string
        facets:
          format: string
        required: false
      size:
        description: Number of bytes for the message part data (encoding notwithstanding).
        format: int32
        type: integer
        required: false
  MessagePartHeader:
    properties:
      name:
        description: 'The name of the header before the : separator. For example, To.'
        type: string
        required: false
      value:
        description: 'The value of the header after the : separator. For example, someuser@example.com.'
        type: string
        required: false
  ModifyMessageRequest:
    properties:
      addLabelIds:
        description: A list of IDs of labels to add to this message.
        items:
          type: string
        type: array
        required: false
      removeLabelIds:
        description: A list IDs of labels to remove from this message.
        items:
          type: string
        type: array
        required: false
  ModifyThreadRequest:
    properties:
      addLabelIds:
        description: A list of IDs of labels to add to this thread.
        items:
          type: string
        type: array
        required: false
      removeLabelIds:
        description: A list of IDs of labels to remove from this thread.
        items:
          type: string
        type: array
        required: false
  PopSettings:
    description: POP settings for an account.
    properties:
      accessWindow:
        description: The range of messages which are accessible via POP.
        enum:
          - accessWindowUnspecified
          - allMail
          - disabled
          - fromNowOn
        type: string
        required: false
      disposition:
        description: The action that will be executed on a message after it has been fetched via POP.
        enum:
          - archive
          - dispositionUnspecified
          - leaveInInbox
          - markRead
          - trash
        type: string
        required: false
  Profile:
    description: Profile for a Gmail user.
    properties:
      emailAddress:
        description: The user's email address.
        type: string
        required: false
      historyId:
        description: The ID of the mailbox's current history record.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      messagesTotal:
        description: The total number of messages in the mailbox.
        format: int32
        type: integer
        required: false
      threadsTotal:
        description: The total number of threads in the mailbox.
        format: int32
        type: integer
        required: false
  SendAs:
    description: 'Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom "from" address. Send-as aliases correspond to the "Send Mail As" feature in the web interface.'
    properties:
      displayName:
        description: 'A name that appears in the "From:" header for mail sent using this alias. For custom "from" addresses, when this is empty, Gmail will populate the "From:" header with the name that is used for the primary address associated with the account.'
        type: string
        required: false
      isDefault:
        description: 'Whether this address is selected as the default "From:" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.'
        type: boolean
        required: false
      isPrimary:
        description: 'Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.'
        type: boolean
        required: false
      replyToAddress:
        description: 'An optional email address that is included in a "Reply-To:" header for mail sent using this alias. If this is empty, Gmail will not generate a "Reply-To:" header.'
        type: string
        required: false
      sendAsEmail:
        description: 'The email address that appears in the "From:" header for mail sent using this alias. This is read-only for all operations except create.'
        type: string
        required: false
      signature:
        description: An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.
        type: string
        required: false
      smtpMsa:
        description: 'An optional SMTP service that will be used as an outbound relay for mail sent using this alias. If this is empty, outbound mail will be sent directly from Gmail''s servers to the destination SMTP service. This setting only applies to custom "from" aliases.'
        type: SmtpMsa
        required: false
      treatAsAlias:
        description: Whether Gmail should  treat this address as an alias for the user's primary email address. This setting only applies to custom "from" aliases.
        type: boolean
        required: false
      verificationStatus:
        description: Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom "from" aliases.
        enum:
          - accepted
          - pending
          - verificationStatusUnspecified
        type: string
        required: false
  SmtpMsa:
    description: Configuration for communication with an SMTP service.
    properties:
      host:
        description: The hostname of the SMTP service. Required.
        type: string
        required: false
      password:
        description: The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
        type: string
        required: false
      port:
        description: The port of the SMTP service. Required.
        format: int32
        type: integer
        required: false
      securityMode:
        description: The protocol that will be used to secure communication with the SMTP service. Required.
        enum:
          - none
          - securityModeUnspecified
          - ssl
          - starttls
        type: string
        required: false
      username:
        description: The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
        type: string
        required: false
  Thread:
    description: A collection of messages representing a conversation.
    properties:
      historyId:
        description: The ID of the last history record that modified this thread.
        format: uint64
        type: string
        facets:
          format: string
        required: false
      id:
        description: The unique ID of the thread.
        type: string
        required: false
      messages:
        description: The list of messages in the thread.
        items:
          type: Message
        type: array
        required: false
      snippet:
        description: A short part of the message text.
        type: string
        required: false
  VacationSettings:
    description: Vacation auto-reply settings for an account. These settings correspond to the "Vacation responder" feature in the web interface.
    properties:
      enableAutoReply:
        description: Flag that controls whether Gmail automatically replies to messages.
        type: boolean
        required: false
      endTime:
        description: 'An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      responseBodyHtml:
        description: Response body in HTML format. Gmail will sanitize the HTML before storing it.
        type: string
        required: false
      responseBodyPlainText:
        description: Response body in plain text format.
        type: string
        required: false
      responseSubject:
        description: 'Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.'
        type: string
        required: false
      restrictToContacts:
        description: Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.
        type: boolean
        required: false
      restrictToDomain:
        description: Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for Google Apps users.
        type: boolean
        required: false
      startTime:
        description: 'An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.'
        format: int64
        type: string
        facets:
          format: string
        required: false
  WatchRequest:
    description: Set up or update a new push notification watch on this user's mailbox.
    properties:
      labelFilterAction:
        description: Filtering behavior of labelIds list specified.
        enum:
          - exclude
          - include
        type: string
        required: false
      labelIds:
        description: 'List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.'
        items:
          type: string
        type: array
        required: false
      topicName:
        description: |-
          A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format).

          Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
        type: string
        required: false
  WatchResponse:
    description: Push notification watch response.
    properties:
      expiration:
        description: When Gmail will stop sending notifications for mailbox updates (epoch millis). Call watch again before this time to renew the watch.
        format: int64
        type: string
        facets:
          format: string
        required: false
      historyId:
        description: The ID of the mailbox's current history record.
        format: uint64
        type: string
        facets:
          format: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
