#%RAML 1.0
title: Clarify
version: 1.1.0
baseUri: 'https://api.clarify.io/'
protocols:
  - HTTPS
description: The API to Search and Understand Audio & Video Data.
(oas-tags-definition):
  - name: bundles
  - name: search
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-definition-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-logo):
    backgroundColor: '#65A8B5'
    url: 'https://api.apis.guru/v2/cache/logo/http_clarify.io_wp-content_themes_clarify_images_clarify-logo.png'
  (oas-x-origin):
    format: swagger
    url: 'https://api.clarify.io/api-docs'
    version: '1.2'
  (oas-x-preferred): true
  (oas-x-providerName): clarify.io
/v1:
  displayName: v1
  /bundles:
    displayName: bundles
    '/{bundle_id}':
      displayName: '{bundle_id}'
      /metadata:
        displayName: metadata
        delete:
          displayName: DELETE_v1-bundles-bundle_id-metadata
          description: 'Delete the metadata of a bundle and set data to {} (empty object.) This is functionally equivalent to an update metadata request with data set to {}.<br/><br/>Successful response will be a HTTP code 204 with an empty body.'
          (oas-summary): Delete bundle metadata
          responses:
            '200':
              description: No response was specified
            '204':
              description: No Content (success)
            '400':
              description: Bad request
            '404':
              description: Not found
          (oas-tags):
            - bundles
        get:
          displayName: GET_v1-bundles-bundle_id-metadata
          description: Gets the metadata for a bundle.
          (oas-summary): Get bundle metadata
          responses:
            '200':
              body:
                application/hal+json:
                  type: Metadata
              description: OK
            '400':
              description: Bad request
            '404':
              description: Not found
          (oas-tags):
            - bundles
        put:
          displayName: PUT_v1-bundles-bundle_id-metadata
          description: 'Update the metadata for a bundle.<br/><br/>The metadata is a single-level JSON object of your own definition, containing key-values that can be searched and filtered on. Metadata can be used to hold text such as names, titles, descriptions and values for segregating bundles, for example by user, topic, folder name etc. The keys (property names) can be up to 64 characters and must contain only alphanumeric characters and underscore (but not start with underscore) and must not be a reserved name. Reserved names are &quot;true&quot;, &quot;false&quot;, and &quot;null&quot;. Values can be strings, numbers, boolean true/false, date-times represented as a string in ISO 8601 format (ex. &quot;2014-02-25T14:23:45.000Z&quot;), or an array of these primitive types. Strings can be up to 2000 characters and strings in arrays can be up to 128 characters each. Nested objects are not allowed. Metadata can contain up to 50 key-value pairs up to a total JSON size of 4000 characters.<br/><br/>To clear the metadata for a bundle, send <b>data</b>={}.<br/><br/>If <b>version</b> specified, the metadata will only be updated if the current version matches this parameter value. If the version doesn''t match, a 409 Conflict will be returned. If version not specified, the metadata will always be updated.'
          (oas-summary): Update bundle metadata
          body:
            multipart/form-data:
              properties:
                data:
                  description: 'User-defined JSON data associated with the bundle. Must be valid JSON, up to 4000 characters.'
                  required: true
                  type: string
                version:
                  description: Object version.
                  required: false
                  type: integer
          responses:
            '200':
              body:
                application/hal+json:
                  type: Ref
              description: No response was specified
            '202':
              description: Accepted
            '400':
              description: Bad request
            '404':
              description: Not found
            '409':
              description: Conflict
          (oas-tags):
            - bundles
      uriParameters:
        bundle_id:
          description: id of a bundle
          required: true
          type: string
      delete:
        displayName: DELETE_v1-bundles-bundle_id
        description: Delete a bundle and its related metadata and tracks. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.
        (oas-summary): Delete a bundle
        responses:
          '200':
            description: No response was specified
          '204':
            description: No Content (success)
          '400':
            description: Bad request
          '404':
            description: Not found
        (oas-tags):
          - bundles
      /tracks:
        displayName: tracks
        delete:
          displayName: DELETE_v1-bundles-bundle_id-tracks
          description: Delete tracks of a bundle. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.
          (oas-summary): Delete bundle tracks
          responses:
            '200':
              description: No response was specified
            '204':
              description: No Content (success)
            '400':
              description: Bad request
            '404':
              description: Not found
          (oas-tags):
            - bundles
        '/{track_id}':
          displayName: '{track_id}'
          uriParameters:
            track_id:
              description: id of a track
              required: true
              type: string
          get:
            displayName: GET_v1-bundles-bundle_id-tracks-track_id
            description: 'Gets a single track in a bundle. This includes the specification of the media and the status of fetching and processing it.<br/><br/>Media for a track is fetched asynchronously. Until media has been retrieved, a track&apos;s <b>duration</b> and <b>size</b> will both be set to -1.'
            (oas-summary): Get bundle track
            responses:
              '200':
                body:
                  application/hal+json:
                    type: Track
                description: OK
              '400':
                description: Bad request
              '404':
                description: Not found
            (oas-tags):
              - bundles
          delete:
            displayName: DELETE_v1-bundles-bundle_id-tracks-track_id
            description: Delete a track of a bundle. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.
            (oas-summary): Delete a bundle track
            responses:
              '200':
                description: No response was specified
              '204':
                description: No Content (success)
              '400':
                description: Bad request
              '404':
                description: Not found
            (oas-tags):
              - bundles
        post:
          displayName: POST_v1-bundles-bundle_id-tracks
          description: 'Add a new track to a bundle. This will insert or append a new track in the tracks array or return an error if the maximum number of tracks (4) has been reached or the track number specifies an invalid index.<br/><br/>A track is immutable, meaning that once it has been added, it cannot be modified. If you wish to modify a track, simply add a new one and delete the existing one.<br/><br/><b>label</b> is a short name for the track.<br/><br/><b>media_url</b> must be a publicly accessible url to a media file. It will be fetched asynchronously after the REST call returns. The audio can be mono or stereo.<br/><br/><b>audio_channel</b> is used to specify audio channels if the media is a stereo file. A value of <i>left</i> or <i>right</i> signifies that only the specified channel will be used. If no value or an empty string is specified for <b>audio_channel</b>, all channels will be used in a single track. If your stereo channels were recorded separately with each channel containing distinct content (for example if 2 legs of a phone call were recorded separately and combined into a single stereo file), for best speech recognition, create two tracks with <b>audio_channel</b> to be <i>left</i> and <i>right</i>. If your stereo file is simply a recording made with a stereo microphone, <b>audio_channel</b> should be set to an empty string (or not be specified.)<br/><br/><b>audio_language</b> can be used to specify the language of the audio media. This is an optional parameter and if not specified or an empty string, the language of the track will be automatically detected. If specified, it must be a language code as described in RFC5646 (see <a href="http://tools.ietf.org/html/rfc5646" target="_blank">http://tools.ietf.org/html/rfc5646</a>). Supported languages: en-US, en-UK, es, fr.<br/><br/><b>track</b> is the index in the tracks array where the new track will be added. Track numbers start at 0. If this parameter is not specified the new track will always be appended to the end of the array. If the track specified is greater than the last index of the array + 1, an error will be returned.<br/><br/>If <b>version</b> specified, the track will only be added if the current version matches this parameter value. If the version doesn''t match, a 409 Conflict error will be returned. If version not specified, the track will always be updated.'
          (oas-summary): Add a track for a bundle
          body:
            multipart/form-data:
              properties:
                label:
                  description: Label for the track. Up to 128 characters.
                  required: false
                  type: string
                media_url:
                  description: URL of a media file for this bundle. Up to 2083 characters.
                  required: true
                  type: string
                audio_channel:
                  description: The audio channel to use for the track ( "" | left | right ). Default is empty string which means all channels of audio in the media file are used for the track.
                  enum:
                    - left
                    - right
                  required: false
                  type: string
                audio_language:
                  description: 'Language of the audio in the track, specified with an RFC5646 code.'
                  enum:
                    - en-US
                    - en-UK
                    - es
                    - fr
                  required: false
                  type: string
                track:
                  description: 'Track number specifies the index of the new track in the tracks array. An integer from 0 to 3. If not specified, the new track is appended to the array.'
                  maximum: 3
                  required: false
                  type: integer
                version:
                  description: Object version.
                  required: false
                  type: integer
          responses:
            '200':
              body:
                application/hal+json:
                  type: Ref
              description: No response was specified
            '201':
              description: Created
            '400':
              description: Bad request
            '404':
              description: Not found
            '409':
              description: Conflict
          (oas-tags):
            - bundles
        get:
          displayName: GET_v1-bundles-bundle_id-tracks
          description: 'Gets the array of tracks for a bundle. This includes the specification of the media and the status of fetching and processing it.<br/><br/>Media for tracks is fetched asynchronously. Until media has been retrieved, a track&apos;s <b>duration</b> and <b>size</b> will both be set to -1.'
          (oas-summary): Get bundle tracks
          responses:
            '200':
              body:
                application/hal+json:
                  type: Tracks
              description: OK
            '400':
              description: Bad request
            '404':
              description: Not found
          (oas-tags):
            - bundles
      put:
        displayName: PUT_v1-bundles-bundle_id
        description: 'Update a bundle. To update the tracks, media, or metadata of a bundle, use the tracks and metadata endpoints.<br/><br/><b>name</b> can be any string you wish to associate with the bundle.<br/><br/><b>external_id</b> is an optional parameter that can be used to logically link a bundle to an item in an external system. The <b>external_id</b> can be whatever you use to identify items in your own database.<br/><br/><b>notify_url</b> is a webhook. It must be a publicly accessible url (http or https) on your server to which notifications for the bundle will be POSTed. There are three types of notifications: Track Notifications, Insight Notifications and Bundle Notifications. For more information on the content of notifications and when they are sent, see the <a href="http://docs.clarify.io/overview/#notifications" target="clarify">notification docs page</a>.<br/><br/>If <b>version</b> is specified, the bundle will only be updated if the current version matches this parameter value. If the version doesn''t match, a 409 Conflict error will be returned. If version not specified, the bundle will always be updated.'
        (oas-summary): Update a bundle
        body:
          multipart/form-data:
            properties:
              name:
                description: Name of the bundle. Up to 128 characters.
                required: false
                type: string
              notify_url:
                description: URL for notifications on this bundle. Up to 2083 characters.
                required: false
                type: string
              external_id:
                description: A string that can refer to an item in an external system. Up to 64 characters.
                required: false
                type: string
              version:
                description: Object version.
                required: false
                type: integer
        responses:
          '200':
            body:
              application/hal+json:
                type: Ref__of_Bundle_
            description: No response was specified
          '202':
            description: Accepted
          '400':
            description: Bad request
          '404':
            description: Not found
          '409':
            description: Conflict
        (oas-tags):
          - bundles
      /insights:
        displayName: insights
        post:
          displayName: POST_v1-bundles-bundle_id-insights
          description: 'Request an insight to be run on a bundle. Note that most insights are set to automatically run on all bundles so you commonly won&apos;t need to call this endpoint except to request transcripts. To configure which insights are automatically run for an app, visit the <a href="https://developer.clarify.io" target="clarify">Clarify Developer Portal</a>.<br/><br/> Insights that are not configured to autorun can be requested to run on an individual bundle using this endpoint. The following insights can be requested:<br/><br/><b>transcript_r9</b> - High-accuracy transcript of the speech in audio media.<br/><br/>Transcripts will produced on the mixed audio of all tracks in the bundle and are charged per minute (rounded up for partial minutes), based on the duration of the longest track. If the request has already been made, this method has no effect other than to return the existing insight.<br/><br/>Transcripts will typically take about 48 hours. When the transcript is ready, an InsightNotification webhook will be POSTed to the bundle <b>notify_url</b>.<br/><br/>For more information see <a href="http://docs.clarify.io/quickstarts/human-transcripts.html" title="human transcripts" target="clarify">Human Transcripts Quick Start</a>.<br/><br/><b>captions_r9</b> - High-accuracy captions of the speech in video media.<br/><br/>Captions will be generated on the first track in the bundle. and are charged per minute (rounded up for partial minutes), based on the duration of the media.  See the <a href="http://clarify.io/pricing" title="pricing" target="clarify">pricing page</a>. If the request has already been made, this method has no effect other than to return the existing insight.<br/><br/>Captions will typically take about 72 hours. When the captions are ready, an InsightNotification webhook will be POSTed to the bundle <b>notify_url</b>.<br/><br/>For more information see <a href="http://docs.clarify.io/quickstarts/closed-captions.html" title="captions" target="clarify">Captions Quick Start</a>.<br/><br/><b>spoken_keywords</b> - Spoken words of interest found in audio media. <b>Note:</b> Normally spoken_keywords is set to autorun so you do not need to run it explicitly.<br/><br/><b>spoken_topics</b> - Topics spoken about in the audio media.'
          (oas-summary): Request an insight to be run
          body:
            multipart/form-data:
              properties:
                insight:
                  description: 'name of the insight: transcript_r9, captions_r9, spoken_keywords, spoken_topics'
                  enum:
                    - transcript_r9
                    - captions_r9
                    - spoken_keywords
                    - spoken_topics
                  required: true
                  type: string
          responses:
            '200':
              body:
                application/hal+json:
                  type: Insight
              description: OK if the insight already exists
            '202':
              description: Accepted if the insight has been requested and is queued for processing
            '400':
              description: Bad request
            '404':
              description: Not found
            '409':
              description: Conflict if tracks have a status of error
          (oas-tags):
            - bundles
        '/{insight_id}':
          displayName: '{insight_id}'
          uriParameters:
            insight_id:
              description: id of an insight
              required: true
              type: string
          get:
            displayName: GET_v1-bundles-bundle_id-insights-insight_id
            description: 'Gets a particular insight for a bundle. Typically, you will hit this endpoint from a link contained in a response to <b>/v1/bundles/{bundle_id}/insights</b><br/><br/>The insight response contains an array of objects called <b>track_data</b>, where the array indexes correspond to the tracks in the bundle. Each object in the array contains insight-specific data related to that insight. For example, in the <b>spoken_words</b> insight, the <b>track_data</b> objects contain the field <b>word_count</b> which is the number of spoken words found in the track.<br/><br/>Insights that contain data in different file formats will have one or more link relations in the _links array for the corresponding data. Note that the href URLs in these links have a limited lifespan and should not be stored locally.'
            (oas-summary): Get bundle insight
            responses:
              '200':
                body:
                  application/hal+json:
                    type: Insight
                description: OK
              '400':
                description: Bad request
              '404':
                description: Not found
            (oas-tags):
              - bundles
        get:
          displayName: GET_v1-bundles-bundle_id-insights
          description: 'Gets the insights for a bundle.<br/><br/>URLs of the available insights for the bundle are in the _links object, with the link relations (keys) of the format <b>insight:insight_name</b>.'
          (oas-summary): Get bundle insights
          responses:
            '200':
              body:
                application/hal+json:
                  type: Insights
              description: OK
            '400':
              description: Bad request
            '404':
              description: Not found
          (oas-tags):
            - bundles
      get:
        displayName: GET_v1-bundles-bundle_id
        description: Get a bundle that has previously been created.
        (oas-summary): Get a bundle
        responses:
          '200':
            body:
              application/hal+json:
                type: Bundle
            description: OK
          '400':
            description: Bad request
          '404':
            description: Not found
        queryParameters:
          embed:
            description: 'list of link relations to embed in the result bundle. Zero or more of: tracks, metadata, insights. List is space or comma separated single string or an array of strings'
            required: false
            type: string
        (oas-tags):
          - bundles
    get:
      displayName: GET_v1-bundles
      description: 'Gets the list of bundles. Links to each item are in the _links with link relation <b>items</b>.<br/><br/>After getting the initial list, use the <b>first</b>, <b>last</b>, <b>next</b>, <b>prev</b> link relations to get more bundles in the list. Note that <b>next</b> will not be available at the end of the list and <b>prev</b> will not be available at the start of the list. If the results are exactly one page neither <b>prev</b> nor <b>next</b> will be available.<br/><br/>The <b>embed</b> parameter specifies link relations to embed in the results. The models for the specified link relations will be in an array in the embedded object with the link relation as the key. For example, if you do embed=items, _embedded will contain a property <b>items</b> whose value is the array of bundle models. For link relations that are curies (ex. "clarify:metadata"), you may simply use the base name (ex. "metadata").'
      (oas-summary): List bundles
      responses:
        '200':
          body:
            application/hal+json:
              type: Collection
          description: OK
        '400':
          description: Bad request
      queryParameters:
        limit:
          description: limit results to specified number of bundles. Default is 10. Max 100.
          maximum: 100
          minimum: 1
          required: false
          type: integer
        embed:
          description: 'list of link relations to embed in the result collection. Zero or more of: items, tracks, metadata, insights. List is space or comma separated single string or an array of strings'
          required: false
          type: string
        iterator:
          description: 'opaque value, automatically provided in next/prev links'
          required: false
          type: string
      (oas-tags):
        - bundles
    post:
      displayName: POST_v1-bundles
      description: 'Create a new bundle with the specified name, media url, and optional JSON metadata.<br/><br/><b>name</b> can be any string you wish to associate with the bundle.<br/><br/><b>media_url</b> must be a publicly accessible url to a media file. It will be fetched asynchronously after the REST call returns. The audio can be mono or stereo.<br/><br/><b>audio_channel</b> is used to specify audio channels if the media is a stereo file. A value of <i>left</i> or <i>right</i> signifies that only the specified channel will be used. If no value or an empty string is specified for <b>audio_channel</b>, all channels will be used in a single track. If your stereo channels were recorded separately with each channel containing distinct content (for example if 2 legs of a phone call were recorded separately and combined into a single stereo file), for best speech recognition, create two tracks, with <b>audio_channel</b> set to <i>left</i> and <i>right</i> in each track respectively. If your stereo file is simply a recording made with a stereo microphone, <b>audio_channel</b> should be set to an empty string (or not be specified.) If you have audio channels as separate media files, after creating the bundle with one <b>media_url</b>, POST another <b>media_url</b> to /bundles/{bundle_id}/tracks.<br/><br/><b>audio_language</b> can be used to specify the language of the audio media. This is an optional parameter and if not specified or an empty string, the language of the track will be automatically detected. If specified, it must be a language code as described in RFC5646 (see <a href="http://tools.ietf.org/html/rfc5646" target="_blank">http://tools.ietf.org/html/rfc5646</a>). Supported languages: en-US, en-UK, es, fr.<br/><br/><b>metadata</b> is a single-level JSON object of your own definition, containing key-values that can be searched and filtered on. Metadata can be used to hold text such as names, titles, descriptions and values for segregating bundles, for example by user, topic, folder name etc. The keys (property names) can be up to 64 characters and must contain only alphanumeric characters and underscore (but not start with underscore) and must not be a reserved name. Reserved names are &quot;true&quot;, &quot;false&quot;, and &quot;null&quot;. Values can be strings, numbers, boolean true/false, date-times represented as a string in ISO 8601 format (ex. &quot;2014-02-25T14:23:45.000Z&quot;), or an array of these primitive types. Strings can be up to 2000 characters and strings in arrays can be up to 128 characters each. Nested objects are not allowed. Metadata can contain up to 50 key-value pairs up to a total JSON size of 4000 characters.<br/><br/><b>external_id</b> is an optional parameter that can be used to logically link a bundle to an item in an external system. The <b>external_id</b> can be whatever you use to identify items in your own database.<br/><br/><b>notify_url</b> is a webhook. It must be a publicly accessible url (http or https) on your server to which notifications for the bundle will be POSTed. There are three types of notifications: Track Notifications, Insight Notifications and Bundle Notifications. For more information on the content of notifications and when they are sent, see the <a href="http://docs.clarify.io/overview/#notifications" target="clarify">notification docs page</a>.'
      (oas-summary): Create a bundle
      body:
        multipart/form-data:
          properties:
            name:
              description: Name of the bundle. Up to 128 characters.
              required: false
              type: string
            media_url:
              description: URL of a media (audio or video) file for this bundle. Up to 2083 characters.
              required: false
              type: string
            audio_channel:
              description: The audio channel to use for the track ( "" | left | right ). Default is empty string which means all channels of audio in the media file are used for the track.
              enum:
                - left
                - right
              required: false
              type: string
            audio_language:
              description: 'Language of the audio in the track, specified with an RFC5646 code.'
              enum:
                - en-US
                - en-UK
                - es
                - fr
              required: false
              type: string
            metadata:
              description: 'User-defined JSON data associated with the bundle. Must be valid JSON, up to 4000 characters.'
              required: false
              type: string
            notify_url:
              description: URL for notifications on this bundle. Up to 2083 characters.
              required: false
              type: string
            external_id:
              description: A string that can refer to an item in an external system. Up to 64 characters.
              required: false
              type: string
      responses:
        '200':
          body:
            application/hal+json:
              type: Ref__of_Bundle_
          description: No response was specified
        '201':
          description: Created
        '400':
          description: Bad request
      (oas-tags):
        - bundles
  /search:
    displayName: search
    get:
      displayName: GET_v1-search
      description: 'Searches the bundles and returns a list of matching bundles, along with what matched and where for each bundle.<br/><br/><b>query</b> is used to search for text in the audio and metadata. It uses a simple query language similar to Google. At its simplest, it can be a space separated list of words (ex. <code>open voice</code>) which will find all bundles matching all the words. To search for a phrase, put it in quotes (ex. <code>"open source"</code>) You can exclude bundles that contain a word by putting a minus (hyphen) in front of the word (ex. <code>-opaque</code>) To search for one word or another, use <code>OR</code> (in uppercase) between the words (ex. <code>pizza OR pasta</code>). As an alternative to <code>OR</code>, you can use <code><b>|</b></code> (pipe character). A full query could look something like: <code>restaurant "little italy" pizza OR pasta -mushrooms</code><br/><br/><b>query_fields</b> is used to specify what data in a bundle the query will search. It can contain one or more of <i>insights.spoken_words</i>, metadata fields, and/or bundle fields. Multiple values can be either an array of strings or a comma or space separated single string. By default (if the <b>query_fields</b> param is not included in a request or is a single empty string) all data will be searched.<br/><br/><table><tr><td><b>query_fields</b></td><td><b>Bundle&nbsp;data&nbsp;searched</b></td><td></td></tr><tr><td>*</td><td>all data</td><td>This is the default value.</td></tr><tr><td>insights.spoken_words</td><td><i>[spoken words]</i></td><td>All audio tracks are searched.</td></tr><tr><td><i>fieldname</i></td><td>metadata.<i>fieldname</i></td><td>Your custom metadata field. Wildcard metadata.* searches all metadata fields.</td></tr><tr><td>bundle.<i>fieldname</i></td><td>bundle.<i>fieldname</i></td><td>The searchable bundle fieldnames are name, id, external_id, created and updated. Wildcard bundle.* searches all bundle fields</td></tr></table><br>As an example, suppose you have metadata fields <b>name</b> and <b>description</b> that you would like to search and other metadata fields you don&apos;t want to search. You also want to search the audio words, so you could specify <b>query_fields</b> = &quot;insights.spoken_words, name, description&quot;.<br/><br/><b>filter</b> is used to limit the search results according to specific criteria based on metadata and bundle values. It uses an expression syntax similar to Javascript boolean expressions. An expression is made up of zero or more terms joined by logical operators with each term having a field, a comparison operator, and a literal value. Parentheses can be used to logically group terms.<br/><br/><div class="notes-indent">A filter term is of the form: <b><i><code>field-name comparison-operator literal-value</code></b></i> where:<br/><br/><b><i><code>field-name</code></i></b> is a metadata field or <code>bundle.name</code>, <code>bundle.id</code>, <code>bundle.external_id</code>, <code>bundle.created</code>, or <code>bundle.updated</code>.<br/><br/><b><i><code>comparison-operator</code></i></b> is <code>==</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt=</code>, or <code>!=</code><br/><br/><b><i><code>literal-value</code></i></b> is a number (integer or decimal), boolean <code><i>true</i></code> or <code><i>false</i></code>, or a string with either double quotes (<code>"</code>) or single quotes (<code>''</code>).<br/><br/>Logical operators between terms (and groups of terms) can be <code>&&</code> (logical AND), <code>||</code> (logical OR). A logical NOT is <code>!</code> and can be placed before a term (or group of terms.)</div><br/><br/>An example filter expression (assuming you have used metadata fields category and tag): </p><br><div class="notes-indent"><code>category=="music" && (tag == "soft" || tag == "smooth") && tag != "jazz" && bundle.created > "2014-03-15T00:00:00.0Z"</code></div><br/><br/><p><b>language</b> parameter specifies the language of the words in the search query. This value is used for word-stemming etc. while searching text. Regardless of what you set for this parameter, all your bundles will be searched, no matter what language content they contain. Supported languages: en, en-UK, en-US, es, fr.<br/><br/>After getting the initial list, use the <b>first</b>, <b>next</b>, <b>prev</b> link relations to get more bundles in the list. Note that <b>next</b> will not be available at the end of the list and <b>prev</b> will not be available at the start of the list. A maximum of <b>limit</b> items will be returned. If the results are exactly one page neither <b>prev</b> nor <b>next</b> will be available.<br/><br/>The <b>embed</b> parameter specifies link relations to embed in the results. For link relations that are curies (ex. "clarify:metadata"), you may simply use the base name (ex. "metadata").</p>'
      (oas-summary): Search bundles
      responses:
        '200':
          body:
            application/hal+json:
              type: SearchCollection
          description: OK
        '400':
          description: Bad request
      queryParameters:
        query:
          description: 'search terms, typically as typed into a search field. Up to 120 characters.'
          required: false
          type: string
        query_fields:
          description: 'list of insights, metadata, and bundle fields to search with the query. Use insights.spoken_words for searching audio, metadata.* for all metadata fields, bundle.* for all bundle fields, * for audio and all fields. Default is insights.spoken_words and metadata.*. List is space or comma separated single string or an array of strings. If single string, up to 1024 characters.'
          required: false
          type: string
        filter:
          description: 'filter expression, typically programmatically generated based on input controls and data segregation rules etc. Up to 500 characters.'
          required: false
          type: string
        language:
          description: 'Language to search in, specified with an RFC5646 code. Default is "en"'
          enum:
            - en
            - en-UK
            - en-US
            - es
            - fr
          required: false
          type: string
        limit:
          description: limit results to specified number of bundles. Default is 10. Max 100.
          maximum: 100
          minimum: 1
          required: false
          type: integer
        embed:
          description: 'list of link relations to embed in the result collection. Zero or more of: items, tracks, metadata, insights. List is space or comma separated single string or an array of strings'
          required: false
          type: string
        iterator:
          description: 'opaque value, automatically provided in next/prev links'
          required: false
          type: string
      (oas-tags):
        - search
types:
  Bundle:
    properties:
      _class:
        description: Bundle
        type: string
      _embedded:
        description: 'Embedded objects, keyed by link relation'
        type: object
        required: false
      _links:
        description: 'HAL hyper links, keyed by relation (self, clarify:metadata, clarify:tracks)'
        type: object
      created:
        description: 'Date the bundle was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      external_id:
        description: A string that can refer to an item in an external system. Up to 64 characters.
        type: string
        required: false
      id:
        description: id of the bundle
        type: string
      name:
        description: Name of the bundle. Up to 128 characters.
        type: string
        required: false
      notify_url:
        description: URL for notifications on this bundle
        type: string
        required: false
      updated:
        description: 'Date the bundle was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
      version:
        description: Object version
        type: integer
  Collection:
    properties:
      _class:
        description: Collection
        type: string
      _embedded:
        description: 'Embedded objects, keyed by link relation'
        type: object
        required: false
      _links:
        description: 'HAL hyper links, keyed by relation (items, first, last, next, prev)'
        type: object
      limit:
        description: Maximum number of items requested
        type: integer
      total:
        description: Total number of items available
        type: integer
  Insight:
    properties:
      _class:
        description: Class name of Insight
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent, clarify:bundle)'
        type: object
      bundle_id:
        description: id of the bundle
        type: string
      created:
        description: 'Date the insight was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      data:
        description: Bundle insight data values (only present for some insights)
        type: object
        required: false
      id:
        description: id of the insight
        type: string
      name:
        description: Name of the insight
        type: string
      status:
        description: 'Status of insight: ready, queued, processing, error'
        type: string
      track_data:
        description: 'Array of objects containing insight data values per track, with array indexes matching the tracks array'
        items: {}
        type: array
        required: false
      updated:
        description: 'Date the insight was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
  Insights:
    properties:
      _class:
        description: Insights
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent, [insight:*])'
        type: object
      bundle_id:
        description: id of the bundle
        type: string
      created:
        description: 'Date the insights was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      updated:
        description: 'Date the insights was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
  ItemResult:
    properties:
      score:
        description: Relevance of the item according to the search criteria. A value between 0 and 1
        type: number
      term_results:
        description: Results of each search term for the item. Indexes match the search_terms array
        items:
          type: TermResult
        type: array
  MatchHit:
    properties:
      end:
        description: 'For "text" matches, the index of the character in the string immediately after the matched term (exclusive.) For "audio" matches, the end time in seconds where the word was spoken'
        type: number
        required: false
      start:
        description: 'For "text" matches, the index of the character in the string. For "array" matches, the index of the value in the array. For "audio" matches, the start time in seconds where the word was spoken'
        type: number
  Metadata:
    properties:
      _class:
        description: Metadata
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent)'
        type: object
      bundle_id:
        description: id of the bundle
        type: string
      created:
        description: 'Date the metadata was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      data:
        description: User-defined JSON metadata for the bundle
        type: object
      updated:
        description: 'Date the metadata was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
      version:
        description: Object version
        type: integer
  Ref:
    properties:
      _class:
        description: Ref
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent)'
        type: object
  Ref__of_Bundle_:
    properties:
      _class:
        description: Ref
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, clarify:metadata, clarify:tracks)'
        type: object
      id:
        description: id of the bundle
        type: string
    (oas-definition-name): Ref_(of_Bundle)
  SearchCollection:
    properties:
      _class:
        description: SearchCollection
        type: string
      _embedded:
        description: 'Embedded objects, keyed by link relation'
        type: object
        required: false
      _links:
        description: 'HAL hyper links, keyed by relation (items, first, next, prev)'
        type: object
      item_results:
        description: Search results per item. Indexes match the items array.
        items:
          type: ItemResult
        type: array
      limit:
        description: Maximum number of items requested
        type: integer
      search_terms:
        description: Terms in the search
        items:
          type: SearchTerm
        type: array
      total:
        description: Total number of items available
        type: integer
  SearchTerm:
    properties:
      term:
        description: A term from the query
        type: string
  TermMatch:
    properties:
      field:
        description: 'For "text" or "array" match types, specifies the metadata field that contains the match'
        type: string
        required: false
      hits:
        description: Array listing exactly where the search term was found in a metadata field or audio
        items:
          type: MatchHit
        type: array
      type:
        description: 'Type of match: "text", "array", or "audio"'
        type: string
  TermResult:
    properties:
      matches:
        description: Array of locations where the search term was found in the bundle
        items:
          type: TermMatch
        type: array
      score:
        description: Score for the search term in the item. A value between 0 and 1
        type: number
  Track:
    properties:
      _class:
        description: Track
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent, bundle)'
        type: object
      audio_channel:
        description: The audio channel used for the track ( "" | left | right). Empty string means all channels of audio in the media file are used for the track
        enum:
          - left
          - right
        type: string
      audio_language:
        description: Language of the audio in the track. An RFC5646 language code or empty string. (Ex. en-US)
        type: string
      created:
        description: 'Date the track was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      duration:
        description: Number of seconds of media. Automatically determined
        type: number
      fetch_response_code:
        description: HTTP response code returned from requesting the media_url
        type: integer
      fetch_response_message:
        description: 'If media request fails, a message describing the failure'
        type: string
        required: false
      id:
        description: Id of the track
        type: string
      label:
        description: Label for the track. Up to 128 characters.
        type: string
        required: false
      media_code:
        description: Status code returned from verifying the media
        type: integer
      media_message:
        description: 'If media is invalid, a message describing the problem'
        type: string
        required: false
      media_size:
        description: Number of bytes in the media. Automatically determined
        type: integer
      media_url:
        type: string
      mime_type:
        description: Mime type. This is automatically determined from the media
        type: string
        required: false
      status:
        description: 'Status of track: ready, queued, processing, error'
        type: string
      track:
        description: Track index in the Tracks array
        type: integer
      updated:
        description: 'Date the track was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
  Track__array_item_:
    properties:
      audio_channel:
        description: The audio channel used for the track ( "" | left | right). Empty string means all channels of audio in the media file are used for the track
        enum:
          - left
          - right
        type: string
      audio_language:
        description: Language of the audio in the track. An RFC5646 language code or empty string. (Ex. en-US)
        type: string
      created:
        description: 'Date the track was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      duration:
        description: Number of seconds of media. Automatically determined
        type: number
      fetch_response_code:
        description: HTTP response code returned from requesting the media_url
        type: integer
      fetch_response_message:
        description: 'If media request fails, a message describing the failure'
        type: string
        required: false
      id:
        description: Id of the track
        type: string
      label:
        description: Label for the track. Up to 128 characters.
        type: string
        required: false
      media_code:
        description: Status code returned from verifying the media
        type: integer
      media_message:
        description: 'If media is invalid, a message describing the problem'
        type: string
        required: false
      media_size:
        description: Number of bytes in the media. Automatically determined
        type: integer
      media_url:
        type: string
      mime_type:
        description: Mime type. This is automatically determined from the media
        type: string
        required: false
      status:
        description: 'Status of track: ready, queued, processing, error'
        type: string
      track:
        description: Track index in the Tracks array
        type: integer
      updated:
        description: 'Date the track was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
    (oas-definition-name): Track_(array_item)
  Tracks:
    properties:
      _class:
        description: Tracks
        type: string
      _links:
        description: 'HAL hyper links, keyed by relation (self, parent)'
        type: object
      bundle_id:
        description: id of the bundle
        type: string
      created:
        description: 'Date the tracks was created, ex. "2014-02-25T14:23:45Z"'
        type: string
      status:
        description: 'Summary status of tracks: ready, queued, processing, error'
        type: string
      tracks:
        description: Array of tracks
        items:
          type: Track__array_item_
        type: array
      updated:
        description: 'Date the tracks was updated, ex. "2014-02-25T14:23:45Z"'
        type: string
      version:
        description: Object version
        type: integer
