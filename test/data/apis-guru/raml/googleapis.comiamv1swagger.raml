#%RAML 1.0
title: Google Identity and Access Management (IAM)
version: v1
baseUri: 'https://iam.googleapis.com/'
protocols:
  - HTTPS
description: 'Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls.'
(oas-tags-definition):
  - name: projects
  - name: roles
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/iam/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): iam
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/iam/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  '/{name}':
    displayName: '{name}'
    /serviceAccounts:
      displayName: serviceAccounts
      get:
        displayName: iam.projects.serviceAccounts.list
        description: Lists ServiceAccounts for a project.
        responses:
          '200':
            body:
              application/json:
                type: ListServiceAccountsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: Optional limit on the number of service accounts to include in the response. Further accounts can subsequently be obtained by including the ListServiceAccountsResponse.next_page_token in a subsequent request.
            type: integer
          pageToken:
            description: Optional pagination token returned in an earlier ListServiceAccountsResponse.next_page_token.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      post:
        displayName: iam.projects.serviceAccounts.create
        description: Creates a ServiceAccount and returns it.
        body:
          application/json:
            type: CreateServiceAccountRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: ServiceAccount
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
    uriParameters:
      name:
        description: 'The resource name of the service account key in the following format: `projects/{project}/serviceAccounts/{account}/keys/{key}`. Using `-` as a wildcard for the project will infer the project from the account. The `account` value can be the `email` address or the `unique_id` of the service account.'
        required: true
        type: string
    delete:
      displayName: iam.projects.serviceAccounts.keys.delete
      description: Deletes a ServiceAccountKey.
      responses:
        '200':
          body:
            application/json:
              type: Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    /keys:
      displayName: keys
      post:
        displayName: iam.projects.serviceAccounts.keys.create
        description: Creates a ServiceAccountKey and returns it.
        body:
          application/json:
            type: CreateServiceAccountKeyRequest
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: ServiceAccountKey
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      get:
        displayName: iam.projects.serviceAccounts.keys.list
        description: Lists ServiceAccountKeys.
        responses:
          '200':
            body:
              application/json:
                type: ListServiceAccountKeysResponse
            description: Successful response
        queryParameters:
          keyTypes:
            collectionFormat: multi
            description: 'Filters the types of keys the user wants to include in the list response. Duplicate key types are not allowed. If no key type is provided, all keys are returned.'
            items:
              enum:
                - KEY_TYPE_UNSPECIFIED
                - USER_MANAGED
                - SYSTEM_MANAGED
              type: string
            type: array
            facets:
              collectionFormat: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
    put:
      displayName: iam.projects.serviceAccounts.update
      description: 'Updates a ServiceAccount. Currently, only the following fields are updatable: `display_name` . The `etag` is mandatory.'
      body:
        application/json:
          type: ServiceAccount
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: ServiceAccount
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    get:
      displayName: iam.projects.serviceAccounts.keys.get
      description: Gets the ServiceAccountKey by key id.
      responses:
        '200':
          body:
            application/json:
              type: ServiceAccountKey
          description: Successful response
      queryParameters:
        publicKeyType:
          description: The output format of the public key requested. X509_PEM is the default output format.
          enum:
            - TYPE_NONE
            - TYPE_X509_PEM_FILE
            - TYPE_RAW_PUBLIC_KEY
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
  '/{resource}:testIamPermissions':
    displayName: '{resource}:testIamPermissions'
    uriParameters:
      resource:
        description: 'REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.'
        required: true
        type: string
    post:
      displayName: iam.projects.serviceAccounts.testIamPermissions
      description: Tests the specified permissions against the IAM access control policy for a ServiceAccount.
      body:
        application/json:
          type: TestIamPermissionsRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: TestIamPermissionsResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/roles:queryGrantableRoles':
    displayName: 'roles:queryGrantableRoles'
    post:
      displayName: iam.roles.queryGrantableRoles
      description: Queries roles that can be granted on a particular resource. A role is grantable if it can be used as the role in a binding for a policy for that resource.
      body:
        application/json:
          type: QueryGrantableRolesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: QueryGrantableRolesResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - roles
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/{resource}:setIamPolicy':
    displayName: '{resource}:setIamPolicy'
    uriParameters:
      resource:
        description: 'REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.'
        required: true
        type: string
    post:
      displayName: iam.projects.serviceAccounts.setIamPolicy
      description: Sets the IAM access control policy for a ServiceAccount.
      body:
        application/json:
          type: SetIamPolicyRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Policy
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/{resource}:getIamPolicy':
    displayName: '{resource}:getIamPolicy'
    uriParameters:
      resource:
        description: 'REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.'
        required: true
        type: string
    post:
      displayName: iam.projects.serviceAccounts.getIamPolicy
      description: Returns the IAM access control policy for a ServiceAccount.
      responses:
        '200':
          body:
            application/json:
              type: Policy
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  '/{name}:signBlob':
    displayName: '{name}:signBlob'
    uriParameters:
      name:
        description: 'The resource name of the service account in the following format: `projects/{project}/serviceAccounts/{account}`. Using `-` as a wildcard for the project will infer the project from the account. The `account` value can be the `email` address or the `unique_id` of the service account.'
        required: true
        type: string
    post:
      displayName: iam.projects.serviceAccounts.signBlob
      description: Signs a blob using a service account's system-managed private key.
      body:
        application/json:
          type: SignBlobRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: SignBlobResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
types:
  AuditData:
    description: Audit log information specific to Cloud IAM. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.
    properties:
      policyDelta:
        description: Policy delta between the original policy and the newly set policy.
        type: PolicyDelta
        required: false
  Binding:
    description: Associates `members` with a `role`.
    properties:
      members:
        description: 'Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` or `joe@example.com`. * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.'
        items:
          type: string
        type: array
        required: false
      role:
        description: 'Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required'
        type: string
        required: false
  BindingDelta:
    description: One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.
    properties:
      action:
        description: The action that was performed on a Binding. Required
        enum:
          - ACTION_UNSPECIFIED
          - ADD
          - REMOVE
        type: string
        required: false
      member:
        description: A single identity requesting access for a Cloud Platform resource. Follows the same format of Binding.members. Required
        type: string
        required: false
      role:
        description: 'Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required'
        type: string
        required: false
  CreateServiceAccountKeyRequest:
    description: The service account key create request.
    properties:
      keyAlgorithm:
        description: Which type of key and algorithm to use for the key. The default is currently a 4K RSA key. However this may change in the future.
        enum:
          - KEY_ALG_UNSPECIFIED
          - KEY_ALG_RSA_1024
          - KEY_ALG_RSA_2048
        type: string
        required: false
      privateKeyType:
        description: The output format of the private key. `GOOGLE_CREDENTIALS_FILE` is the default output format.
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_PKCS12_FILE
          - TYPE_GOOGLE_CREDENTIALS_FILE
        type: string
        required: false
  CreateServiceAccountRequest:
    description: The service account create request.
    properties:
      accountId:
        description: 'Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.'
        type: string
        required: false
      serviceAccount:
        description: 'The ServiceAccount resource to create. Currently, only the following values are user assignable: `display_name` .'
        type: ServiceAccount
        required: false
  Empty:
    description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
  ListServiceAccountKeysResponse:
    description: The service account keys list response.
    properties:
      keys:
        description: The public keys for the service account.
        items:
          type: ServiceAccountKey
        type: array
        required: false
  ListServiceAccountsResponse:
    description: The service account list response.
    properties:
      accounts:
        description: The list of matching service accounts.
        items:
          type: ServiceAccount
        type: array
        required: false
      nextPageToken:
        description: 'To retrieve the next page of results, set ListServiceAccountsRequest.page_token to this value.'
        type: string
        required: false
  Policy:
    description: 'Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources. A `Policy` consists of a list of `bindings`. A `Binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM. **Example** { "bindings": [ { "role": "roles/owner", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-other-app@appspot.gserviceaccount.com", ] }, { "role": "roles/viewer", "members": ["user:sean@example.com"] } ] } For a description of IAM and its features, see the [IAM developer''s guide](https://cloud.google.com/iam).'
    properties:
      bindings:
        description: Associates a list of `members` to a `role`. Multiple `bindings` must not be specified for the same `role`. `bindings` with no members will result in an error.
        items:
          type: Binding
        type: array
        required: false
      etag:
        description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.'
        format: byte
        type: string
        facets:
          format: string
        required: false
      version:
        description: Version of the `Policy`. The default version is 0.
        format: int32
        type: integer
        required: false
  PolicyDelta:
    description: The difference delta between two policies.
    properties:
      bindingDeltas:
        description: The delta for Bindings between two policies.
        items:
          type: BindingDelta
        type: array
        required: false
  QueryGrantableRolesRequest:
    description: The grantable role query request.
    properties:
      fullResourceName:
        description: 'Required. The full resource name to query from the list of grantable roles. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`.'
        type: string
        required: false
  QueryGrantableRolesResponse:
    description: The grantable role query response.
    properties:
      roles:
        description: The list of matching roles.
        items:
          type: Role
        type: array
        required: false
  Role:
    description: A role in the Identity and Access Management API.
    properties:
      description:
        description: Optional. A human-readable description for the role.
        type: string
        required: false
      name:
        description: 'The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for curated roles and organizations/{organization-id}/roles/logging.viewer for custom roles.'
        type: string
        required: false
      title:
        description: Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
        type: string
        required: false
  ServiceAccount:
    description: 'A service account in the Identity and Access Management API. To create a service account, specify the `project_id` and the `account_id` for the account. The `account_id` is unique within the project, and is used to generate the service account email address and a stable `unique_id`. If the account already exists, the account''s resource name is returned in util::Status''s ResourceInfo.resource_name in the format of projects/{project}/serviceAccounts/{email}. The caller can use the name in other methods to access the account. All other methods can identify the service account using the format `projects/{project}/serviceAccounts/{account}`. Using `-` as a wildcard for the project will infer the project from the account. The `account` value can be the `email` address or the `unique_id` of the service account.'
    properties:
      displayName:
        description: Optional. A user-specified description of the service account. Must be fewer than 100 UTF-8 bytes.
        type: string
        required: false
      email:
        description: '@OutputOnly The email address of the service account.'
        type: string
        required: false
      etag:
        description: Used to perform a consistent read-modify-write.
        format: byte
        type: string
        facets:
          format: string
        required: false
      name:
        description: 'The resource name of the service account in the following format: `projects/{project}/serviceAccounts/{account}`. Requests using `-` as a wildcard for the project will infer the project from the `account` and the `account` value can be the `email` address or the `unique_id` of the service account. In responses the resource name will always be in the format `projects/{project}/serviceAccounts/{email}`.'
        type: string
        required: false
      oauth2ClientId:
        description: '@OutputOnly. The OAuth2 client id for the service account. This is used in conjunction with the OAuth2 clientconfig API to make three legged OAuth2 (3LO) flows to access the data of Google users.'
        type: string
        required: false
      projectId:
        description: '@OutputOnly The id of the project that owns the service account.'
        type: string
        required: false
      uniqueId:
        description: '@OutputOnly The unique and stable id of the service account.'
        type: string
        required: false
  ServiceAccountKey:
    description: 'Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed key-pairs are managed automatically by Google, and rotated daily without user intervention. The private key never leaves Google''s servers to maximize security. Public keys for all service accounts are also published at the OAuth2 Service Account API.'
    properties:
      keyAlgorithm:
        description: Specifies the algorithm (and possibly key size) for the key.
        enum:
          - KEY_ALG_UNSPECIFIED
          - KEY_ALG_RSA_1024
          - KEY_ALG_RSA_2048
        type: string
        required: false
      name:
        description: 'The resource name of the service account key in the following format `projects/{project}/serviceAccounts/{account}/keys/{key}`.'
        type: string
        required: false
      privateKeyData:
        description: The private key data. Only provided in `CreateServiceAccountKey` responses.
        format: byte
        type: string
        facets:
          format: string
        required: false
      privateKeyType:
        description: 'The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.'
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_PKCS12_FILE
          - TYPE_GOOGLE_CREDENTIALS_FILE
        type: string
        required: false
      publicKeyData:
        description: The public key data. Only provided in `GetServiceAccountKey` responses.
        format: byte
        type: string
        facets:
          format: string
        required: false
      validAfterTime:
        description: The key can be used after this timestamp.
        type: string
        required: false
      validBeforeTime:
        description: The key can be used before this timestamp.
        type: string
        required: false
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.'
        type: Policy
        required: false
  SignBlobRequest:
    description: The service account sign blob request.
    properties:
      bytesToSign:
        description: The bytes to sign.
        format: byte
        type: string
        facets:
          format: string
        required: false
  SignBlobResponse:
    description: The service account sign blob response.
    properties:
      keyId:
        description: The id of the key used to sign the blob.
        type: string
        required: false
      signature:
        description: The signed blob.
        format: byte
        type: string
        facets:
          format: string
        required: false
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as ''*'' or ''storage.*'') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
        items:
          type: string
        type: array
        required: false
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
        items:
          type: string
        type: array
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
