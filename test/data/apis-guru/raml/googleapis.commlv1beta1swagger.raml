#%RAML 1.0
title: Google Cloud Machine Learning
version: v1beta1
baseUri: 'https://ml.googleapis.com/'
protocols:
  - HTTPS
description: An API to enable creating and using machine learning models.
(oas-tags-definition):
  - name: projects
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://ml.googleapis.com/$discovery/rest?version=v1beta1'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): ml
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/ml/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
    description: Oauth 2.0 authentication
/v1beta1:
  displayName: v1beta1
  '/{name}:setDefault':
    displayName: '{name}:setDefault'
    uriParameters:
      name:
        description: |-
          Required. The name of the version to make the default for the model. You
          can get the names of all the versions of a model by calling
          [projects.models.versions.list](/ml/reference/rest/v1beta1/projects.models.versions/list).

          Authorization: requires `Editor` role on the parent project.
        required: true
        type: string
    post:
      displayName: ml.projects.models.versions.setDefault
      description: |-
        Designates a version to be the default for the model.

        The default version is used for prediction requests made against the model
        that don't specify a version.

        The first version to be created for a model is automatically set as the
        default. You must make any subsequent changes to the default version
        setting manually using this method.
      body:
        application/json:
          type: GoogleCloudMlV1beta1__SetDefaultVersionRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: GoogleCloudMlV1beta1__Version
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/{parent}':
    displayName: '{parent}'
    /versions:
      displayName: versions
      post:
        displayName: ml.projects.models.versions.create
        description: |-
          Creates a new version of a model from a trained TensorFlow model.

          If the version created in the cloud by this call is the first deployed
          version of the specified model, it will be made the default version of the
          model. When you add a version to a model that already has one or more
          versions, the default version does not automatically change. If you want a
          new version to be the default, you must call
          [projects.models.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
        body:
          application/json:
            type: GoogleCloudMlV1beta1__Version
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: GoogleLongrunning__Operation
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
      get:
        displayName: ml.projects.models.versions.list
        description: |-
          Gets basic information about all the versions of a model.

          If you expect that a model has a lot of versions, or if you need to handle
          only a limited number of results at a time, you can request that the list
          be retrieved in batches (called pages):
        responses:
          '200':
            body:
              application/json:
                type: GoogleCloudMlV1beta1__ListVersionsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: |-
              Optional. The number of versions to retrieve per "page" of results. If
              there are more remaining results than this number, the response message
              will contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
            type: integer
          pageToken:
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
    /jobs:
      displayName: jobs
      get:
        displayName: ml.projects.jobs.list
        description: Lists the jobs in the project.
        responses:
          '200':
            body:
              application/json:
                type: GoogleCloudMlV1beta1__ListJobsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: |-
              Optional. The number of jobs to retrieve per "page" of results. If there
              are more remaining results than this number, the response message will
              contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
            type: integer
          filter:
            description: Optional. Specifies the subset of jobs to retrieve.
            type: string
          pageToken:
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
      post:
        displayName: ml.projects.jobs.create
        description: Creates a training or a batch prediction job.
        body:
          application/json:
            type: GoogleCloudMlV1beta1__Job
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: GoogleCloudMlV1beta1__Job
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
    /models:
      displayName: models
      post:
        displayName: ml.projects.models.create
        description: |-
          Creates a model which will later contain one or more versions.

          You must add at least one version before you can request predictions from
          the model. Add versions by calling
          [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create).
        body:
          application/json:
            type: GoogleCloudMlV1beta1__Model
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: GoogleCloudMlV1beta1__Model
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
      get:
        displayName: ml.projects.models.list
        description: |-
          Lists the models in a project.

          Each project can contain multiple models, and each model can have multiple
          versions.
        responses:
          '200':
            body:
              application/json:
                type: GoogleCloudMlV1beta1__ListModelsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: |-
              Optional. The number of models to retrieve per "page" of results. If there
              are more remaining results than this number, the response message will
              contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
            type: integer
          pageToken:
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
  '/{name}':
    displayName: '{name}'
    uriParameters:
      name:
        description: The name of the operation resource.
        required: true
        type: string
    delete:
      displayName: ml.projects.operations.delete
      description: |-
        Deletes a long-running operation. This method indicates that the client is
        no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      responses:
        '200':
          body:
            application/json:
              type: GoogleProtobuf__Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
    /operations:
      displayName: operations
      get:
        displayName: ml.projects.operations.list
        description: |-
          Lists operations that match the specified filter in the request. If the
          server doesn't support this method, it returns `UNIMPLEMENTED`.

          NOTE: the `name` binding below allows API services to override the binding
          to use different resource name schemes, such as `users/*/operations`.
        responses:
          '200':
            body:
              application/json:
                type: GoogleLongrunning__ListOperationsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: The standard list page size.
            type: integer
          filter:
            description: The standard list filter.
            type: string
          pageToken:
            description: The standard list page token.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/cloud-platform'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
    get:
      displayName: ml.projects.operations.get
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      responses:
        '200':
          body:
            application/json:
              type: GoogleLongrunning__Operation
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
  '/{name}:cancel':
    displayName: '{name}:cancel'
    uriParameters:
      name:
        description: The name of the operation resource to be cancelled.
        required: true
        type: string
    post:
      displayName: ml.projects.operations.cancel
      description: |-
        Starts asynchronous cancellation on a long-running operation.  The server
        makes a best effort to cancel the operation, but success is not
        guaranteed.  If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
        Operations.GetOperation or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an Operation.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`.
      body:
        application/json:
          type: GoogleCloudMlV1beta1__CancelJobRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: GoogleProtobuf__Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/{name}:predict':
    displayName: '{name}:predict'
    uriParameters:
      name:
        description: |-
          Required. The resource name of a model or a version.

          Authorization: requires `Viewer` role on the parent project.
        required: true
        type: string
    post:
      displayName: ml.projects.predict
      description: |-
        Performs prediction on the data in the request.

        Responses are very similar to requests. There are two top-level fields,
        each of which are JSON lists:

        <dl>
          <dt>predictions</dt>
          <dd>The list of predictions, one per instance in the request.</dd>
          <dt>error</dt>
          <dd>An error message returned instead of a prediction list if any
              instance produced an error.</dd>
        </dl>

        If the call is successful, the response body will contain one prediction
        entry per instance in the request body. If prediction fails for any
        instance, the response body will contain no predictions and will contian
        a single error entry instead.

        Even though there is one prediction per instance, the format of a
        prediction is not directly related to the format of an instance.
        Predictions take whatever format is specified in the outputs collection
        defined in the model. The collection of predictions is returned in a JSON
        list. Each member of the list can be a simple value, a list, or a JSON
        object of any complexity. If your model has more than one output tensor,
        each prediction will be a JSON object containing a name/value pair for each
        output. The names identify the output aliases in the graph.

        The following examples show some possible responses:

        A simple set of predictions for three input instances, where each
        prediction is an integer value:
        <pre>
        {"predictions": [5, 4, 3]}
        </pre>
        A more complex set of predictions, each containing two named values that
        correspond to output tensors, named **label** and **scores** respectively.
        The value of **label** is the predicted category ("car" or "beach") and
        **scores** contains a list of probabilities for that instance across the
        possible categories.
        <pre>
        {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
                         {"label": "car", "scores": [0.75, 0.25]}]}
        </pre>
        A response when there is an error processing an input instance:
        <pre>
        {"error": "Divide by zero"}
        </pre>
      body:
        application/json:
          type: GoogleCloudMlV1beta1__PredictRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: GoogleApi__HttpBody
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/{name}:getConfig':
    displayName: '{name}:getConfig'
    uriParameters:
      name:
        description: |-
          Required. The project name.

          Authorization: requires `Viewer` role on the specified project.
        required: true
        type: string
    get:
      displayName: ml.projects.getConfig
      description: |-
        Get the service account information associated with your project. You need
        this information in order to grant the service account persmissions for
        the Google Cloud Storage location where you put your model training code
        for training the model with Google Cloud Machine Learning.
      responses:
        '200':
          body:
            application/json:
              type: GoogleCloudMlV1beta1__GetConfigResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
types:
  GoogleApi__HttpBody:
    description: |-
      Message that represents an arbitrary HTTP body. It should only be used for
      payload formats that can't be represented as JSON, such as raw binary or
      an HTML page.


      This message can be used both in streaming and non-streaming API methods in
      the request as well as the response.

      It can be used as a top-level request field, which is convenient if one
      wants to extract parameters from either the URL or HTTP template into the
      request fields and also want access to the raw HTTP body.

      Example:

          message GetResourceRequest {
            // A unique request id.
            string request_id = 1;

            // The raw HTTP body is bound to this field.
            google.api.HttpBody http_body = 2;
          }

          service ResourceService {
            rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
            rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty);
          }

      Example with streaming methods:

          service CaldavService {
            rpc GetCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
            rpc UpdateCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
          }

      Use of this type only changes how the request and response bodies are
      handled, all other features will continue to work unchanged.
    properties:
      contentType:
        description: The HTTP Content-Type string representing the content type of the body.
        type: string
        required: false
      data:
        description: HTTP body binary data.
        format: byte
        type: string
        facets:
          format: string
        required: false
  GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric:
    description: An observed value of a metric.
    properties:
      objectiveValue:
        description: The objective value at this training step.
        format: double
        type: number
        required: false
      trainingStep:
        description: The global training step for this metric.
        format: int64
        type: string
        facets:
          format: string
        required: false
  GoogleCloudMlV1beta1__CancelJobRequest:
    description: Request message for the CancelJob method.
    properties: {}
  GoogleCloudMlV1beta1__GetConfigResponse:
    description: Returns service account information associated with a project.
    properties:
      serviceAccount:
        description: The service account Cloud ML uses to access resources in the project.
        type: string
        required: false
      serviceAccountProject:
        description: The project number for `service_account`.
        format: int64
        type: string
        facets:
          format: string
        required: false
  GoogleCloudMlV1beta1__HyperparameterOutput:
    description: |-
      Represents the result of a single hyperparameter tuning trial from a
      training job. The TrainingOutput object that is returned on successful
      completion of a training job with hyperparameter tuning includes a list
      of HyperparameterOutput objects, one for each successful trial.
    properties:
      allMetrics:
        description: All recorded object metrics for this trial.
        items:
          type: GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric
        type: array
        required: false
      finalMetric:
        description: The final objective metric seen for this trial.
        type: GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric
        required: false
      hyperparameters:
        description: The hyperparameters given to this trial.
        type: object
        required: false
        properties:
          //:
            type: string
      trialId:
        description: The trial id for these results.
        type: string
        required: false
  GoogleCloudMlV1beta1__HyperparameterSpec:
    description: Represents a set of hyperparameters to optimize.
    properties:
      goal:
        description: |-
          Required. The type of goal to use for tuning. Available types are
          `MAXIMIZE` and `MINIMIZE`.

          Defaults to `MAXIMIZE`.
        enum:
          - GOAL_TYPE_UNSPECIFIED
          - MAXIMIZE
          - MINIMIZE
        type: string
        required: false
      maxParallelTrials:
        description: |-
          Optional. The number of training trials to run concurrently.
          You can reduce the time it takes to perform hyperparameter tuning by adding
          trials in parallel. However, each trail only benefits from the information
          gained in completed trials. That means that a trial does not get access to
          the results of trials running at the same time, which could reduce the
          quality of the overall optimization.

          Each trial will use the same scale tier and machine types.

          Defaults to one.
        format: int32
        type: integer
        required: false
      maxTrials:
        description: |-
          Optional. How many training trials should be attempted to optimize
          the specified hyperparameters.

          Defaults to one.
        format: int32
        type: integer
        required: false
      params:
        description: Required. The set of parameters to tune.
        items:
          type: GoogleCloudMlV1beta1__ParameterSpec
        type: array
        required: false
  GoogleCloudMlV1beta1__Job:
    description: Represents a training or prediction job.
    properties:
      createTime:
        description: Output only. When the job was created.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      endTime:
        description: Output only. When the job processing was completed.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      errorMessage:
        description: Output only. The details of a failure or a cancellation.
        type: string
        required: false
      jobId:
        description: Required. The user-specified id of the job.
        type: string
        required: false
      predictionInput:
        description: Input parameters to create a prediction job.
        type: GoogleCloudMlV1beta1__PredictionInput
        required: false
      predictionOutput:
        description: The current prediction job result.
        type: GoogleCloudMlV1beta1__PredictionOutput
        required: false
      startTime:
        description: Output only. When the job processing was started.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      state:
        description: Output only. The detailed state of a job.
        enum:
          - STATE_UNSPECIFIED
          - QUEUED
          - PREPARING
          - RUNNING
          - SUCCEEDED
          - FAILED
          - CANCELLING
          - CANCELLED
        type: string
        required: false
      trainingInput:
        description: Input parameters to create a training job.
        type: GoogleCloudMlV1beta1__TrainingInput
        required: false
      trainingOutput:
        description: The current training job result.
        type: GoogleCloudMlV1beta1__TrainingOutput
        required: false
  GoogleCloudMlV1beta1__ListJobsResponse:
    description: Response message for the ListJobs method.
    properties:
      jobs:
        description: The list of jobs.
        items:
          type: GoogleCloudMlV1beta1__Job
        type: array
        required: false
      nextPageToken:
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
        type: string
        required: false
  GoogleCloudMlV1beta1__ListModelsResponse:
    description: Response message for the ListModels method.
    properties:
      models:
        description: The list of models.
        items:
          type: GoogleCloudMlV1beta1__Model
        type: array
        required: false
      nextPageToken:
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
        type: string
        required: false
  GoogleCloudMlV1beta1__ListVersionsResponse:
    description: Response message for the ListVersions method.
    properties:
      nextPageToken:
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
        type: string
        required: false
      versions:
        description: The list of versions.
        items:
          type: GoogleCloudMlV1beta1__Version
        type: array
        required: false
  GoogleCloudMlV1beta1__Model:
    description: |-
      Represents a machine learning solution.

      A model can have multiple versions, each of which is a deployed, trained
      model ready to receive prediction requests. The model itself is just a
      container.
    properties:
      defaultVersion:
        description: |-
          Output only. The default version of the model. This version will be used to
          handle prediction requests that do not specify a version.

          You can change the default version by calling
          [projects.methods.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
        type: GoogleCloudMlV1beta1__Version
        required: false
      description:
        description: Optional. The description specified for the model when it was created.
        type: string
        required: false
      name:
        description: |-
          Required. The name specified for the model when it was created.

          The model name must be unique within the project it is created in.
        type: string
        required: false
  GoogleCloudMlV1beta1__OperationMetadata:
    description: Represents the metadata of the long-running operation.
    properties:
      createTime:
        description: The time the operation was submitted.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      endTime:
        description: The time operation processing completed.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      isCancellationRequested:
        description: Indicates whether a request to cancel this operation has been made.
        type: boolean
        required: false
      modelName:
        description: Contains the name of the model associated with the operation.
        type: string
        required: false
      operationType:
        description: The operation type.
        enum:
          - OPERATION_TYPE_UNSPECIFIED
          - CREATE_VERSION
          - DELETE_VERSION
          - DELETE_MODEL
        type: string
        required: false
      startTime:
        description: The time operation processing started.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      version:
        description: Contains the version associated with the operation.
        type: GoogleCloudMlV1beta1__Version
        required: false
  GoogleCloudMlV1beta1__ParameterSpec:
    description: Represents a single hyperparameter to optimize.
    properties:
      categoricalValues:
        description: Required if type is `CATEGORICAL`. The list of possible categories.
        items:
          type: string
        type: array
        required: false
      discreteValues:
        description: |-
          Required if type is `DISCRETE`.
          A list of feasible points.
          The list should be in strictly increasing order. For instance, this
          parameter might have possible settings of 1.5, 2.5, and 4.0. This list
          should not contain more than 1,000 values.
        items:
          format: double
          type: number
        type: array
        required: false
      maxValue:
        description: |-
          Required if typeis `DOUBLE` or `INTEGER`. This field
          should be unset if type is `CATEGORICAL`. This value should be integers if
          type is `INTEGER`.
        format: double
        type: number
        required: false
      minValue:
        description: |-
          Required if type is `DOUBLE` or `INTEGER`. This field
          should be unset if type is `CATEGORICAL`. This value should be integers if
          type is INTEGER.
        format: double
        type: number
        required: false
      parameterName:
        description: |-
          Required. The parameter name must be unique amongst all ParameterConfigs in
          a HyperparameterSpec message. E.g., "learning_rate".
        type: string
        required: false
      scaleType:
        description: |-
          Optional. How the parameter should be scaled to the hypercube.
          Leave unset for categorical parameters.
          Some kind of scaling is strongly recommended for real or integral
          parameters (e.g., `UNIT_LINEAR_SCALE`).
        enum:
          - NONE
          - UNIT_LINEAR_SCALE
          - UNIT_LOG_SCALE
          - UNIT_REVERSE_LOG_SCALE
        type: string
        required: false
      type:
        description: Required. The type of the parameter.
        enum:
          - PARAMETER_TYPE_UNSPECIFIED
          - DOUBLE
          - INTEGER
          - CATEGORICAL
          - DISCRETE
        type: string
        required: false
  GoogleCloudMlV1beta1__PredictRequest:
    description: |-
      Request for predictions to be issued against a trained model.

      The body of the request is a single JSON object with a single top-level
      field:

      <dl>
        <dt>instances</dt>
        <dd>A JSON array containing values representing the instances to use for
            prediction.</dd>
      </dl>

      The structure of each element of the instances list is determined by your
      model's input definition. Instances can include named inputs or can contain
      only unlabeled values.

      Most data does not include named inputs. Some instances will be simple
      JSON values (boolean, number, or string). However, instances are often lists
      of simple values, or complex nested lists. Here are some examples of request
      bodies:

      CSV data with each row encoded as a string value:
      <pre>
      {"instances": ["1.0,true,\\"x\\"", "-2.0,false,\\"y\\""]}
      </pre>
      Plain text:
      <pre>
      {"instances": ["the quick brown fox", "la bruja le dio"]}
      </pre>
      Sentences encoded as lists of words (vectors of strings):
      <pre>
      {"instances": [["the","quick","brown"], ["la","bruja","le"]]}
      </pre>
      Floating point scalar values:
      <pre>
      {"instances": [0.0, 1.1, 2.2]}
      </pre>
      Vectors of integers:
      <pre>
      {"instances": [[0, 1, 2], [3, 4, 5],...]}
      </pre>
      Tensors (in this case, two-dimensional tensors):
      <pre>
      {"instances": [[[0, 1, 2], [3, 4, 5]], ...]}
      </pre>
      Images represented as a three-dimensional list. In this encoding scheme the
      first two dimensions represent the rows and columns of the image, and the
      third contains the R, G, and B values for each pixel.
      <pre>
      {"instances": [[[[138, 30, 66], [130, 20, 56], ...]]]]}
      </pre>
      Data must be encoded as UTF-8. If your data uses another character encoding,
      you must base64 encode the data and mark it as binary. To mark a JSON string
      as binary, replace it with an object with a single attribute named `b`:
      <pre>{"b": "..."} </pre>
      For example:

      Two Serialized tf.Examples (fake data, for illustrative purposes only):
      <pre>
      {"instances": [{"b64": "X5ad6u"}, {"b64": "IA9j4nx"}]}
      </pre>
      Two JPEG image byte strings (fake data, for illustrative purposes only):
      <pre>
      {"instances": [{"b64": "ASa8asdf"}, {"b64": "JLK7ljk3"}]}
      </pre>
      If your data includes named references, format each instance as a JSON object
      with the named references as the keys:

      JSON input data to be preprocessed:
      <pre>
      {"instances": [{"a": 1.0,  "b": true,  "c": "x"},
                     {"a": -2.0, "b": false, "c": "y"}]}
      </pre>
      Some models have an underlying TensorFlow graph that accepts multiple input
      tensors. In this case, you should use the names of JSON name/value pairs to
      identify the input tensors, as shown in the following exmaples:

      For a graph with input tensor aliases "tag" (string) and "image"
      (base64-encoded string):
      <pre>
      {"instances": [{"tag": "beach", "image": {"b64": "ASa8asdf"}},
                     {"tag": "car", "image": {"b64": "JLK7ljk3"}}]}
      </pre>
      For a graph with input tensor aliases "tag" (string) and "image"
      (3-dimensional array of 8-bit ints):
      <pre>
      {"instances": [{"tag": "beach", "image": [[[263, 1, 10], [262, 2, 11], ...]]},
                     {"tag": "car", "image": [[[10, 11, 24], [23, 10, 15], ...]]}]}
      </pre>
      If the call is successful, the response body will contain one prediction
      entry per instance in the request body. If prediction fails for any
      instance, the response body will contain no predictions and will contian
      a single error entry instead.
    properties:
      httpBody:
        description: |-

          Required. The prediction request body.
        type: GoogleApi__HttpBody
        required: false
  GoogleCloudMlV1beta1__PredictionInput:
    description: Represents input parameters for a prediction job.
    properties:
      dataFormat:
        description: Required. The format of the input data files.
        enum:
          - DATA_FORMAT_UNSPECIFIED
          - TEXT
          - TF_RECORD
          - TF_RECORD_GZIP
        type: string
        required: false
      inputPaths:
        description: |-
          Required. The Google Cloud Storage location of the input data files.
          May contain wildcards.
        items:
          type: string
        type: array
        required: false
      maxWorkerCount:
        description: |-
          Optional. The maximum number of workers to be used for parallel processing.
          Defaults to 10 if not specified.
        format: int64
        type: string
        facets:
          format: string
        required: false
      modelName:
        description: |-
          Use this field if you want to use the default version for the specified
          model. The string must use the following format:

          `"projects/<var>[YOUR_PROJECT]</var>/models/<var>[YOUR_MODEL]</var>"`
        type: string
        required: false
      outputPath:
        description: Required. The output Google Cloud Storage location.
        type: string
        required: false
      region:
        description: Required. The Google Compute Engine region to run the prediction job in.
        type: string
        required: false
      versionName:
        description: |-
          Use this field if you want to specify a version of the model to use. The
          string is formatted the same way as `model_version`, with the addition
          of the version information:

          `"projects/<var>[YOUR_PROJECT]</var>/models/<var>YOUR_MODEL/versions/<var>[YOUR_VERSION]</var>"`
        type: string
        required: false
  GoogleCloudMlV1beta1__PredictionOutput:
    description: Represents results of a prediction job.
    properties:
      errorCount:
        description: The number of data instances which resulted in errors.
        format: int64
        type: string
        facets:
          format: string
        required: false
      outputPath:
        description: The output Google Cloud Storage location provided at the job creation time.
        type: string
        required: false
      predictionCount:
        description: The number of generated predictions.
        format: int64
        type: string
        facets:
          format: string
        required: false
  GoogleCloudMlV1beta1__SetDefaultVersionRequest:
    description: Request message for the SetDefaultVersion request.
    properties: {}
  GoogleCloudMlV1beta1__TrainingInput:
    description: Represents input parameters for a training job.
    properties:
      args:
        description: Optional. Command line arguments to pass to the program.
        items:
          type: string
        type: array
        required: false
      hyperparameters:
        description: Optional. The set of Hyperparameters to tune.
        type: GoogleCloudMlV1beta1__HyperparameterSpec
        required: false
      masterType:
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's master worker.

          The following types are supported:

          <dl>
            <dt>standard</dt>
            <dd>
            A basic machine configuration suitable for training simple models with
            small to moderate datasets.
            </dd>
            <dt>large_model</dt>
            <dd>
            A machine with a lot of memory, specially suited for parameter servers
            when your model is large (having many hidden layers or layers with very
            large numbers of nodes).
            </dd>
            <dt>complex_model_s</dt>
            <dd>
            A machine suitable for the master and workers of the cluster when your
            model requires more computation than the standard machine can handle
            satisfactorily.
            </dd>
            <dt>complex_model_m</dt>
            <dd>
            A machine with roughly twice the number of cores and roughly double the
            memory of <code suppresswarning="true">complex_model_s</code>.
            </dd>
            <dt>complex_model_l</dt>
            <dd>
            A machine with roughly twice the number of cores and roughly double the
            memory of <code suppresswarning="true">complex_model_m</code>.
            </dd>
          </dl>

          You must set this value when `scaleTier` is set to `CUSTOM`.
        type: string
        required: false
      packageUris:
        description: |-
          Required. The Google Cloud Storage location of the packages with
          the training program and any additional dependencies.
        items:
          type: string
        type: array
        required: false
      parameterServerCount:
        description: |-
          Optional. The number of parameter server replicas to use for the training
          job. Each replica in the cluster will be of the type specified in
          `parameter_server_type`.

          This value can only be used when `scale_tier` is set to `CUSTOM`.If you
          set this value, you must also set `parameter_server_type`.
        format: int64
        type: string
        facets:
          format: string
        required: false
      parameterServerType:
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's parameter server.

          The supported values are the same as those described in the entry for
          `master_type`.

          This value must be present when `scaleTier` is set to `CUSTOM` and
          `parameter_server_count` is greater than zero.
        type: string
        required: false
      pythonModule:
        description: Required. The Python module name to run after installing the packages.
        type: string
        required: false
      region:
        description: Required. The Google Compute Engine region to run the training job in.
        type: string
        required: false
      scaleTier:
        description: |-
          Required. Specifies the machine types, the number of replicas for workers
          and parameter servers.
        enum:
          - BASIC
          - STANDARD_1
          - PREMIUM_1
          - CUSTOM
        type: string
        required: false
      workerCount:
        description: |-
          Optional. The number of worker replicas to use for the training job. Each
          replica in the cluster will be of the type specified in `worker_type`.

          This value can only be used when `scale_tier` is set to `CUSTOM`. If you
          set this value, you must also set `worker_type`.
        format: int64
        type: string
        facets:
          format: string
        required: false
      workerType:
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's worker nodes.

          The supported values are the same as those described in the entry for
          `masterType`.

          This value must be present when `scaleTier` is set to `CUSTOM` and
          `workerCount` is greater than zero.
        type: string
        required: false
  GoogleCloudMlV1beta1__TrainingOutput:
    description: Represents results of a training job.
    properties:
      completedTrialCount:
        description: The number of hyperparameter tuning trials that completed successfully.
        format: int64
        type: string
        facets:
          format: string
        required: false
      consumedMlUnits:
        description: The amount of ML units consumed by the job.
        format: double
        type: number
        required: false
      trials:
        description: Results for individual Hyperparameter trials.
        items:
          type: GoogleCloudMlV1beta1__HyperparameterOutput
        type: array
        required: false
  GoogleCloudMlV1beta1__Version:
    description: |-
      Represents a version of the model.

      Each version is a trained model deployed in the cloud, ready to handle
      prediction requests. A model can have multiple versions. You can get
      information about all of the versions of a given model by calling
      [projects.models.versions.list](/ml/reference/rest/v1beta1/projects.models.versions/list).
    properties:
      createTime:
        description: Output only. The time the version was created.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      deploymentUri:
        description: |-
          Required. The Google Cloud Storage location of the trained model used to
          create the version. See the
          [overview of model deployment](/ml/docs/concepts/deployment-overview) for
          more informaiton.

          When passing Version to
          [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create)
          the model service uses the specified location as the source of the model.
          Once deployed, the model version is hosted by the prediction service, so
          this location is useful only as a historical record.
        type: string
        required: false
      description:
        description: Optional. The description specified for the version when it was created.
        type: string
        required: false
      isDefault:
        description: |-
          Output only. If true, this version will be used to handle prediction
          requests that do not specify a version.

          You can change the default version by calling
          [projects.methods.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
        type: boolean
        required: false
      lastUseTime:
        description: Output only. The time the version was last used for prediction.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      name:
        description: |-
          Required.The name specified for the version when it was created.

          The version name must be unique within the model it is created in.
        type: string
        required: false
  GoogleLongrunning__ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
        required: false
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          type: GoogleLongrunning__Operation
        type: array
        required: false
  GoogleLongrunning__Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If true, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
        required: false
      error:
        description: The error result of the operation in case of failure or cancellation.
        type: GoogleRpc__Status
        required: false
      metadata:
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
        required: false
        properties:
          //:
            description: Properties of the object. Contains field @type with type URL.
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
        required: false
      response:
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
        required: false
        properties:
          //:
            description: Properties of the object. Contains field @type with type URL.
  GoogleProtobuf__Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
  GoogleRpc__Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` which can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting purpose.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
        required: false
      details:
        description: |-
          A list of messages that carry the error details.  There will be a
          common set of message types for APIs to use.
        items:
          type: object
          properties:
            //:
              description: Properties of the object. Contains field @type with type URL.
        type: array
        required: false
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
        enum:
          - '1'
          - '2'
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
        enum:
          - json
          - media
          - proto
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
