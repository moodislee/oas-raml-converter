#%RAML 1.0
title: Google Cloud Natural Language
version: v1
baseUri: 'https://language.googleapis.com/'
protocols:
  - HTTPS
description: 'Google Cloud Natural Language API provides natural language understanding technologies to developers. Examples include sentiment analysis, entity recognition, and text annotations.'
(oas-tags-definition):
  - name: documents
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://language.googleapis.com/$discovery/rest?version=v1'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): language
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/natural-language/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  '/documents:annotateText':
    displayName: 'documents:annotateText'
    post:
      displayName: language.documents.annotateText
      description: |-
        A convenience method that provides all the features that analyzeSentiment,
        analyzeEntities, and analyzeSyntax provide in one call.
      body:
        application/json:
          type: AnnotateTextRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: AnnotateTextResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - documents
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/documents:analyzeSyntax':
    displayName: 'documents:analyzeSyntax'
    post:
      displayName: language.documents.analyzeSyntax
      description: |-
        Analyzes the syntax of the text and provides sentence boundaries and
        tokenization along with part of speech tags, dependency trees, and other
        properties.
      body:
        application/json:
          type: AnalyzeSyntaxRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: AnalyzeSyntaxResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - documents
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/documents:analyzeSentiment':
    displayName: 'documents:analyzeSentiment'
    post:
      displayName: language.documents.analyzeSentiment
      description: Analyzes the sentiment of the provided text.
      body:
        application/json:
          type: AnalyzeSentimentRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: AnalyzeSentimentResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - documents
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/documents:analyzeEntities':
    displayName: 'documents:analyzeEntities'
    post:
      displayName: language.documents.analyzeEntities
      description: |-
        Finds named entities (currently finds proper names) in the text,
        entity types, salience, mentions for each entity, and other properties.
      body:
        application/json:
          type: AnalyzeEntitiesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: AnalyzeEntitiesResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/cloud-platform'
      (oas-tags):
        - documents
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
types:
  AnalyzeEntitiesRequest:
    description: The entity analysis request message.
    properties:
      document:
        description: Input document.
        type: Document
        required: false
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
        required: false
  AnalyzeEntitiesResponse:
    description: The entity analysis response message.
    properties:
      entities:
        description: The recognized entities in the input document.
        items:
          type: Entity
        type: array
        required: false
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See `Document.language` field for more details.
        type: string
        required: false
  AnalyzeSentimentRequest:
    description: The sentiment analysis request message.
    properties:
      document:
        description: |-
          Input document. Currently, `analyzeSentiment` only supports English text
          (Document.language="EN").
        type: Document
        required: false
      encodingType:
        description: The encoding type used by the API to calculate sentence offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
        required: false
  AnalyzeSentimentResponse:
    description: The sentiment analysis response message.
    properties:
      documentSentiment:
        description: The overall sentiment of the input document.
        type: Sentiment
        required: false
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See `Document.language` field for more details.
        type: string
        required: false
      sentences:
        description: The sentiment for all the sentences in the document.
        items:
          type: Sentence
        type: array
        required: false
  AnalyzeSyntaxRequest:
    description: The syntax analysis request message.
    properties:
      document:
        description: Input document.
        type: Document
        required: false
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
        required: false
  AnalyzeSyntaxResponse:
    description: The syntax analysis response message.
    properties:
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See `Document.language` field for more details.
        type: string
        required: false
      sentences:
        description: Sentences in the input document.
        items:
          type: Sentence
        type: array
        required: false
      tokens:
        description: 'Tokens, along with their syntactic information, in the input document.'
        items:
          type: Token
        type: array
        required: false
  AnnotateTextRequest:
    description: |-
      The request message for the text annotation API, which can perform multiple
      analysis types (sentiment, entities, and syntax) in one call.
    properties:
      document:
        description: Input document.
        type: Document
        required: false
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
        required: false
      features:
        description: The enabled features.
        type: Features
        required: false
  AnnotateTextResponse:
    description: The text annotations response message.
    properties:
      documentSentiment:
        description: |-
          The overall sentiment for the document. Populated if the user enables
          AnnotateTextRequest.Features.extract_document_sentiment.
        type: Sentiment
        required: false
      entities:
        description: |-
          Entities, along with their semantic information, in the input document.
          Populated if the user enables
          AnnotateTextRequest.Features.extract_entities.
        items:
          type: Entity
        type: array
        required: false
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See `Document.language` field for more details.
        type: string
        required: false
      sentences:
        description: |-
          Sentences in the input document. Populated if the user enables
          AnnotateTextRequest.Features.extract_syntax.
        items:
          type: Sentence
        type: array
        required: false
      tokens:
        description: |-
          Tokens, along with their syntactic information, in the input document.
          Populated if the user enables
          AnnotateTextRequest.Features.extract_syntax.
        items:
          type: Token
        type: array
        required: false
  DependencyEdge:
    description: |-
      Represents dependency parse tree information for a token. (For more
      information on dependency labels, see
      http://www.aclweb.org/anthology/P13-2017
    properties:
      headTokenIndex:
        description: |-
          Represents the head of this token in the dependency tree.
          This is the index of the token which has an arc going to this token.
          The index is the position of the token in the array of tokens returned
          by the API method. If this token is a root token, then the
          `head_token_index` is its own index.
        format: int32
        type: integer
        required: false
      label:
        description: The parse label for the token.
        enum:
          - UNKNOWN
          - ABBREV
          - ACOMP
          - ADVCL
          - ADVMOD
          - AMOD
          - APPOS
          - ATTR
          - AUX
          - AUXPASS
          - CC
          - CCOMP
          - CONJ
          - CSUBJ
          - CSUBJPASS
          - DEP
          - DET
          - DISCOURSE
          - DOBJ
          - EXPL
          - GOESWITH
          - IOBJ
          - MARK
          - MWE
          - MWV
          - NEG
          - NN
          - NPADVMOD
          - NSUBJ
          - NSUBJPASS
          - NUM
          - NUMBER
          - P
          - PARATAXIS
          - PARTMOD
          - PCOMP
          - POBJ
          - POSS
          - POSTNEG
          - PRECOMP
          - PRECONJ
          - PREDET
          - PREF
          - PREP
          - PRONL
          - PRT
          - PS
          - QUANTMOD
          - RCMOD
          - RCMODREL
          - RDROP
          - REF
          - REMNANT
          - REPARANDUM
          - ROOT
          - SNUM
          - SUFF
          - TMOD
          - TOPIC
          - VMOD
          - VOCATIVE
          - XCOMP
          - SUFFIX
          - TITLE
          - ADVPHMOD
          - AUXCAUS
          - AUXVV
          - DTMOD
          - FOREIGN
          - KW
          - LIST
          - NOMC
          - NOMCSUBJ
          - NOMCSUBJPASS
          - NUMC
          - COP
          - DISLOCATED
        type: string
        required: false
  Document:
    description: |-
      ################################################################ #

      Represents the input to API methods.
    properties:
      content:
        description: The content of the input in string format.
        type: string
        required: false
      gcsContentUri:
        description: |-
          The Google Cloud Storage URI where the file content is located.
          This URI must be of the form: gs://bucket_name/object_name. For more
          details, see https://cloud.google.com/storage/docs/reference-uris.
          NOTE: Cloud Storage object versioning is not supported.
        type: string
        required: false
      language:
        description: |-
          The language of the document (if not specified, the language is
          automatically detected). Both ISO and BCP-47 language codes are
          accepted.<br>
          **Current Language Restrictions:**

           * Only English, Spanish, and Japanese textual content
             are supported, with the following additional restriction:
             * `analyzeSentiment` only supports English text.
          If the language (either specified by the caller or automatically detected)
          is not supported by the called API method, an `INVALID_ARGUMENT` error
          is returned.
        type: string
        required: false
      type:
        description: |-
          Required. If the type is not set or is `TYPE_UNSPECIFIED`,
          returns an `INVALID_ARGUMENT` error.
        enum:
          - TYPE_UNSPECIFIED
          - PLAIN_TEXT
          - HTML
        type: string
        required: false
  Entity:
    description: |-
      Represents a phrase in the text that is a known entity, such as
      a person, an organization, or location. The API associates information, such
      as salience and mentions, with entities.
    properties:
      mentions:
        description: |-
          The mentions of this entity in the input document. The API currently
          supports proper noun mentions.
        items:
          type: EntityMention
        type: array
        required: false
      metadata:
        description: |-
          Metadata associated with the entity.

          Currently, Wikipedia URLs and Knowledge Graph MIDs are provided, if
          available. The associated keys are "wikipedia_url" and "mid", respectively.
        type: object
        required: false
        properties:
          //:
            type: string
      name:
        description: The representative name for the entity.
        type: string
        required: false
      salience:
        description: |-
          The salience score associated with the entity in the [0, 1.0] range.

          The salience score for an entity provides information about the
          importance or centrality of that entity to the entire document text.
          Scores closer to 0 are less salient, while scores closer to 1.0 are highly
          salient.
        format: float
        type: number
        required: false
      type:
        description: The entity type.
        enum:
          - UNKNOWN
          - PERSON
          - LOCATION
          - ORGANIZATION
          - EVENT
          - WORK_OF_ART
          - CONSUMER_GOOD
          - OTHER
        type: string
        required: false
  EntityMention:
    description: |-
      Represents a mention for an entity in the text. Currently, proper noun
      mentions are supported.
    properties:
      text:
        description: The mention text.
        type: TextSpan
        required: false
      type:
        description: The type of the entity mention.
        enum:
          - TYPE_UNKNOWN
          - PROPER
          - COMMON
        type: string
        required: false
  Features:
    description: |-
      All available features for sentiment, syntax, and semantic analysis.
      Setting each one to true will enable that specific analysis for the input.
    properties:
      extractDocumentSentiment:
        description: Extract document-level sentiment.
        type: boolean
        required: false
      extractEntities:
        description: Extract entities.
        type: boolean
        required: false
      extractSyntax:
        description: Extract syntax information.
        type: boolean
        required: false
  PartOfSpeech:
    description: |-
      Represents part of speech information for a token. Parts of speech
      are as defined in
      http://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf
    properties:
      aspect:
        description: The grammatical aspect.
        enum:
          - ASPECT_UNKNOWN
          - PERFECTIVE
          - IMPERFECTIVE
          - PROGRESSIVE
        type: string
        required: false
      case:
        description: The grammatical case.
        enum:
          - CASE_UNKNOWN
          - ACCUSATIVE
          - ADVERBIAL
          - COMPLEMENTIVE
          - DATIVE
          - GENITIVE
          - INSTRUMENTAL
          - LOCATIVE
          - NOMINATIVE
          - OBLIQUE
          - PARTITIVE
          - PREPOSITIONAL
          - REFLEXIVE_CASE
          - RELATIVE_CASE
          - VOCATIVE
        type: string
        required: false
      form:
        description: The grammatical form.
        enum:
          - FORM_UNKNOWN
          - ADNOMIAL
          - AUXILIARY
          - COMPLEMENTIZER
          - FINAL_ENDING
          - GERUND
          - REALIS
          - IRREALIS
          - SHORT
          - LONG
          - ORDER
          - SPECIFIC
        type: string
        required: false
      gender:
        description: The grammatical gender.
        enum:
          - GENDER_UNKNOWN
          - FEMININE
          - MASCULINE
          - NEUTER
        type: string
        required: false
      mood:
        description: The grammatical mood.
        enum:
          - MOOD_UNKNOWN
          - CONDITIONAL_MOOD
          - IMPERATIVE
          - INDICATIVE
          - INTERROGATIVE
          - JUSSIVE
          - SUBJUNCTIVE
        type: string
        required: false
      number:
        description: The grammatical number.
        enum:
          - NUMBER_UNKNOWN
          - SINGULAR
          - PLURAL
          - DUAL
        type: string
        required: false
      person:
        description: The grammatical person.
        enum:
          - PERSON_UNKNOWN
          - FIRST
          - SECOND
          - THIRD
          - REFLEXIVE_PERSON
        type: string
        required: false
      proper:
        description: The grammatical properness.
        enum:
          - PROPER_UNKNOWN
          - PROPER
          - NOT_PROPER
        type: string
        required: false
      reciprocity:
        description: The grammatical reciprocity.
        enum:
          - RECIPROCITY_UNKNOWN
          - RECIPROCAL
          - NON_RECIPROCAL
        type: string
        required: false
      tag:
        description: The part of speech tag.
        enum:
          - UNKNOWN
          - ADJ
          - ADP
          - ADV
          - CONJ
          - DET
          - NOUN
          - NUM
          - PRON
          - PRT
          - PUNCT
          - VERB
          - X
          - AFFIX
        type: string
        required: false
      tense:
        description: The grammatical tense.
        enum:
          - TENSE_UNKNOWN
          - CONDITIONAL_TENSE
          - FUTURE
          - PAST
          - PRESENT
          - IMPERFECT
          - PLUPERFECT
        type: string
        required: false
      voice:
        description: The grammatical voice.
        enum:
          - VOICE_UNKNOWN
          - ACTIVE
          - CAUSATIVE
          - PASSIVE
        type: string
        required: false
  Sentence:
    description: Represents a sentence in the input document.
    properties:
      sentiment:
        description: |-
          For calls to AnalyzeSentiment or if
          AnnotateTextRequest.Features.extract_document_sentiment is set to
          true, this field will contain the sentiment for the sentence.
        type: Sentiment
        required: false
      text:
        description: The sentence text.
        type: TextSpan
        required: false
  Sentiment:
    description: |-
      Represents the feeling associated with the entire text or entities in
      the text.
    properties:
      magnitude:
        description: |-
          A non-negative number in the [0, +inf) range, which represents
          the absolute magnitude of sentiment regardless of score (positive or
          negative).
        format: float
        type: number
        required: false
      score:
        description: |-
          Sentiment score between -1.0 (negative sentiment) and 1.0
          (positive sentiment.)
        format: float
        type: number
        required: false
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` which can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting purpose.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
        required: false
      details:
        description: |-
          A list of messages that carry the error details.  There will be a
          common set of message types for APIs to use.
        items:
          type: object
          properties:
            //:
              description: Properties of the object. Contains field @type with type URL.
        type: array
        required: false
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
        required: false
  TextSpan:
    description: Represents an output piece of text.
    properties:
      beginOffset:
        description: |-
          The API calculates the beginning offset of the content in the original
          document according to the EncodingType specified in the API request.
        format: int32
        type: integer
        required: false
      content:
        description: The content of the output text.
        type: string
        required: false
  Token:
    description: Represents the smallest syntactic building block of the text.
    properties:
      dependencyEdge:
        description: Dependency tree parse for this token.
        type: DependencyEdge
        required: false
      lemma:
        description: |-
          <a href="https://en.wikipedia.org/wiki/Lemma_(morphology)">
          Lemma</a> of the token.
        type: string
        required: false
      partOfSpeech:
        description: Parts of speech tag for this token.
        type: PartOfSpeech
        required: false
      text:
        description: The token text.
        type: TextSpan
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
        enum:
          - '1'
          - '2'
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
        enum:
          - json
          - media
          - proto
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
