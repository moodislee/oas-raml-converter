#%RAML 1.0
title: Prediction
version: v1.6
baseUri: 'https://www.googleapis.com/prediction/v1.6/projects'
protocols:
  - HTTPS
description: Lets you access a cloud hosted machine learning service that makes it easy to build smart apps
(oas-tags-definition):
  - name: hostedmodels
  - name: trainedmodels
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_icons_feature_predictionapi-64.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/prediction/v1.6/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): prediction
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/prediction/docs/developer-guide'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/devstorage.full_control'
        - 'https://www.googleapis.com/auth/devstorage.read_only'
        - 'https://www.googleapis.com/auth/devstorage.read_write'
        - 'https://www.googleapis.com/auth/prediction'
    description: Oauth 2.0 authentication
'/{project}':
  displayName: '{project}'
  /trainedmodels:
    displayName: trainedmodels
    '/{id}':
      displayName: '{id}'
      /predict:
        displayName: predict
        post:
          displayName: prediction.trainedmodels.predict
          description: Submit model id and request a prediction.
          body:
            application/json:
              type: Input
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Output
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/prediction'
          (oas-tags):
            - trainedmodels
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /analyze:
        displayName: analyze
        get:
          displayName: prediction.trainedmodels.analyze
          description: Get analysis of the model and the data the model was trained on.
          responses:
            '200':
              body:
                application/json:
                  type: Analyze
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/prediction'
          (oas-tags):
            - trainedmodels
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      uriParameters:
        id:
          description: The unique name for the predictive model.
          required: true
          type: string
      put:
        displayName: prediction.trainedmodels.update
        description: Add new data to a trained model.
        body:
          application/json:
            type: Update
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Insert2
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/prediction'
        (oas-tags):
          - trainedmodels
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      get:
        displayName: prediction.trainedmodels.get
        description: Check training status of your model.
        responses:
          '200':
            body:
              application/json:
                type: Insert2
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/prediction'
        (oas-tags):
          - trainedmodels
      delete:
        displayName: prediction.trainedmodels.delete
        description: Delete a trained model.
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/prediction'
        (oas-tags):
          - trainedmodels
    /list:
      displayName: list
      get:
        displayName: prediction.trainedmodels.list
        description: List available models.
        responses:
          '200':
            body:
              application/json:
                type: List
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of results to return.
            minimum: 0
            type: integer
          pageToken:
            description: Pagination token.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/prediction'
        (oas-tags):
          - trainedmodels
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    post:
      displayName: prediction.trainedmodels.insert
      description: Train a Prediction API model.
      body:
        application/json:
          type: Insert
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Insert2
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/prediction'
      (oas-tags):
        - trainedmodels
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
  /hostedmodels:
    displayName: hostedmodels
    '/{hostedModelName}':
      displayName: '{hostedModelName}'
      /predict:
        displayName: predict
        post:
          displayName: prediction.hostedmodels.predict
          description: Submit input and request an output against a hosted model.
          body:
            application/json:
              type: Input
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Output
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/prediction'
          (oas-tags):
            - hostedmodels
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
types:
  Analyze:
    properties:
      dataDescription:
        description: Description of the data the model was trained on.
        properties:
          features:
            description: Description of the input features in the data set.
            items:
              properties:
                categorical:
                  description: Description of the categorical values of this feature.
                  properties:
                    count:
                      description: Number of categorical values for this feature in the data.
                      format: int64
                      type: string
                      facets:
                        format: string
                      required: false
                    values:
                      description: List of all the categories for this feature in the data set.
                      items:
                        properties:
                          count:
                            description: Number of times this feature had this value.
                            format: int64
                            type: string
                            facets:
                              format: string
                            required: false
                          value:
                            description: The category name.
                            type: string
                            required: false
                        type: object
                      type: array
                      required: false
                  type: object
                  required: false
                index:
                  description: The feature index.
                  format: int64
                  type: string
                  facets:
                    format: string
                  required: false
                numeric:
                  description: Description of the numeric values of this feature.
                  properties:
                    count:
                      description: Number of numeric values for this feature in the data set.
                      format: int64
                      type: string
                      facets:
                        format: string
                      required: false
                    mean:
                      description: Mean of the numeric values of this feature in the data set.
                      type: string
                      required: false
                    variance:
                      description: Variance of the numeric values of this feature in the data set.
                      type: string
                      required: false
                  type: object
                  required: false
                text:
                  description: Description of multiple-word text values of this feature.
                  properties:
                    count:
                      description: Number of multiple-word text values for this feature.
                      format: int64
                      type: string
                      facets:
                        format: string
                      required: false
                  type: object
                  required: false
              type: object
            type: array
            required: false
          outputFeature:
            description: Description of the output value or label.
            properties:
              numeric:
                description: Description of the output values in the data set.
                properties:
                  count:
                    description: Number of numeric output values in the data set.
                    format: int64
                    type: string
                    facets:
                      format: string
                    required: false
                  mean:
                    description: Mean of the output values in the data set.
                    type: string
                    required: false
                  variance:
                    description: Variance of the output values in the data set.
                    type: string
                    required: false
                type: object
                required: false
              text:
                description: Description of the output labels in the data set.
                items:
                  properties:
                    count:
                      description: Number of times the output label occurred in the data set.
                      format: int64
                      type: string
                      facets:
                        format: string
                      required: false
                    value:
                      description: The output label.
                      type: string
                      required: false
                  type: object
                type: array
                required: false
            type: object
            required: false
        type: object
        required: false
      errors:
        description: List of errors with the data.
        items:
          additionalProperties:
            description: Error level followed by a detailed error message.
            type: string
          type: object
        type: array
        required: false
      id:
        description: The unique name for the predictive model.
        type: string
        required: false
      kind:
        default: 'prediction#analyze'
        description: What kind of resource this is.
        type: string
        required: false
      modelDescription:
        description: Description of the model.
        properties:
          confusionMatrix:
            additionalProperties:
              additionalProperties:
                description: Average number of times an instance with correct class label modelDescription.confusionMatrix.(key) was wrongfully classified as this label.
                type: string
              description: Confusion matrix information for the true class label.
              type: object
            description: 'An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes (Categorical models only).'
            type: object
            required: false
          confusionMatrixRowTotals:
            additionalProperties:
              type: string
            description: A list of the confusion matrix row totals.
            type: object
            required: false
          modelinfo:
            description: Basic information about the model.
            type: Insert2
            required: false
        type: object
        required: false
      selfLink:
        description: A URL to re-request this resource.
        type: string
        required: false
  Input:
    properties:
      input:
        description: Input to the model for a prediction.
        properties:
          csvInstance:
            description: 'A list of input features, these can be strings or doubles.'
            items: {}
            type: array
            required: false
        type: object
        required: false
  Insert:
    properties:
      id:
        description: The unique name for the predictive model.
        type: string
        required: false
      modelType:
        description: Type of predictive model (classification or regression).
        type: string
        required: false
      sourceModel:
        description: The Id of the model to be copied over.
        type: string
        required: false
      storageDataLocation:
        description: Google storage location of the training data file.
        type: string
        required: false
      storagePMMLLocation:
        description: Google storage location of the preprocessing pmml file.
        type: string
        required: false
      storagePMMLModelLocation:
        description: Google storage location of the pmml model file.
        type: string
        required: false
      trainingInstances:
        description: Instances to train model on.
        items:
          properties:
            csvInstance:
              description: The input features for this instance.
              items: {}
              type: array
              required: false
            output:
              description: The generic output value - could be regression or class label.
              type: string
              required: false
          type: object
        type: array
        required: false
      utility:
        description: 'A class weighting function, which allows the importance weights for class labels to be specified (Categorical models only).'
        items:
          additionalProperties:
            format: double
            type: number
          description: Class label (string).
          type: object
        type: array
        required: false
  Insert2:
    properties:
      created:
        description: Insert time of the model (as a RFC 3339 timestamp).
        format: rfc3339
        type: datetime
        required: false
      id:
        description: The unique name for the predictive model.
        type: string
        required: false
      kind:
        default: 'prediction#training'
        description: What kind of resource this is.
        type: string
        required: false
      modelInfo:
        description: Model metadata.
        properties:
          classWeightedAccuracy:
            description: Estimated accuracy of model taking utility weights into account (Categorical models only).
            type: string
            required: false
          classificationAccuracy:
            description: 'A number between 0.0 and 1.0, where 1.0 is 100% accurate. This is an estimate, based on the amount and quality of the training data, of the estimated prediction accuracy. You can use this is a guide to decide whether the results are accurate enough for your needs. This estimate will be more reliable if your real input data is similar to your training data (Categorical models only).'
            type: string
            required: false
          meanSquaredError:
            description: An estimated mean squared error. The can be used to measure the quality of the predicted model (Regression models only).
            type: string
            required: false
          modelType:
            description: Type of predictive model (CLASSIFICATION or REGRESSION).
            type: string
            required: false
          numberInstances:
            description: Number of valid data instances used in the trained model.
            format: int64
            type: string
            facets:
              format: string
            required: false
          numberLabels:
            description: Number of class labels in the trained model (Categorical models only).
            format: int64
            type: string
            facets:
              format: string
            required: false
        type: object
        required: false
      modelType:
        description: Type of predictive model (CLASSIFICATION or REGRESSION).
        type: string
        required: false
      selfLink:
        description: A URL to re-request this resource.
        type: string
        required: false
      storageDataLocation:
        description: Google storage location of the training data file.
        type: string
        required: false
      storagePMMLLocation:
        description: Google storage location of the preprocessing pmml file.
        type: string
        required: false
      storagePMMLModelLocation:
        description: Google storage location of the pmml model file.
        type: string
        required: false
      trainingComplete:
        description: Training completion time (as a RFC 3339 timestamp).
        format: rfc3339
        type: datetime
        required: false
      trainingStatus:
        description: 'The current status of the training job. This can be one of following: RUNNING; DONE; ERROR; ERROR: TRAINING JOB NOT FOUND'
        type: string
        required: false
  List:
    properties:
      items:
        description: List of models.
        items:
          type: Insert2
        type: array
        required: false
      kind:
        default: 'prediction#list'
        description: What kind of resource this is.
        type: string
        required: false
      nextPageToken:
        description: 'Pagination token to fetch the next page, if one exists.'
        type: string
        required: false
      selfLink:
        description: A URL to re-request this resource.
        type: string
        required: false
  Output:
    properties:
      id:
        description: The unique name for the predictive model.
        type: string
        required: false
      kind:
        default: 'prediction#output'
        description: What kind of resource this is.
        type: string
        required: false
      outputLabel:
        description: The most likely class label (Categorical models only).
        type: string
        required: false
      outputMulti:
        description: A list of class labels with their estimated probabilities (Categorical models only).
        items:
          properties:
            label:
              description: The class label.
              type: string
              required: false
            score:
              description: The probability of the class label.
              type: string
              required: false
          type: object
        type: array
        required: false
      outputValue:
        description: The estimated regression value (Regression models only).
        type: string
        required: false
      selfLink:
        description: A URL to re-request this resource.
        type: string
        required: false
  Update:
    properties:
      csvInstance:
        description: The input features for this instance.
        items: {}
        type: array
        required: false
      output:
        description: The generic output value - could be regression or class label.
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
