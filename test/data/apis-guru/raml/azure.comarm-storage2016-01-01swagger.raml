#%RAML 1.0
title: StorageManagementClient
version: '2016-01-01'
baseUri: 'https://management.azure.com'
mediaType:
  - application/json
  - text/json
protocols:
  - HTTPS
description: The Storage Management Client.
(oas-info):
  (oas-x-apisguru-categories):
    - cloud
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-storage/2016-01-01/swagger/storage.json'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): azure.com
  (oas-x-serviceName): arm-storage
  (oas-x-tags):
    - Azure
    - Microsoft
annotationTypes:
  oas-x-apisguru-categories: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-x-tags: any
  oas-x-ms-long-running-operation: any
  oas-x-ms-pageable: any
  oas-x-ms-enum: any
  oas-x-ms-client-flatten: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
/subscriptions:
  displayName: subscriptions
  '/{subscriptionId}':
    displayName: '{subscriptionId}'
    /resourceGroups:
      displayName: resourceGroups
      '/{resourceGroupName}':
        displayName: '{resourceGroupName}'
        /providers:
          displayName: providers
          /Microsoft.Storage:
            displayName: Microsoft.Storage
            /storageAccounts:
              displayName: storageAccounts
              '/{accountName}':
                displayName: '{accountName}'
                /regenerateKey:
                  displayName: regenerateKey
                  post:
                    displayName: StorageAccounts_RegenerateKey
                    description: Regenerates one of the access keys for the specified storage account.
                    is:
                      - apiVersionParameter
                    body:
                      application/json:
                        type: StorageAccountRegenerateKeyParameters
                        (oas-body-name): regenerateKey
                        description: Specifies name of the key which should be regenerated -- key1 or key2.
                    responses:
                      '200':
                        body:
                          application/json:
                            type: StorageAccountListKeysResult
                        description: OK -- specified key regenerated successfully.
                    (oas-tags):
                      - StorageAccounts
                /listKeys:
                  displayName: listKeys
                  post:
                    displayName: StorageAccounts_ListKeys
                    description: Lists the access keys for the specified storage account.
                    is:
                      - apiVersionParameter
                    responses:
                      '200':
                        body:
                          application/json:
                            type: StorageAccountListKeysResult
                        description: OK -- list of keys retrieved and returned successfully.
                    (oas-tags):
                      - StorageAccounts
                uriParameters:
                  accountName:
                    description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                    maxLength: 24
                    minLength: 3
                    required: true
                    type: string
                put:
                  (oas-x-ms-long-running-operation): true
                  displayName: StorageAccounts_Create
                  description: 'Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.'
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: StorageAccountCreateParameters
                      (oas-body-name): parameters
                      description: The parameters to provide for the created account.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: StorageAccount
                      description: OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.
                    '202':
                      description: Accepted -- Create or update request accepted; operation will complete asynchronously.
                  (oas-tags):
                    - StorageAccounts
                patch:
                  displayName: StorageAccounts_Update
                  description: 'The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.'
                  is:
                    - apiVersionParameter
                  body:
                    application/json:
                      type: StorageAccountUpdateParameters
                      (oas-body-name): parameters
                      description: The parameters to provide for the updated account.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: StorageAccount
                      description: OK -- storage account properties updated successfully.
                  (oas-tags):
                    - StorageAccounts
                get:
                  displayName: StorageAccounts_GetProperties
                  description: 'Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      body:
                        application/json:
                          type: StorageAccount
                      description: OK -- properties retrieved successfully for the storage account.
                  (oas-tags):
                    - StorageAccounts
                delete:
                  displayName: StorageAccounts_Delete
                  description: Deletes a storage account in Microsoft Azure.
                  is:
                    - apiVersionParameter
                  responses:
                    '200':
                      description: OK -- storage account deleted successfully.
                    '204':
                      description: NoContent -- account does not exist in the subscription.
                  (oas-tags):
                    - StorageAccounts
              get:
                (oas-x-ms-pageable): {}
                displayName: StorageAccounts_ListByResourceGroup
                description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
                is:
                  - apiVersionParameter
                responses:
                  '200':
                    body:
                      application/json:
                        type: StorageAccountListResult
                    description: OK -- List of storage accounts in the given resource group retrieved and returned successfully.
                (oas-tags):
                  - StorageAccounts
    /providers:
      displayName: providers
      /Microsoft.Storage:
        displayName: Microsoft.Storage
        /usages:
          displayName: usages
          get:
            (oas-x-ms-pageable): {}
            displayName: Usage_List
            description: Gets the current usage count and the limit for the resources under the subscription.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: UsageListResult
                description: OK -- current usage acount and limit retrieved and returned successfully.
            (oas-tags):
              - Usage
        /storageAccounts:
          displayName: storageAccounts
          get:
            (oas-x-ms-pageable): {}
            displayName: StorageAccounts_List
            description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            is:
              - apiVersionParameter
            responses:
              '200':
                body:
                  application/json:
                    type: StorageAccountListResult
                description: OK -- List of storage accounts was retrieved and returned successfully.
            (oas-tags):
              - StorageAccounts
        /checkNameAvailability:
          displayName: checkNameAvailability
          post:
            displayName: StorageAccounts_CheckNameAvailability
            description: Checks that the storage account name is valid and is not already in use.
            is:
              - apiVersionParameter
            body:
              application/json:
                type: StorageAccountCheckNameAvailabilityParameters
                (oas-body-name): accountName
                description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
            responses:
              '200':
                body:
                  application/json:
                    type: CheckNameAvailabilityResult
                description: OK -- Operation to check the storage account name availability was successful.
            (oas-tags):
              - StorageAccounts
types:
  CheckNameAvailabilityResult:
    description: The CheckNameAvailability operation response.
    properties:
      message:
        description: Gets an error message explaining the Reason value in more detail.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      nameAvailable:
        description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
        readOnly: true
        type: boolean
        facets:
          readOnly?: boolean
        required: false
      reason:
        description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
          - AccountNameInvalid
          - AlreadyExists
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: Reason
  CustomDomain:
    description: The custom domain assigned to this storage account. This can be set via Update.
    properties:
      name:
        description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
        type: string
      useSubDomain:
        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
        type: boolean
        required: false
  Encryption:
    description: The encryption settings on the storage account.
    properties:
      keySource:
        description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage'
        enum:
          - Microsoft.Storage
        type: string
      services:
        description: List of services which support encryption.
        type: EncryptionServices
        required: false
  EncryptionService:
    description: A service that allows server-side encryption to be used.
    properties:
      enabled:
        description: A boolean indicating whether or not the service encrypts the data as it is stored.
        type: boolean
        required: false
      lastEnabledTime:
        description: 'Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.'
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
  EncryptionServices:
    description: A list of services that support encryption.
    properties:
      blob:
        description: The encryption function of the blob storage service.
        type: EncryptionService
        required: false
  Endpoints:
    description: 'The URIs that are used to perform a retrieval of a public blob, queue, or table object.'
    properties:
      blob:
        description: Gets the blob endpoint.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      file:
        description: Gets the file endpoint.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      queue:
        description: Gets the queue endpoint.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      table:
        description: Gets the table endpoint.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  Resource:
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      location:
        description: Resource location
        type: string
        required: false
      name:
        description: Resource name
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      tags:
        description: Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).
        type: object
        required: false
        properties:
          //:
            type: string
      type:
        description: Resource type
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  Sku:
    description: The SKU of the storage account.
    properties:
      name:
        description: 'Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.'
        enum:
          - Standard_LRS
          - Standard_GRS
          - Standard_RAGRS
          - Standard_ZRS
          - Premium_LRS
        type: string
        (oas-x-ms-enum):
          modelAsString: false
          name: SkuName
      tier:
        description: Gets the sku tier. This is based on the SKU name.
        enum:
          - Standard
          - Premium
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: SkuTier
  StorageAccount:
    type: Resource
  StorageAccountCheckNameAvailabilityParameters:
    properties:
      name:
        type: string
      type:
        enum:
          - Microsoft.Storage/storageAccounts
        type: string
  StorageAccountCreateParameters:
    description: The parameters used when creating a storage account.
    properties:
      kind:
        description: Required. Indicates the type of storage account.
        enum:
          - Storage
          - BlobStorage
        type: string
        (oas-x-ms-enum):
          modelAsString: false
          name: Kind
      location:
        description: 'Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.'
        type: string
      properties:
        type: StorageAccountPropertiesCreateParameters
        required: false
        (oas-x-ms-client-flatten): true
      sku:
        description: Required. Gets or sets the sku name.
        type: Sku
      tags:
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
        type: object
        required: false
        properties:
          //:
            type: string
  StorageAccountKey:
    description: An access key for the storage account.
    properties:
      keyName:
        description: Name of the key.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      permissions:
        description: Permissions for the key -- read-only or full permissions.
        enum:
          - READ
          - FULL
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: KeyPermission
      value:
        description: Base 64-encoded value of the key.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
  StorageAccountListKeysResult:
    description: The response from the ListKeys operation.
    properties:
      keys:
        description: Gets the list of storage account keys and their properties for the specified storage account.
        items:
          type: StorageAccountKey
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
  StorageAccountListResult:
    description: The response from the List Storage Accounts operation.
    properties:
      value:
        description: Gets the list of storage accounts and their properties.
        items:
          type: StorageAccount
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
  StorageAccountProperties:
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: AccessTier
      creationTime:
        description: Gets the creation date and time of the storage account in UTC.
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
      customDomain:
        description: Gets the custom domain the user assigned to this storage account.
        readOnly: true
        type: CustomDomain
        facets:
          readOnly?: boolean
        required: false
      encryption:
        description: 'Gets the encryption settings on the account. If unspecified, the account is unencrypted.'
        readOnly: true
        type: Encryption
        facets:
          readOnly?: boolean
        required: false
      lastGeoFailoverTime:
        description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
      primaryEndpoints:
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.'
        readOnly: true
        type: Endpoints
        facets:
          readOnly?: boolean
        required: false
      primaryLocation:
        description: Gets the location of the primary data center for the storage account.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      provisioningState:
        description: Gets the status of the storage account at the time the operation was called.
        enum:
          - Creating
          - ResolvingDNS
          - Succeeded
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: ProvisioningState
      secondaryEndpoints:
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.'
        readOnly: true
        type: Endpoints
        facets:
          readOnly?: boolean
        required: false
      secondaryLocation:
        description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      statusOfPrimary:
        description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
        enum:
          - Available
          - Unavailable
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: AccountStatus
      statusOfSecondary:
        description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
        enum:
          - Available
          - Unavailable
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: AccountStatus
  StorageAccountPropertiesCreateParameters:
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: AccessTier
      customDomain:
        description: 'User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
        type: CustomDomain
        required: false
      encryption:
        description: Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
        type: Encryption
        required: false
  StorageAccountPropertiesUpdateParameters:
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        type: string
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: AccessTier
      customDomain:
        description: 'Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
        type: CustomDomain
        required: false
      encryption:
        description: Provides the encryption settings on the account. The default setting is unencrypted.
        type: Encryption
        required: false
  StorageAccountRegenerateKeyParameters:
    properties:
      keyName:
        type: string
  StorageAccountUpdateParameters:
    description: The parameters that can be provided when updating the storage account properties.
    properties:
      properties:
        type: StorageAccountPropertiesUpdateParameters
        required: false
        (oas-x-ms-client-flatten): true
      sku:
        description: 'Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS or Premium_LRS, nor can accounts of those sku names be updated to any other value.'
        type: Sku
        required: false
      tags:
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
        type: object
        required: false
        properties:
          //:
            type: string
  Usage:
    description: Describes Storage Resource Usage.
    properties:
      currentValue:
        description: Gets the current count of the allocated resources in the subscription.
        format: int32
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      limit:
        description: Gets the maximum count of the resources that can be allocated in the subscription.
        format: int32
        readOnly: true
        type: integer
        facets:
          readOnly?: boolean
        required: false
      name:
        description: Gets the name of the type of usage.
        readOnly: true
        type: UsageName
        facets:
          readOnly?: boolean
        required: false
      unit:
        description: Gets the unit of measurement.
        enum:
          - Count
          - Bytes
          - Seconds
          - Percent
          - CountsPerSecond
          - BytesPerSecond
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
        (oas-x-ms-enum):
          modelAsString: false
          name: UsageUnit
  UsageListResult:
    description: The response from the List Usages operation.
    properties:
      value:
        description: Gets or sets the list of Storage Resource Usages.
        items:
          type: Usage
        type: array
        required: false
  UsageName:
    description: The usage names that can be used; currently limited to StorageAccount.
    properties:
      localizedValue:
        description: Gets a localized string describing the resource name.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      value:
        description: Gets a string describing the resource name.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
traits:
  apiVersionParameter:
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        required: true
