#%RAML 1.0
title: Google Play Developer
version: v1.1
baseUri: 'https://www.googleapis.com/androidpublisher/v1.1/applications'
protocols:
  - HTTPS
description: Lets Android application developers access their Google Play accounts.
(oas-tags-definition):
  - name: inapppurchases
  - name: purchases
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_android_market_images_web_play_logo_x2.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/androidpublisher/v1.1/rest'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): androidpublisher
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/android-publisher'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/androidpublisher'
    description: Oauth 2.0 authentication
'/{packageName}':
  displayName: '{packageName}'
  /subscriptions:
    displayName: subscriptions
    '/{subscriptionId}':
      displayName: '{subscriptionId}'
      /purchases:
        displayName: purchases
        '/{token}':
          displayName: '{token}'
          /cancel:
            displayName: cancel
            post:
              displayName: androidpublisher.purchases.cancel
              description: Cancels a user's subscription purchase. The subscription remains valid until its expiration time.
              responses:
                '200':
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/androidpublisher'
              (oas-tags):
                - purchases
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          uriParameters:
            token:
              description: The token provided to the user's device when the subscription was purchased.
              required: true
              type: string
          get:
            displayName: androidpublisher.purchases.get
            description: Checks whether a user's subscription purchase is valid and returns its expiry time.
            responses:
              '200':
                body:
                  application/json:
                    type: SubscriptionPurchase
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/androidpublisher'
            (oas-tags):
              - purchases
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
  /inapp:
    displayName: inapp
    '/{productId}':
      displayName: '{productId}'
      /purchases:
        displayName: purchases
        '/{token}':
          displayName: '{token}'
          uriParameters:
            token:
              description: The token provided to the user's device when the inapp product was purchased.
              required: true
              type: string
          get:
            displayName: androidpublisher.inapppurchases.get
            description: Checks the purchase and consumption status of an inapp item.
            responses:
              '200':
                body:
                  application/json:
                    type: InappPurchase
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/androidpublisher'
            (oas-tags):
              - inapppurchases
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
types:
  InappPurchase:
    description: An InappPurchase resource indicates the status of a user's inapp product purchase.
    properties:
      consumptionState:
        description: |-
          The consumption state of the inapp product. Possible values are:  
          - Yet to be consumed 
          - Consumed
        format: int32
        type: integer
        required: false
      developerPayload:
        description: A developer-specified string that contains supplemental information about an order.
        type: string
        required: false
      kind:
        default: 'androidpublisher#inappPurchase'
        description: This kind represents an inappPurchase object in the androidpublisher service.
        type: string
        required: false
      purchaseState:
        description: |-
          The purchase state of the order. Possible values are:  
          - Purchased 
          - Cancelled
        format: int32
        type: integer
        required: false
      purchaseTime:
        description: 'The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).'
        format: int64
        type: string
        facets:
          format: string
        required: false
  SubscriptionPurchase:
    description: A SubscriptionPurchase resource indicates the status of a user's subscription purchase.
    properties:
      autoRenewing:
        description: Whether the subscription will automatically be renewed when it reaches its current expiry time.
        type: boolean
        required: false
      initiationTimestampMsec:
        description: 'Time at which the subscription was granted, in milliseconds since the Epoch.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      kind:
        default: 'androidpublisher#subscriptionPurchase'
        description: This kind represents a subscriptionPurchase object in the androidpublisher service.
        type: string
        required: false
      validUntilTimestampMsec:
        description: 'Time at which the subscription will expire, in milliseconds since the Epoch.'
        format: int64
        type: string
        facets:
          format: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
