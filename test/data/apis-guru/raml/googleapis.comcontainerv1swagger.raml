#%RAML 1.0
title: Google Container Engine
version: v1
baseUri: 'https://container.googleapis.com/'
protocols:
  - HTTPS
description: 'Builds and manages clusters that run container-based applications, powered by open source Kubernetes technology.'
(oas-tags-definition):
  - name: projects
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/container/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): container
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/container-engine/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  /projects:
    displayName: projects
    '/{projectId}':
      displayName: '{projectId}'
      /zones:
        displayName: zones
        '/{zone}':
          displayName: '{zone}'
          /clusters:
            displayName: clusters
            '/{clusterId}':
              displayName: '{clusterId}'
              /nodePools:
                displayName: nodePools
                post:
                  displayName: container.projects.zones.clusters.nodePools.create
                  description: Creates a node pool for a cluster.
                  body:
                    application/json:
                      type: CreateNodePoolRequest
                      (oas-body-name): body
                  responses:
                    '200':
                      body:
                        application/json:
                          type: Operation
                      description: Successful response
                  securedBy:
                    - Oauth2:
                        scopes:
                          - 'https://www.googleapis.com/auth/cloud-platform'
                  (oas-tags):
                    - projects
                is:
                  - accessToken
                  - alt
                  - bearerToken
                  - callback
                  - fields
                  - key
                  - oauthToken
                  - pp
                  - prettyPrint
                  - quotaUser
                  - uploadProtocol
                  - uploadType
                  - xgafv
                '/{nodePoolId}':
                  displayName: '{nodePoolId}'
                  uriParameters:
                    nodePoolId:
                      description: The name of the node pool to delete.
                      required: true
                      type: string
                  get:
                    displayName: container.projects.zones.clusters.nodePools.get
                    description: Retrieves the node pool requested.
                    responses:
                      '200':
                        body:
                          application/json:
                            type: NodePool
                        description: Successful response
                    securedBy:
                      - Oauth2:
                          scopes:
                            - 'https://www.googleapis.com/auth/cloud-platform'
                    (oas-tags):
                      - projects
                  is:
                    - accessToken
                    - alt
                    - bearerToken
                    - callback
                    - fields
                    - key
                    - oauthToken
                    - pp
                    - prettyPrint
                    - quotaUser
                    - uploadProtocol
                    - uploadType
                    - xgafv
                  delete:
                    displayName: container.projects.zones.clusters.nodePools.delete
                    description: Deletes a node pool from a cluster.
                    responses:
                      '200':
                        body:
                          application/json:
                            type: Operation
                        description: Successful response
                    securedBy:
                      - Oauth2:
                          scopes:
                            - 'https://www.googleapis.com/auth/cloud-platform'
                    (oas-tags):
                      - projects
                get:
                  displayName: container.projects.zones.clusters.nodePools.list
                  description: Lists the node pools for a cluster.
                  responses:
                    '200':
                      body:
                        application/json:
                          type: ListNodePoolsResponse
                      description: Successful response
                  securedBy:
                    - Oauth2:
                        scopes:
                          - 'https://www.googleapis.com/auth/cloud-platform'
                  (oas-tags):
                    - projects
              uriParameters:
                clusterId:
                  description: The name of the cluster to delete.
                  required: true
                  type: string
              put:
                displayName: container.projects.zones.clusters.update
                description: Updates the settings of a specific cluster.
                body:
                  application/json:
                    type: UpdateClusterRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: Operation
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/cloud-platform'
                (oas-tags):
                  - projects
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
              get:
                displayName: container.projects.zones.clusters.get
                description: Gets the details of a specific cluster.
                responses:
                  '200':
                    body:
                      application/json:
                        type: Cluster
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/cloud-platform'
                (oas-tags):
                  - projects
              delete:
                displayName: container.projects.zones.clusters.delete
                description: 'Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster (e.g. load balancer resources) will not be deleted if they weren''t present at the initial create time.'
                responses:
                  '200':
                    body:
                      application/json:
                        type: Operation
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/cloud-platform'
                (oas-tags):
                  - projects
            get:
              displayName: container.projects.zones.clusters.list
              description: Lists all clusters owned by a project in either the specified zone or all zones.
              responses:
                '200':
                  body:
                    application/json:
                      type: ListClustersResponse
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/cloud-platform'
              (oas-tags):
                - projects
            is:
              - accessToken
              - alt
              - bearerToken
              - callback
              - fields
              - key
              - oauthToken
              - pp
              - prettyPrint
              - quotaUser
              - uploadProtocol
              - uploadType
              - xgafv
            post:
              displayName: container.projects.zones.clusters.create
              description: 'Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project''s [default network](/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the cluster creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project''s global metadata indicating which CIDR range is being used by the cluster.'
              body:
                application/json:
                  type: CreateClusterRequest
                  (oas-body-name): body
              responses:
                '200':
                  body:
                    application/json:
                      type: Operation
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/cloud-platform'
              (oas-tags):
                - projects
          /serverconfig:
            displayName: serverconfig
            get:
              displayName: container.projects.zones.getServerconfig
              description: Returns configuration info about the Container Engine service.
              responses:
                '200':
                  body:
                    application/json:
                      type: ServerConfig
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/cloud-platform'
              (oas-tags):
                - projects
            is:
              - accessToken
              - alt
              - bearerToken
              - callback
              - fields
              - key
              - oauthToken
              - pp
              - prettyPrint
              - quotaUser
              - uploadProtocol
              - uploadType
              - xgafv
          /operations:
            displayName: operations
            '/{operationId}':
              displayName: '{operationId}'
              uriParameters:
                operationId:
                  description: The server-assigned `name` of the operation.
                  required: true
                  type: string
              get:
                displayName: container.projects.zones.operations.get
                description: Gets the specified operation.
                responses:
                  '200':
                    body:
                      application/json:
                        type: Operation
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/cloud-platform'
                (oas-tags):
                  - projects
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
            get:
              displayName: container.projects.zones.operations.list
              description: Lists all operations in a project in a specific zone or all zones.
              responses:
                '200':
                  body:
                    application/json:
                      type: ListOperationsResponse
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/cloud-platform'
              (oas-tags):
                - projects
            is:
              - accessToken
              - alt
              - bearerToken
              - callback
              - fields
              - key
              - oauthToken
              - pp
              - prettyPrint
              - quotaUser
              - uploadProtocol
              - uploadType
              - xgafv
types:
  AddonsConfig:
    description: 'Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.'
    properties:
      horizontalPodAutoscaling:
        description: 'Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.'
        type: HorizontalPodAutoscaling
        required: false
      httpLoadBalancing:
        description: 'Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.'
        type: HttpLoadBalancing
        required: false
  Cluster:
    description: A Google Container Engine cluster.
    properties:
      addonsConfig:
        description: Configurations for the various addons available to run in the cluster.
        type: AddonsConfig
        required: false
      clusterIpv4Cidr:
        description: 'The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.'
        type: string
        required: false
      createTime:
        description: '[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
        type: string
        required: false
      currentMasterVersion:
        description: '[Output only] The current software version of the master endpoint.'
        type: string
        required: false
      currentNodeCount:
        description: '[Output only] The number of nodes currently in the cluster.'
        format: int32
        type: integer
        required: false
      currentNodeVersion:
        description: '[Output only] The current version of the node software components. If they are currently at multiple versions because they''re in the process of being upgraded, this reflects the minimum version of all nodes.'
        type: string
        required: false
      description:
        description: An optional description of this cluster.
        type: string
        required: false
      endpoint:
        description: '[Output only] The IP address of this cluster''s master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.'
        type: string
        required: false
      initialClusterVersion:
        description: '[Output only] The software version of the master endpoint and kubelets used in the cluster when it was first created. The version can be upgraded over time.'
        type: string
        required: false
      initialNodeCount:
        description: 'The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time.'
        format: int32
        type: integer
        required: false
      instanceGroupUrls:
        description: '[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/) associated with this cluster.'
        items:
          type: string
        type: array
        required: false
      locations:
        description: 'The list of Google Compute Engine [locations](/compute/docs/zones#available) in which the cluster''s nodes should be located.'
        items:
          type: string
        type: array
        required: false
      loggingService:
        description: 'The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com` - the Google Cloud Logging service. * `none` - no logs will be exported from the cluster. * if left as an empty string,`logging.googleapis.com` will be used.'
        type: string
        required: false
      masterAuth:
        description: The authentication information for accessing the master endpoint.
        type: MasterAuth
        required: false
      monitoringService:
        description: 'The monitoring service the cluster should use to write metrics. Currently available options: * `monitoring.googleapis.com` - the Google Cloud Monitoring service. * `none` - no metrics will be exported from the cluster. * if left as an empty string, `monitoring.googleapis.com` will be used.'
        type: string
        required: false
      name:
        description: 'The name of this cluster. The name must be unique within this project and zone, and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.'
        type: string
        required: false
      network:
        description: 'The name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.'
        type: string
        required: false
      nodeConfig:
        description: 'Parameters used in creating the cluster''s nodes. See `nodeConfig` for the description of its properties. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "initial_node_count") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. If unspecified, the defaults are used.'
        type: NodeConfig
        required: false
      nodeIpv4CidrSize:
        description: '[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range.'
        format: int32
        type: integer
        required: false
      nodePools:
        description: 'The node pools associated with this cluster. When creating a new cluster, only a single node pool should be specified. This field should not be set if "node_config" or "initial_node_count" are specified.'
        items:
          type: NodePool
        type: array
        required: false
      selfLink:
        description: '[Output only] Server-defined URL for the resource.'
        type: string
        required: false
      servicesIpv4Cidr:
        description: '[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.'
        type: string
        required: false
      status:
        description: '[Output only] The current status of this cluster.'
        enum:
          - STATUS_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
        type: string
        required: false
      statusMessage:
        description: '[Output only] Additional information about the current status of this cluster, if available.'
        type: string
        required: false
      subnetwork:
        description: 'The name of the Google Compute Engine [subnetwork](/compute/docs/subnetworks) to which the cluster is connected.'
        type: string
        required: false
      zone:
        description: '[Output only] The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.'
        type: string
        required: false
  ClusterUpdate:
    description: 'ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.'
    properties:
      desiredAddonsConfig:
        description: Configurations for the various addons available to run in the cluster.
        type: AddonsConfig
        required: false
      desiredMasterVersion:
        description: The Kubernetes version to change the master to. The only valid value is the latest supported version. Use "-" to have the server automatically select the latest version.
        type: string
        required: false
      desiredMonitoringService:
        description: 'The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com" - the Google Cloud Monitoring service * "none" - no metrics will be exported from the cluster'
        type: string
        required: false
      desiredNodePoolId:
        description: The node pool to be upgraded. This field is mandatory if the "desired_node_version" or "desired_image_family" is specified and there is more than one node pool on the cluster.
        type: string
        required: false
      desiredNodeVersion:
        description: The Kubernetes version to change the nodes to (typically an upgrade). Use `-` to upgrade to the latest version supported by the server.
        type: string
        required: false
  CreateClusterRequest:
    description: CreateClusterRequest creates a cluster.
    properties:
      cluster:
        description: 'A [cluster resource](/container-engine/reference/rest/v1/projects.zones.clusters)'
        type: Cluster
        required: false
  CreateNodePoolRequest:
    description: CreateNodePoolRequest creates a node pool for a cluster.
    properties:
      nodePool:
        description: The node pool to create.
        type: NodePool
        required: false
  HorizontalPodAutoscaling:
    description: 'Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.'
    properties:
      disabled:
        description: 'Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.'
        type: boolean
        required: false
  HttpLoadBalancing:
    description: 'Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.'
    properties:
      disabled:
        description: 'Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.'
        type: boolean
        required: false
  ListClustersResponse:
    description: ListClustersResponse is the result of ListClustersRequest.
    properties:
      clusters:
        description: 'A list of clusters in the project in the specified zone, or across all ones.'
        items:
          type: Cluster
        type: array
        required: false
      missingZones:
        description: 'If any zones are listed here, the list of clusters returned may be missing those zones.'
        items:
          type: string
        type: array
        required: false
  ListNodePoolsResponse:
    description: ListNodePoolsResponse is the result of ListNodePoolsRequest.
    properties:
      nodePools:
        description: A list of node pools for a cluster.
        items:
          type: NodePool
        type: array
        required: false
  ListOperationsResponse:
    description: ListOperationsResponse is the result of ListOperationsRequest.
    properties:
      missingZones:
        description: 'If any zones are listed here, the list of operations returned may be missing the operations from those zones.'
        items:
          type: string
        type: array
        required: false
      operations:
        description: A list of operations in the project in the specified zone.
        items:
          type: Operation
        type: array
        required: false
  MasterAuth:
    description: The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
    properties:
      clientCertificate:
        description: '[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.'
        type: string
        required: false
      clientKey:
        description: '[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.'
        type: string
        required: false
      clusterCaCertificate:
        description: '[Output only] Base64-encoded public certificate that is the root of trust for the cluster.'
        type: string
        required: false
      password:
        description: 'The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password.'
        type: string
        required: false
      username:
        description: The username to use for HTTP basic authentication to the master endpoint.
        type: string
        required: false
  NodeConfig:
    description: Parameters that describe the nodes in a cluster.
    properties:
      diskSizeGb:
        description: 'Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.'
        format: int32
        type: integer
        required: false
      machineType:
        description: 'The name of a Google Compute Engine [machine type](/compute/docs/machine-types) (e.g. `n1-standard-1`). If unspecified, the default machine type is `n1-standard-1`.'
        type: string
        required: false
      metadata:
        additionalProperties:
          type: string
        description: 'The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys: "instance-template", "kube-env", "startup-script", and "user-data" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value''s size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.'
        type: object
        required: false
      oauthScopes:
        description: 'The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.'
        items:
          type: string
        type: array
        required: false
  NodePool:
    description: 'NodePool contains the name and configuration for a cluster''s node pool. Node pools are a set of nodes (i.e. VM''s), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.'
    properties:
      config:
        description: The node configuration of the pool.
        type: NodeConfig
        required: false
      initialNodeCount:
        description: The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota.
        format: int32
        type: integer
        required: false
      instanceGroupUrls:
        description: '[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/) associated with this node pool.'
        items:
          type: string
        type: array
        required: false
      name:
        description: The name of the node pool.
        type: string
        required: false
      selfLink:
        description: Server-defined URL for the resource.
        type: string
        required: false
      status:
        description: The status of the nodes in this pool instance.
        enum:
          - STATUS_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RUNNING_WITH_ERROR
          - RECONCILING
          - STOPPING
          - ERROR
        type: string
        required: false
      statusMessage:
        description: '[Output only] Additional information about the current status of this node pool instance, if available.'
        type: string
        required: false
      version:
        description: The version of the Kubernetes of this node.
        type: string
        required: false
  Operation:
    description: This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.
    properties:
      detail:
        description: 'Detailed operation progress, if available.'
        type: string
        required: false
      name:
        description: The server-assigned ID for the operation.
        type: string
        required: false
      operationType:
        description: The operation type.
        enum:
          - TYPE_UNSPECIFIED
          - CREATE_CLUSTER
          - DELETE_CLUSTER
          - UPGRADE_MASTER
          - UPGRADE_NODES
          - REPAIR_CLUSTER
          - UPDATE_CLUSTER
          - CREATE_NODE_POOL
          - DELETE_NODE_POOL
        type: string
        required: false
      selfLink:
        description: Server-defined URL for the resource.
        type: string
        required: false
      status:
        description: The current status of the operation.
        enum:
          - STATUS_UNSPECIFIED
          - PENDING
          - RUNNING
          - DONE
        type: string
        required: false
      statusMessage:
        description: 'If an error has occurred, a textual description of the error.'
        type: string
        required: false
      targetLink:
        description: Server-defined URL for the target of the operation.
        type: string
        required: false
      zone:
        description: 'The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the operation is taking place.'
        type: string
        required: false
  ServerConfig:
    description: Container Engine service configuration.
    properties:
      defaultClusterVersion:
        description: Version of Kubernetes the service deploys by default.
        type: string
        required: false
      defaultImageFamily:
        description: Default image family.
        type: string
        required: false
      validImageFamilies:
        description: List of valid image families.
        items:
          type: string
        type: array
        required: false
      validNodeVersions:
        description: List of valid node upgrade target versions.
        items:
          type: string
        type: array
        required: false
  UpdateClusterRequest:
    description: UpdateClusterRequest updates the settings of a cluster.
    properties:
      update:
        description: A description of the update.
        type: ClusterUpdate
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
