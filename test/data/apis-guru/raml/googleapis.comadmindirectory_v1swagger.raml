#%RAML 1.0
title: Admin Directory
version: directory_v1
baseUri: 'https://www.googleapis.com/admin/directory/v1'
protocols:
  - HTTPS
description: 'The Admin SDK Directory API lets you view and manage enterprise resources such as users and groups, administrative notifications, security features, and more.'
(oas-tags-definition):
  - name: asps
  - name: channels
  - name: chromeosdevices
  - name: customers
  - name: domainAliases
  - name: domains
  - name: groups
  - name: members
  - name: mobiledevices
  - name: notifications
  - name: orgunits
  - name: privileges
  - name: resources
  - name: roleAssignments
  - name: roles
  - name: schemas
  - name: tokens
  - name: users
  - name: verificationCodes
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_admin_64dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/admin/directory_v1/rest'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): admin
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/admin-sdk/directory/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/admin.directory.customer'
        - 'https://www.googleapis.com/auth/admin.directory.customer.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.device.chromeos'
        - 'https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.device.mobile'
        - 'https://www.googleapis.com/auth/admin.directory.device.mobile.action'
        - 'https://www.googleapis.com/auth/admin.directory.device.mobile.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.domain'
        - 'https://www.googleapis.com/auth/admin.directory.domain.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.group'
        - 'https://www.googleapis.com/auth/admin.directory.group.member'
        - 'https://www.googleapis.com/auth/admin.directory.group.member.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.notifications'
        - 'https://www.googleapis.com/auth/admin.directory.orgunit'
        - 'https://www.googleapis.com/auth/admin.directory.orgunit.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.resource.calendar'
        - 'https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
        - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.user'
        - 'https://www.googleapis.com/auth/admin.directory.user.alias'
        - 'https://www.googleapis.com/auth/admin.directory.user.alias.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
        - 'https://www.googleapis.com/auth/admin.directory.user.security'
        - 'https://www.googleapis.com/auth/admin.directory.userschema'
        - 'https://www.googleapis.com/auth/admin.directory.userschema.readonly'
    description: Oauth 2.0 authentication
/customer:
  displayName: customer
  '/{customer}':
    displayName: '{customer}'
    /roles:
      displayName: roles
      '/{roleId}':
        displayName: '{roleId}'
        uriParameters:
          roleId:
            description: Immutable ID of the role.
            required: true
            type: string
        delete:
          displayName: directory.roles.delete
          description: Deletes a role.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
          (oas-tags):
            - roles
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.roles.get
          description: Retrieves a role.
          responses:
            '200':
              body:
                application/json:
                  type: Role
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
          (oas-tags):
            - roles
        patch:
          displayName: directory.roles.patch
          description: Updates a role. This method supports patch semantics.
          body:
            application/json:
              type: Role
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Role
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
          (oas-tags):
            - roles
        put:
          displayName: directory.roles.update
          description: Updates a role.
          body:
            application/json:
              type: Role
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Role
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
          (oas-tags):
            - roles
      post:
        displayName: directory.roles.insert
        description: Creates a role.
        body:
          application/json:
            type: Role
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Role
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
        (oas-tags):
          - roles
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      get:
        displayName: directory.roles.list
        description: Retrieves a paginated list of all the roles in a domain.
        responses:
          '200':
            body:
              application/json:
                type: Roles
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of results to return.
            maximum: 100
            minimum: 1
            type: integer
          pageToken:
            description: Token to specify the next page in the list.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
        (oas-tags):
          - roles
      /ALL:
        displayName: ALL
        /privileges:
          displayName: privileges
          get:
            displayName: directory.privileges.list
            description: Retrieves a paginated list of all privileges for a customer.
            responses:
              '200':
                body:
                  application/json:
                    type: Privileges
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
            (oas-tags):
              - privileges
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
    /domainaliases:
      displayName: domainaliases
      get:
        displayName: directory.domainAliases.list
        description: Lists the domain aliases of the customer.
        responses:
          '200':
            body:
              application/json:
                type: DomainAliases
            description: Successful response
        queryParameters:
          parentDomainName:
            description: Name of the parent domain for which domain aliases are to be fetched.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.domain.readonly'
        (oas-tags):
          - domainAliases
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{domainAliasName}':
        displayName: '{domainAliasName}'
        uriParameters:
          domainAliasName:
            description: Name of domain alias to be retrieved.
            required: true
            type: string
        delete:
          displayName: directory.domainAliases.delete
          description: Deletes a Domain Alias of the customer.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.domain'
          (oas-tags):
            - domainAliases
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.domainAliases.get
          description: Retrieves a domain alias of the customer.
          responses:
            '200':
              body:
                application/json:
                  type: DomainAlias
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.domain.readonly'
          (oas-tags):
            - domainAliases
      post:
        displayName: directory.domainAliases.insert
        description: Inserts a Domain alias of the customer.
        body:
          application/json:
            type: DomainAlias
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: DomainAlias
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.domain'
        (oas-tags):
          - domainAliases
    /domains:
      displayName: domains
      get:
        displayName: directory.domains.list
        description: Lists the domains of the customer.
        responses:
          '200':
            body:
              application/json:
                type: Domains2
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.domain.readonly'
        (oas-tags):
          - domains
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{domainName}':
        displayName: '{domainName}'
        uriParameters:
          domainName:
            description: Name of domain to be retrieved
            required: true
            type: string
        delete:
          displayName: directory.domains.delete
          description: Deletes a domain of the customer.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.domain'
          (oas-tags):
            - domains
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.domains.get
          description: Retrieves a domain of the customer.
          responses:
            '200':
              body:
                application/json:
                  type: Domains
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.domain.readonly'
          (oas-tags):
            - domains
      post:
        displayName: directory.domains.insert
        description: Inserts a domain of the customer.
        body:
          application/json:
            type: Domains
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Domains
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.domain'
        (oas-tags):
          - domains
    /notifications:
      displayName: notifications
      get:
        displayName: directory.notifications.list
        description: Retrieves a list of notifications.
        responses:
          '200':
            body:
              application/json:
                type: Notifications
            description: Successful response
        queryParameters:
          language:
            description: The ISO 639-1 code of the language notifications are returned in. The default is English (en).
            type: string
          maxResults:
            description: Maximum number of notifications to return per page. The default is 100.
            type: integer
          pageToken:
            description: The token to specify the page of results to retrieve.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.notifications'
        (oas-tags):
          - notifications
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{notificationId}':
        displayName: '{notificationId}'
        uriParameters:
          notificationId:
            description: The unique ID of the notification.
            required: true
            type: string
        get:
          displayName: directory.notifications.get
          description: Retrieves a notification.
          responses:
            '200':
              body:
                application/json:
                  type: Notification
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.notifications'
          (oas-tags):
            - notifications
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        put:
          displayName: directory.notifications.update
          description: Updates a notification.
          body:
            application/json:
              type: Notification
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Notification
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.notifications'
          (oas-tags):
            - notifications
        patch:
          displayName: directory.notifications.patch
          description: Updates a notification. This method supports patch semantics.
          body:
            application/json:
              type: Notification
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Notification
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.notifications'
          (oas-tags):
            - notifications
        delete:
          displayName: directory.notifications.delete
          description: Deletes a notification
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.notifications'
          (oas-tags):
            - notifications
    /resources:
      displayName: resources
      /calendars:
        displayName: calendars
        post:
          displayName: directory.resources.calendars.insert
          description: Inserts a calendar resource.
          body:
            application/json:
              type: CalendarResource
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: CalendarResource
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.resource.calendar'
          (oas-tags):
            - resources
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        '/{calendarResourceId}':
          displayName: '{calendarResourceId}'
          uriParameters:
            calendarResourceId:
              description: The unique ID of the calendar resource to update.
              required: true
              type: string
          get:
            displayName: directory.resources.calendars.get
            description: Retrieves a calendar resource.
            responses:
              '200':
                body:
                  application/json:
                    type: CalendarResource
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly'
            (oas-tags):
              - resources
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          put:
            displayName: directory.resources.calendars.update
            description: Updates a calendar resource.
            body:
              application/json:
                type: CalendarResource
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: CalendarResource
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.resource.calendar'
            (oas-tags):
              - resources
          delete:
            displayName: directory.resources.calendars.delete
            description: Deletes a calendar resource.
            responses:
              '200':
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.resource.calendar'
            (oas-tags):
              - resources
          patch:
            displayName: directory.resources.calendars.patch
            description: Updates a calendar resource. This method supports patch semantics.
            body:
              application/json:
                type: CalendarResource
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: CalendarResource
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.resource.calendar'
            (oas-tags):
              - resources
        get:
          displayName: directory.resources.calendars.list
          description: Retrieves a list of calendar resources for an account.
          responses:
            '200':
              body:
                application/json:
                  type: CalendarResources
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of results to return.
              maximum: 500
              minimum: 1
              type: integer
            pageToken:
              description: Token to specify the next page in the list.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly'
          (oas-tags):
            - resources
    /roleassignments:
      displayName: roleassignments
      post:
        displayName: directory.roleAssignments.insert
        description: Creates a role assignment.
        body:
          application/json:
            type: RoleAssignment
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: RoleAssignment
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
        (oas-tags):
          - roleAssignments
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{roleAssignmentId}':
        displayName: '{roleAssignmentId}'
        uriParameters:
          roleAssignmentId:
            description: Immutable ID of the role assignment.
            required: true
            type: string
        get:
          displayName: directory.roleAssignments.get
          description: Retrieve a role assignment.
          responses:
            '200':
              body:
                application/json:
                  type: RoleAssignment
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
          (oas-tags):
            - roleAssignments
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        delete:
          displayName: directory.roleAssignments.delete
          description: Deletes a role assignment.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.rolemanagement'
          (oas-tags):
            - roleAssignments
      get:
        displayName: directory.roleAssignments.list
        description: Retrieves a paginated list of all roleAssignments.
        responses:
          '200':
            body:
              application/json:
                type: RoleAssignments
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of results to return.
            maximum: 200
            minimum: 1
            type: integer
          pageToken:
            description: Token to specify the next page in the list.
            type: string
          roleId:
            description: 'Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.'
            type: string
          userKey:
            description: 'The user''s primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly'
        (oas-tags):
          - roleAssignments
  '/{customerId}':
    displayName: '{customerId}'
    /devices:
      displayName: devices
      /chromeos:
        displayName: chromeos
        '/{deviceId}':
          displayName: '{deviceId}'
          uriParameters:
            deviceId:
              description: Immutable id of Chrome OS Device
              required: true
              type: string
          get:
            displayName: directory.chromeosdevices.get
            description: Retrieve Chrome OS Device
            responses:
              '200':
                body:
                  application/json:
                    type: ChromeOsDevice
                description: Successful response
            queryParameters:
              projection:
                description: Restrict information returned to a set of selected fields.
                enum:
                  - BASIC
                  - FULL
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly'
            (oas-tags):
              - chromeosdevices
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          put:
            displayName: directory.chromeosdevices.update
            description: Update Chrome OS Device
            body:
              application/json:
                type: ChromeOsDevice
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: ChromeOsDevice
                description: Successful response
            queryParameters:
              projection:
                description: Restrict information returned to a set of selected fields.
                enum:
                  - BASIC
                  - FULL
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.device.chromeos'
            (oas-tags):
              - chromeosdevices
          patch:
            displayName: directory.chromeosdevices.patch
            description: Update Chrome OS Device. This method supports patch semantics.
            body:
              application/json:
                type: ChromeOsDevice
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: ChromeOsDevice
                description: Successful response
            queryParameters:
              projection:
                description: Restrict information returned to a set of selected fields.
                enum:
                  - BASIC
                  - FULL
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.device.chromeos'
            (oas-tags):
              - chromeosdevices
        get:
          displayName: directory.chromeosdevices.list
          description: Retrieve all Chrome OS Devices of a customer (paginated)
          responses:
            '200':
              body:
                application/json:
                  type: ChromeOsDevices
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of results to return. Default is 100
              minimum: 1
              type: integer
            orderBy:
              description: Column to use for sorting results
              enum:
                - annotatedLocation
                - annotatedUser
                - lastSync
                - notes
                - serialNumber
                - status
                - supportEndDate
              type: string
            pageToken:
              description: Token to specify next page in the list
              type: string
            projection:
              description: Restrict information returned to a set of selected fields.
              enum:
                - BASIC
                - FULL
              type: string
            query:
              description: 'Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en&answer=1698333'
              type: string
            sortOrder:
              description: Whether to return results in ascending or descending order. Only of use when orderBy is also used
              enum:
                - ASCENDING
                - DESCENDING
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly'
          (oas-tags):
            - chromeosdevices
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        '/{resourceId}':
          displayName: '{resourceId}'
          /action:
            displayName: action
            post:
              displayName: directory.chromeosdevices.action
              description: Take action on Chrome OS Device
              body:
                application/json:
                  type: ChromeOsDeviceAction
                  (oas-body-name): body
              responses:
                '200':
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/admin.directory.device.chromeos'
              (oas-tags):
                - chromeosdevices
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
      /mobile:
        displayName: mobile
        get:
          displayName: directory.mobiledevices.list
          description: Retrieve all Mobile Devices of a customer (paginated)
          responses:
            '200':
              body:
                application/json:
                  type: MobileDevices
              description: Successful response
          queryParameters:
            maxResults:
              description: Maximum number of results to return. Default is 100
              minimum: 1
              type: integer
            orderBy:
              description: Column to use for sorting results
              enum:
                - deviceId
                - email
                - lastSync
                - model
                - name
                - os
                - status
                - type
              type: string
            pageToken:
              description: Token to specify next page in the list
              type: string
            projection:
              description: Restrict information returned to a set of selected fields.
              enum:
                - BASIC
                - FULL
              type: string
            query:
              description: 'Search string in the format given at http://support.google.com/a/bin/answer.py?hl=en&answer=1408863#search'
              type: string
            sortOrder:
              description: Whether to return results in ascending or descending order. Only of use when orderBy is also used
              enum:
                - ASCENDING
                - DESCENDING
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.device.mobile.readonly'
          (oas-tags):
            - mobiledevices
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        '/{resourceId}':
          displayName: '{resourceId}'
          uriParameters:
            resourceId:
              description: Immutable id of Mobile Device
              required: true
              type: string
          get:
            displayName: directory.mobiledevices.get
            description: Retrieve Mobile Device
            responses:
              '200':
                body:
                  application/json:
                    type: MobileDevice
                description: Successful response
            queryParameters:
              projection:
                description: Restrict information returned to a set of selected fields.
                enum:
                  - BASIC
                  - FULL
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.device.mobile.readonly'
            (oas-tags):
              - mobiledevices
          is:
            - alt
            - fields
            - key
            - oauthToken
            - prettyPrint
            - quotaUser
            - userIp
          /action:
            displayName: action
            post:
              displayName: directory.mobiledevices.action
              description: Take action on Mobile Device
              body:
                application/json:
                  type: MobileDeviceAction
                  (oas-body-name): body
              responses:
                '200':
                  description: Successful response
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/admin.directory.device.mobile.action'
              (oas-tags):
                - mobiledevices
            is:
              - alt
              - fields
              - key
              - oauthToken
              - prettyPrint
              - quotaUser
              - userIp
          delete:
            displayName: directory.mobiledevices.delete
            description: Delete Mobile Device
            responses:
              '200':
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/admin.directory.device.mobile'
            (oas-tags):
              - mobiledevices
    /orgunits:
      displayName: orgunits
      get:
        displayName: directory.orgunits.list
        description: Retrieve all Organization Units
        responses:
          '200':
            body:
              application/json:
                type: OrgUnits
            description: Successful response
        queryParameters:
          orgUnitPath:
            default: ''
            description: the URL-encoded organization unit's path or its Id
            type: string
          type:
            description: Whether to return all sub-organizations or just immediate children
            enum:
              - all
              - children
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.orgunit.readonly'
        (oas-tags):
          - orgunits
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{orgUnitPath}':
        displayName: '{orgUnitPath}'
        uriParameters:
          orgUnitPath:
            description: Full path of the organization unit or its Id
            required: true
            type: string
        delete:
          displayName: directory.orgunits.delete
          description: Remove Organization Unit
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.orgunit'
          (oas-tags):
            - orgunits
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        patch:
          displayName: directory.orgunits.patch
          description: Update Organization Unit. This method supports patch semantics.
          body:
            application/json:
              type: OrgUnit
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: OrgUnit
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.orgunit'
          (oas-tags):
            - orgunits
        get:
          displayName: directory.orgunits.get
          description: Retrieve Organization Unit
          responses:
            '200':
              body:
                application/json:
                  type: OrgUnit
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.orgunit'
                  - 'https://www.googleapis.com/auth/admin.directory.orgunit.readonly'
          (oas-tags):
            - orgunits
        put:
          displayName: directory.orgunits.update
          description: Update Organization Unit
          body:
            application/json:
              type: OrgUnit
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: OrgUnit
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.orgunit'
          (oas-tags):
            - orgunits
      post:
        displayName: directory.orgunits.insert
        description: Add Organization Unit
        body:
          application/json:
            type: OrgUnit
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: OrgUnit
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.orgunit'
        (oas-tags):
          - orgunits
    /schemas:
      displayName: schemas
      get:
        displayName: directory.schemas.list
        description: Retrieve all schemas for a customer
        responses:
          '200':
            body:
              application/json:
                type: Schemas
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.userschema.readonly'
        (oas-tags):
          - schemas
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{schemaKey}':
        displayName: '{schemaKey}'
        uriParameters:
          schemaKey:
            description: Name or immutable Id of the schema
            required: true
            type: string
        delete:
          displayName: directory.schemas.delete
          description: Delete schema
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.userschema'
          (oas-tags):
            - schemas
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        patch:
          displayName: directory.schemas.patch
          description: Update schema. This method supports patch semantics.
          body:
            application/json:
              type: Schema
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Schema
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.userschema'
          (oas-tags):
            - schemas
        put:
          displayName: directory.schemas.update
          description: Update schema
          body:
            application/json:
              type: Schema
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Schema
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.userschema'
          (oas-tags):
            - schemas
        get:
          displayName: directory.schemas.get
          description: Retrieve schema
          responses:
            '200':
              body:
                application/json:
                  type: Schema
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.userschema.readonly'
          (oas-tags):
            - schemas
      post:
        displayName: directory.schemas.insert
        description: Create schema.
        body:
          application/json:
            type: Schema
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Schema
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.userschema'
        (oas-tags):
          - schemas
/users:
  displayName: users
  '/{userKey}':
    displayName: '{userKey}'
    /verificationCodes:
      displayName: verificationCodes
      /invalidate:
        displayName: invalidate
        post:
          displayName: directory.verificationCodes.invalidate
          description: Invalidate the current backup verification codes for the user.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - verificationCodes
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      /generate:
        displayName: generate
        post:
          displayName: directory.verificationCodes.generate
          description: Generate new backup verification codes for the user.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - verificationCodes
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      get:
        displayName: directory.verificationCodes.list
        description: Returns the current set of valid backup verification codes for the specified user.
        responses:
          '200':
            body:
              application/json:
                type: VerificationCodes
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user.security'
        (oas-tags):
          - verificationCodes
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    uriParameters:
      userKey:
        description: 'Email or immutable Id of the user. If Id, it should match with id of user object'
        required: true
        type: string
    delete:
      displayName: directory.users.delete
      description: Delete user
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.user'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: directory.users.get
      description: retrieve user
      responses:
        '200':
          body:
            application/json:
              type: User
          description: Successful response
      queryParameters:
        customFieldMask:
          description: Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.
          type: string
        projection:
          default: basic
          description: What subset of fields to fetch for this user.
          enum:
            - basic
            - custom
            - full
          type: string
        viewType:
          default: admin_view
          description: Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.
          enum:
            - admin_view
            - domain_public
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
      (oas-tags):
        - users
    patch:
      displayName: directory.users.patch
      description: update user. This method supports patch semantics.
      body:
        application/json:
          type: User
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: User
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.user'
      (oas-tags):
        - users
    put:
      displayName: directory.users.update
      description: update user
      body:
        application/json:
          type: User
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: User
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.user'
      (oas-tags):
        - users
    /aliases:
      displayName: aliases
      get:
        displayName: directory.users.aliases.list
        description: List all aliases for a user
        responses:
          '200':
            body:
              application/json:
                type: Aliases
            description: Successful response
        queryParameters:
          event:
            description: Event on which subscription is intended (if subscribing)
            enum:
              - add
              - delete
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: directory.users.aliases.insert
        description: Add a alias for the user
        body:
          application/json:
            type: Alias
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Alias
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user.alias'
        (oas-tags):
          - users
      /watch:
        displayName: watch
        post:
          displayName: directory.users.aliases.watch
          description: Watch for changes in user aliases list
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              body:
                application/json:
                  type: Channel
              description: Successful response
          queryParameters:
            event:
              description: Event on which subscription is intended (if subscribing)
              enum:
                - add
                - delete
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
      '/{alias}':
        displayName: '{alias}'
        uriParameters:
          alias:
            description: The alias to be removed
            required: true
            type: string
        delete:
          displayName: directory.users.aliases.delete
          description: Remove a alias for the user
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.alias'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
    /asps:
      displayName: asps
      get:
        displayName: directory.asps.list
        description: List the ASPs issued by a user.
        responses:
          '200':
            body:
              application/json:
                type: Asps
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user.security'
        (oas-tags):
          - asps
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{codeId}':
        displayName: '{codeId}'
        uriParameters:
          codeId:
            description: The unique ID of the ASP.
            required: true
            type: integer
        delete:
          displayName: directory.asps.delete
          description: Delete an ASP issued by a user.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - asps
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.asps.get
          description: Get information about an ASP issued by a user.
          responses:
            '200':
              body:
                application/json:
                  type: Asp
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - asps
    /makeAdmin:
      displayName: makeAdmin
      post:
        displayName: directory.users.makeAdmin
        description: change admin status of a user
        body:
          application/json:
            type: UserMakeAdmin
            (oas-body-name): body
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
    /photos:
      displayName: photos
      /thumbnail:
        displayName: thumbnail
        delete:
          displayName: directory.users.photos.delete
          description: Remove photos for the user
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user'
          (oas-tags):
            - users
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.users.photos.get
          description: Retrieve photo of a user
          responses:
            '200':
              body:
                application/json:
                  type: UserPhoto
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
          (oas-tags):
            - users
        patch:
          displayName: directory.users.photos.patch
          description: Add a photo for the user. This method supports patch semantics.
          body:
            application/json:
              type: UserPhoto
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: UserPhoto
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user'
          (oas-tags):
            - users
        put:
          displayName: directory.users.photos.update
          description: Add a photo for the user
          body:
            application/json:
              type: UserPhoto
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: UserPhoto
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user'
          (oas-tags):
            - users
    /tokens:
      displayName: tokens
      get:
        displayName: directory.tokens.list
        description: Returns the set of tokens specified user has issued to 3rd party applications.
        responses:
          '200':
            body:
              application/json:
                type: Tokens
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user.security'
        (oas-tags):
          - tokens
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      '/{clientId}':
        displayName: '{clientId}'
        uriParameters:
          clientId:
            description: The Client ID of the application the token is issued to.
            required: true
            type: string
        delete:
          displayName: directory.tokens.delete
          description: Delete all access tokens issued by a user for an application.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - tokens
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.tokens.get
          description: Get information about an access token issued by a user.
          responses:
            '200':
              body:
                application/json:
                  type: Token
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.security'
          (oas-tags):
            - tokens
    /undelete:
      displayName: undelete
      post:
        displayName: directory.users.undelete
        description: Undelete a deleted user
        body:
          application/json:
            type: UserUndelete
            (oas-body-name): body
        responses:
          '200':
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.user'
        (oas-tags):
          - users
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
  get:
    displayName: directory.users.list
    description: Retrieve either deleted users or all users in a domain (paginated)
    responses:
      '200':
        body:
          application/json:
            type: Users
        description: Successful response
    queryParameters:
      customFieldMask:
        description: Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.
        type: string
      customer:
        description: 'Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.'
        type: string
      domain:
        description: Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.
        type: string
      event:
        description: Event on which subscription is intended (if subscribing)
        enum:
          - add
          - delete
          - makeAdmin
          - undelete
          - update
        type: string
      maxResults:
        description: Maximum number of results to return. Default is 100. Max allowed is 500
        maximum: 500
        minimum: 1
        type: integer
      orderBy:
        description: Column to use for sorting results
        enum:
          - email
          - familyName
          - givenName
        type: string
      pageToken:
        description: Token to specify next page in the list
        type: string
      projection:
        default: basic
        description: What subset of fields to fetch for this user.
        enum:
          - basic
          - custom
          - full
        type: string
      query:
        description: 'Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users'
        type: string
      showDeleted:
        description: If set to true retrieves the list of deleted users. Default is false
        type: string
      sortOrder:
        description: Whether to return results in ascending or descending order.
        enum:
          - ASCENDING
          - DESCENDING
        type: string
      viewType:
        default: admin_view
        description: Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.
        enum:
          - admin_view
          - domain_public
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
    (oas-tags):
      - users
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: directory.users.insert
    description: create user.
    body:
      application/json:
        type: User
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: User
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/admin.directory.user'
    (oas-tags):
      - users
  /watch:
    displayName: watch
    post:
      displayName: directory.users.watch
      description: Watch for changes in users list
      body:
        application/json:
          type: Channel
          (oas-body-name): resource
      responses:
        '200':
          body:
            application/json:
              type: Channel
          description: Successful response
      queryParameters:
        customFieldMask:
          description: Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.
          type: string
        customer:
          description: 'Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.'
          type: string
        domain:
          description: Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.
          type: string
        event:
          description: Event on which subscription is intended (if subscribing)
          enum:
            - add
            - delete
            - makeAdmin
            - undelete
            - update
          type: string
        maxResults:
          description: Maximum number of results to return. Default is 100. Max allowed is 500
          maximum: 500
          minimum: 1
          type: integer
        orderBy:
          description: Column to use for sorting results
          enum:
            - email
            - familyName
            - givenName
          type: string
        pageToken:
          description: Token to specify next page in the list
          type: string
        projection:
          default: basic
          description: What subset of fields to fetch for this user.
          enum:
            - basic
            - custom
            - full
          type: string
        query:
          description: 'Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users'
          type: string
        showDeleted:
          description: If set to true retrieves the list of deleted users. Default is false
          type: string
        sortOrder:
          description: Whether to return results in ascending or descending order.
          enum:
            - ASCENDING
            - DESCENDING
          type: string
        viewType:
          default: admin_view
          description: Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.
          enum:
            - admin_view
            - domain_public
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
      (oas-tags):
        - users
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
/admin:
  displayName: admin
  /directory_v1:
    displayName: directory_v1
    /channels:
      displayName: channels
      /stop:
        displayName: stop
        post:
          displayName: admin.channels.stop
          description: Stop watching resources through this channel
          body:
            application/json:
              type: Channel
              (oas-body-name): resource
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.user.readonly'
          (oas-tags):
            - channels
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
/customers:
  displayName: customers
  '/{customerKey}':
    displayName: '{customerKey}'
    uriParameters:
      customerKey:
        description: Id of the customer to be updated
        required: true
        type: string
    get:
      displayName: directory.customers.get
      description: Retrieves a customer.
      responses:
        '200':
          body:
            application/json:
              type: Customer
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.customer.readonly'
      (oas-tags):
        - customers
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    patch:
      displayName: directory.customers.patch
      description: Updates a customer. This method supports patch semantics.
      body:
        application/json:
          type: Customer
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Customer
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.customer'
      (oas-tags):
        - customers
    put:
      displayName: directory.customers.update
      description: Updates a customer.
      body:
        application/json:
          type: Customer
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Customer
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.customer'
      (oas-tags):
        - customers
/groups:
  displayName: groups
  get:
    displayName: directory.groups.list
    description: Retrieve all groups in a domain (paginated)
    responses:
      '200':
        body:
          application/json:
            type: Groups
        description: Successful response
    queryParameters:
      customer:
        description: 'Immutable id of the Google Apps account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.'
        type: string
      domain:
        description: Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.
        type: string
      maxResults:
        description: Maximum number of results to return. Default is 200
        minimum: 1
        type: integer
      pageToken:
        description: Token to specify next page in the list
        type: string
      userKey:
        description: 'Email or immutable Id of the user if only those groups are to be listed, the given user is a member of. If Id, it should match with id of user object'
        type: string
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
    (oas-tags):
      - groups
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
  post:
    displayName: directory.groups.insert
    description: Create Group
    body:
      application/json:
        type: Group
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: Group
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/admin.directory.group'
    (oas-tags):
      - groups
  '/{groupKey}':
    displayName: '{groupKey}'
    uriParameters:
      groupKey:
        description: 'Email or immutable Id of the group. If Id, it should match with id of group object'
        required: true
        type: string
    delete:
      displayName: directory.groups.delete
      description: Delete Group
      responses:
        '200':
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.group'
      (oas-tags):
        - groups
    is:
      - alt
      - fields
      - key
      - oauthToken
      - prettyPrint
      - quotaUser
      - userIp
    get:
      displayName: directory.groups.get
      description: Retrieve Group
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
      (oas-tags):
        - groups
    patch:
      displayName: directory.groups.patch
      description: Update Group. This method supports patch semantics.
      body:
        application/json:
          type: Group
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.group'
      (oas-tags):
        - groups
    put:
      displayName: directory.groups.update
      description: Update Group
      body:
        application/json:
          type: Group
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/admin.directory.group'
      (oas-tags):
        - groups
    /aliases:
      displayName: aliases
      get:
        displayName: directory.groups.aliases.list
        description: List all aliases for a group
        responses:
          '200':
            body:
              application/json:
                type: Aliases
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
        (oas-tags):
          - groups
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: directory.groups.aliases.insert
        description: Add a alias for the group
        body:
          application/json:
            type: Alias
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Alias
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.group'
        (oas-tags):
          - groups
      '/{alias}':
        displayName: '{alias}'
        uriParameters:
          alias:
            description: The alias to be removed
            required: true
            type: string
        delete:
          displayName: directory.groups.aliases.delete
          description: Remove a alias for the group
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.group'
          (oas-tags):
            - groups
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
    /members:
      displayName: members
      get:
        displayName: directory.members.list
        description: Retrieve all members in a group (paginated)
        responses:
          '200':
            body:
              application/json:
                type: Members
            description: Successful response
        queryParameters:
          maxResults:
            description: Maximum number of results to return. Default is 200
            minimum: 1
            type: integer
          pageToken:
            description: Token to specify next page in the list
            type: string
          roles:
            description: Comma separated role values to filter list results on.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
        (oas-tags):
          - members
      is:
        - alt
        - fields
        - key
        - oauthToken
        - prettyPrint
        - quotaUser
        - userIp
      post:
        displayName: directory.members.insert
        description: Add user to the specified group.
        body:
          application/json:
            type: Member
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Member
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/admin.directory.group.member'
        (oas-tags):
          - members
      '/{memberKey}':
        displayName: '{memberKey}'
        uriParameters:
          memberKey:
            description: 'Email or immutable Id of the user. If Id, it should match with id of member object'
            required: true
            type: string
        delete:
          displayName: directory.members.delete
          description: Remove membership.
          responses:
            '200':
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.group.member'
          (oas-tags):
            - members
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
        get:
          displayName: directory.members.get
          description: Retrieve Group Member
          responses:
            '200':
              body:
                application/json:
                  type: Member
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.group.readonly'
          (oas-tags):
            - members
        patch:
          displayName: directory.members.patch
          description: Update membership of a user in the specified group. This method supports patch semantics.
          body:
            application/json:
              type: Member
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Member
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.group.member'
          (oas-tags):
            - members
        put:
          displayName: directory.members.update
          description: Update membership of a user in the specified group.
          body:
            application/json:
              type: Member
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Member
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/admin.directory.group.member'
          (oas-tags):
            - members
types:
  Alias:
    description: JSON template for Alias object in Directory API.
    properties:
      alias:
        description: A alias email
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: Unique id of the group (Read-only) Unique id of the user (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#alias'
        description: Kind of resource this is.
        type: string
        required: false
      primaryEmail:
        description: Group's primary email (Read-only) User's primary email (Read-only)
        type: string
        required: false
  Aliases:
    description: JSON response template to list aliases in Directory API.
    properties:
      aliases:
        description: List of alias objects.
        items: {}
        type: array
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#aliases'
        description: Kind of resource this is.
        type: string
        required: false
  Asp:
    description: The template that returns individual ASP (Access Code) data.
    properties:
      codeId:
        description: The unique ID of the ASP.
        format: int32
        type: integer
        required: false
      creationTime:
        description: The time when the ASP was created. Expressed in Unix time format.
        format: int64
        type: string
        facets:
          format: string
        required: false
      etag:
        description: ETag of the ASP.
        type: string
        required: false
      kind:
        default: 'admin#directory#asp'
        description: 'The type of the API resource. This is always admin#directory#asp.'
        type: string
        required: false
      lastTimeUsed:
        description: The time when the ASP was last used. Expressed in Unix time format.
        format: int64
        type: string
        facets:
          format: string
        required: false
      name:
        description: 'The name of the application that the user, represented by their userId, entered when the ASP was created.'
        type: string
        required: false
      userKey:
        description: The unique ID of the user who issued the ASP.
        type: string
        required: false
  Asps:
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of ASP resources.
        items:
          type: Asp
        type: array
        required: false
      kind:
        default: 'admin#directory#aspList'
        description: 'The type of the API resource. This is always admin#directory#aspList.'
        type: string
        required: false
  CalendarResource:
    description: JSON template for Calendar Resource object in Directory API.
    properties:
      etags:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#resources#calendars#CalendarResource'
        description: 'The type of the resource. For calendar resources, the value is admin#directory#resources#calendars#CalendarResource.'
        type: string
        required: false
      resourceDescription:
        description: The brief description of the calendar resource.
        type: string
        required: false
      resourceEmail:
        description: The read-only email ID for the calendar resource. Generated as part of creating a new calendar resource.
        type: string
        required: false
      resourceId:
        description: The unique ID for the calendar resource.
        type: string
        required: false
      resourceName:
        description: 'The name of the calendar resource. For example, Training Room 1A'
        type: string
        required: false
      resourceType:
        description: The type of the calendar resource. Used for grouping resources in the calendar user interface.
        type: string
        required: false
  CalendarResources:
    description: JSON template for Calendar Resource List Response object in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: The CalendarResources in this page of results.
        items:
          type: CalendarResource
        type: array
        required: false
      kind:
        default: 'admin#directory#resources#calendars#calendarResourcesList'
        description: 'Identifies this as a collection of CalendarResources. This is always admin#directory#resources#calendars#calendarResourcesList.'
        type: string
        required: false
      nextPageToken:
        description: 'The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.'
        type: string
        required: false
  Channel:
    description: An notification channel used to watch for resource changes.
    properties:
      address:
        description: The address where notifications are delivered for this channel.
        type: string
        required: false
      expiration:
        description: 'Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      id:
        description: A UUID or similar unique string that identifies this channel.
        type: string
        required: false
      kind:
        default: 'api#channel'
        description: 'Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string "api#channel".'
        type: string
        required: false
      params:
        description: Additional parameters controlling delivery channel behavior. Optional.
        type: object
        required: false
        properties:
          //:
            description: Declares a new parameter by name.
            type: string
      payload:
        description: A Boolean value to indicate whether payload is wanted. Optional.
        type: boolean
        required: false
      resourceId:
        description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
        type: string
        required: false
      resourceUri:
        description: A version-specific identifier for the watched resource.
        type: string
        required: false
      token:
        description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
        type: string
        required: false
      type:
        description: The type of delivery mechanism used for this channel.
        type: string
        required: false
  ChromeOsDevice:
    description: JSON template for Chrome Os Device resource in Directory API.
    properties:
      activeTimeRanges:
        description: List of active time ranges (Read-only)
        items:
          properties:
            activeTime:
              description: Duration in milliseconds
              format: int32
              type: integer
              required: false
            date:
              description: Date of usage
              type: date-only
              required: false
          type: object
        type: array
        required: false
      annotatedAssetId:
        description: AssetId specified during enrollment or through later annotation
        type: string
        required: false
      annotatedLocation:
        description: Address or location of the device as noted by the administrator
        type: string
        required: false
      annotatedUser:
        description: User of the device
        type: string
        required: false
      bootMode:
        description: Chromebook boot mode (Read-only)
        type: string
        required: false
      deviceId:
        description: Unique identifier of Chrome OS Device (Read-only)
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      ethernetMacAddress:
        description: Chromebook Mac Address on ethernet network interface (Read-only)
        type: string
        required: false
      firmwareVersion:
        description: Chromebook firmware version (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#chromeosdevice'
        description: Kind of resource this is.
        type: string
        required: false
      lastEnrollmentTime:
        description: Date and time the device was last enrolled (Read-only)
        format: rfc3339
        type: datetime
        required: false
      lastSync:
        description: Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)
        format: rfc3339
        type: datetime
        required: false
      macAddress:
        description: Chromebook Mac Address on wifi network interface (Read-only)
        type: string
        required: false
      meid:
        description: Mobile Equipment identifier for the 3G mobile card in the Chromebook (Read-only)
        type: string
        required: false
      model:
        description: Chromebook Model (Read-only)
        type: string
        required: false
      notes:
        description: Notes added by the administrator
        type: string
        required: false
      orderNumber:
        description: Chromebook order number (Read-only)
        type: string
        required: false
      orgUnitPath:
        description: OrgUnit of the device
        type: string
        required: false
      osVersion:
        description: Chromebook Os Version (Read-only)
        type: string
        required: false
      platformVersion:
        description: Chromebook platform version (Read-only)
        type: string
        required: false
      recentUsers:
        description: 'List of recent device users, in descending order by last login time (Read-only)'
        items:
          properties:
            email:
              description: Email address of the user. Present only if the user type is managed
              type: string
              required: false
            type:
              description: The type of the user
              type: string
              required: false
          type: object
        type: array
        required: false
      serialNumber:
        description: Chromebook serial number (Read-only)
        type: string
        required: false
      status:
        description: status of the device (Read-only)
        type: string
        required: false
      supportEndDate:
        description: Final date the device will be supported (Read-only)
        format: rfc3339
        type: datetime
        required: false
      willAutoRenew:
        description: Will Chromebook auto renew after support end date (Read-only)
        type: boolean
        required: false
  ChromeOsDeviceAction:
    description: JSON request template for firing actions on ChromeOs Device in Directory Devices API.
    properties:
      action:
        description: Action to be taken on the ChromeOs Device
        type: string
        required: false
      deprovisionReason:
        type: string
        required: false
  ChromeOsDevices:
    description: JSON response template for List Chrome OS Devices operation in Directory API.
    properties:
      chromeosdevices:
        description: List of Chrome OS Device objects.
        items:
          type: ChromeOsDevice
        type: array
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#chromeosdevices'
        description: Kind of resource this is.
        type: string
        required: false
      nextPageToken:
        description: Token used to access next page of this result.
        type: string
        required: false
  Customer:
    description: JSON template for Customer Resource object in Directory API.
    properties:
      alternateEmail:
        description: The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain
        type: string
        required: false
      customerCreationTime:
        description: The customer's creation time (Readonly)
        format: rfc3339
        type: datetime
        required: false
      customerDomain:
        description: The customer's primary domain name string. Do not include the www prefix when creating a new customer.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: The unique ID for the customer's Google account. (Readonly)
        type: string
        required: false
      kind:
        default: 'admin#directory#customer'
        description: 'Identifies the resource as a customer. Value: admin#directory#customer'
        type: string
        required: false
      language:
        description: The customer's ISO 639-2 language code. The default value is en-US
        type: string
        required: false
      phoneNumber:
        description: The customer's contact phone number in E.164 format.
        type: string
        required: false
      postalAddress:
        description: The customer's postal address information.
        type: CustomerPostalAddress
        required: false
  CustomerPostalAddress:
    description: JSON template for postal address of a customer.
    properties:
      addressLine1:
        description: A customer's physical address. The address can be composed of one to three lines.
        type: string
        required: false
      addressLine2:
        description: Address line 2 of the address.
        type: string
        required: false
      addressLine3:
        description: Address line 3 of the address.
        type: string
        required: false
      contactName:
        description: The customer contact's name.
        type: string
        required: false
      countryCode:
        description: This is a required property. For countryCode information see the ISO 3166 country code elements.
        type: string
        required: false
      locality:
        description: Name of the locality. An example of a locality value is the city of San Francisco.
        type: string
        required: false
      organizationName:
        description: The company or company division name.
        type: string
        required: false
      postalCode:
        description: 'The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element.'
        type: string
        required: false
      region:
        description: Name of the region. An example of a region value is NY for the state of New York.
        type: string
        required: false
  DomainAlias:
    description: JSON template for Domain Alias object in Directory API.
    properties:
      creationTime:
        description: The creation time of the domain alias. (Read-only).
        format: int64
        type: string
        facets:
          format: string
        required: false
      domainAliasName:
        description: The domain alias name.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#domainAlias'
        description: Kind of resource this is.
        type: string
        required: false
      parentDomainName:
        description: The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
        type: string
        required: false
      verified:
        description: Indicates the verification state of a domain alias. (Read-only)
        type: boolean
        required: false
  DomainAliases:
    description: JSON response template to list domain aliases in Directory API.
    properties:
      domainAliases:
        description: List of domain alias objects.
        items:
          type: DomainAlias
        type: array
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#domainAliases'
        description: Kind of resource this is.
        type: string
        required: false
  Domains:
    description: JSON template for Domain object in Directory API.
    properties:
      creationTime:
        description: Creation time of the domain. (Read-only).
        format: int64
        type: string
        facets:
          format: string
        required: false
      domainAliases:
        description: List of domain alias objects. (Read-only)
        items:
          type: DomainAlias
        type: array
        required: false
      domainName:
        description: The domain name of the customer.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      isPrimary:
        description: Indicates if the domain is a primary domain (Read-only).
        type: boolean
        required: false
      kind:
        default: 'admin#directory#domain'
        description: Kind of resource this is.
        type: string
        required: false
      verified:
        description: Indicates the verification state of a domain. (Read-only).
        type: boolean
        required: false
  Domains2:
    description: JSON response template to list Domains in Directory API.
    properties:
      domains:
        description: List of domain objects.
        items:
          type: Domains
        type: array
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#domains'
        description: Kind of resource this is.
        type: string
        required: false
  Group:
    description: JSON template for Group resource in Directory API.
    properties:
      adminCreated:
        description: Is the group created by admin (Read-only) *
        type: boolean
        required: false
      aliases:
        description: List of aliases (Read-only)
        items:
          type: string
        type: array
        required: false
      description:
        description: Description of the group
        type: string
        required: false
      directMembersCount:
        description: Group direct members count
        format: int64
        type: string
        facets:
          format: string
        required: false
      email:
        description: Email of Group
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: Unique identifier of Group (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#group'
        description: Kind of resource this is.
        type: string
        required: false
      name:
        description: Group name
        type: string
        required: false
      nonEditableAliases:
        description: List of non editable aliases (Read-only)
        items:
          type: string
        type: array
        required: false
  Groups:
    description: JSON response template for List Groups operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      groups:
        description: List of group objects.
        items:
          type: Group
        type: array
        required: false
      kind:
        default: 'admin#directory#groups'
        description: Kind of resource this is.
        type: string
        required: false
      nextPageToken:
        description: Token used to access next page of this result.
        type: string
        required: false
  Member:
    description: JSON template for Member resource in Directory API.
    properties:
      email:
        description: Email of member (Read-only)
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      id:
        description: Unique identifier of customer member (Read-only) Unique identifier of group (Read-only) Unique identifier of member (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#member'
        description: Kind of resource this is.
        type: string
        required: false
      role:
        description: Role of member
        type: string
        required: false
      status:
        description: Status of member (Immutable)
        type: string
        required: false
      type:
        description: Type of member (Immutable)
        type: string
        required: false
  Members:
    description: JSON response template for List Members operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#members'
        description: Kind of resource this is.
        type: string
        required: false
      members:
        description: List of member objects.
        items:
          type: Member
        type: array
        required: false
      nextPageToken:
        description: Token used to access next page of this result.
        type: string
        required: false
  MobileDevice:
    description: JSON template for Mobile Device resource in Directory API.
    properties:
      adbStatus:
        description: Adb (USB debugging) enabled or disabled on device (Read-only)
        type: boolean
        required: false
      applications:
        description: List of applications installed on Mobile Device
        items:
          properties:
            displayName:
              description: Display name of application
              type: string
              required: false
            packageName:
              description: Package name of application
              type: string
              required: false
            permission:
              description: List of Permissions for application
              items:
                type: string
              type: array
              required: false
            versionCode:
              description: Version code of application
              format: int32
              type: integer
              required: false
            versionName:
              description: Version name of application
              type: string
              required: false
          type: object
        type: array
        required: false
      basebandVersion:
        description: Mobile Device Baseband version (Read-only)
        type: string
        required: false
      bootloaderVersion:
        description: Mobile Device Bootloader version (Read-only)
        type: string
        required: false
      brand:
        description: Mobile Device Brand (Read-only)
        type: string
        required: false
      buildNumber:
        description: Mobile Device Build number (Read-only)
        type: string
        required: false
      defaultLanguage:
        description: The default locale used on the Mobile Device (Read-only)
        type: string
        required: false
      developerOptionsStatus:
        description: Developer options enabled or disabled on device (Read-only)
        type: boolean
        required: false
      deviceCompromisedStatus:
        description: Mobile Device compromised status (Read-only)
        type: string
        required: false
      deviceId:
        description: Mobile Device serial number (Read-only)
        type: string
        required: false
      devicePasswordStatus:
        description: DevicePasswordStatus (Read-only)
        type: string
        required: false
      email:
        description: List of owner user's email addresses (Read-only)
        items:
          type: string
        type: array
        required: false
      encryptionStatus:
        description: Mobile Device Encryption Status (Read-only)
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      firstSync:
        description: Date and time the device was first synchronized with the policy settings in the Google Apps administrator control panel (Read-only)
        format: rfc3339
        type: datetime
        required: false
      hardware:
        description: Mobile Device Hardware (Read-only)
        type: string
        required: false
      hardwareId:
        description: Mobile Device Hardware Id (Read-only)
        type: string
        required: false
      imei:
        description: Mobile Device IMEI number (Read-only)
        type: string
        required: false
      kernelVersion:
        description: Mobile Device Kernel version (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#mobiledevice'
        description: Kind of resource this is.
        type: string
        required: false
      lastSync:
        description: Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)
        format: rfc3339
        type: datetime
        required: false
      managedAccountIsOnOwnerProfile:
        description: Boolean indicating if this account is on owner/primary profile or not (Read-only)
        type: boolean
        required: false
      manufacturer:
        description: Mobile Device manufacturer (Read-only)
        type: string
        required: false
      meid:
        description: Mobile Device MEID number (Read-only)
        type: string
        required: false
      model:
        description: Name of the model of the device
        type: string
        required: false
      name:
        description: List of owner user's names (Read-only)
        items:
          type: string
        type: array
        required: false
      networkOperator:
        description: Mobile Device mobile or network operator (if available) (Read-only)
        type: string
        required: false
      os:
        description: Name of the mobile operating system
        type: string
        required: false
      otherAccountsInfo:
        description: List of accounts added on device (Read-only)
        items:
          type: string
        type: array
        required: false
      privilege:
        description: DMAgentPermission (Read-only)
        type: string
        required: false
      releaseVersion:
        description: Mobile Device release version version (Read-only)
        type: string
        required: false
      resourceId:
        description: Unique identifier of Mobile Device (Read-only)
        type: string
        required: false
      securityPatchLevel:
        description: Mobile Device Security patch level (Read-only)
        format: int64
        type: string
        facets:
          format: string
        required: false
      serialNumber:
        description: Mobile Device SSN or Serial Number (Read-only)
        type: string
        required: false
      status:
        description: Status of the device (Read-only)
        type: string
        required: false
      supportsWorkProfile:
        description: Work profile supported on device (Read-only)
        type: boolean
        required: false
      type:
        description: The type of device (Read-only)
        type: string
        required: false
      unknownSourcesStatus:
        description: Unknown sources enabled or disabled on device (Read-only)
        type: boolean
        required: false
      userAgent:
        description: Mobile Device user agent
        type: string
        required: false
      wifiMacAddress:
        description: Mobile Device WiFi MAC address (Read-only)
        type: string
        required: false
  MobileDeviceAction:
    description: JSON request template for firing commands on Mobile Device in Directory Devices API.
    properties:
      action:
        description: Action to be taken on the Mobile Device
        type: string
        required: false
  MobileDevices:
    description: JSON response template for List Mobile Devices operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#mobiledevices'
        description: Kind of resource this is.
        type: string
        required: false
      mobiledevices:
        description: List of Mobile Device objects.
        items:
          type: MobileDevice
        type: array
        required: false
      nextPageToken:
        description: Token used to access next page of this result.
        type: string
        required: false
  Notification:
    description: Template for a notification resource.
    properties:
      body:
        description: Body of the notification (Read-only)
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      fromAddress:
        description: Address from which the notification is received (Read-only)
        type: string
        required: false
      isUnread:
        description: Boolean indicating whether the notification is unread or not.
        type: boolean
        required: false
      kind:
        default: 'admin#directory#notification'
        description: The type of the resource.
        type: string
        required: false
      notificationId:
        type: string
        required: false
      sendTime:
        description: Time at which notification was sent (Read-only)
        format: rfc3339
        type: datetime
        required: false
      subject:
        description: Subject of the notification (Read-only)
        type: string
        required: false
  Notifications:
    description: Template for notifications list response.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: List of notifications in this page.
        items:
          type: Notification
        type: array
        required: false
      kind:
        default: 'admin#directory#notifications'
        description: The type of the resource.
        type: string
        required: false
      nextPageToken:
        description: Token for fetching the next page of notifications.
        type: string
        required: false
      unreadNotificationsCount:
        description: Number of unread notification for the domain.
        format: int32
        type: integer
        required: false
  OrgUnit:
    description: JSON template for Org Unit resource in Directory API.
    properties:
      blockInheritance:
        description: Should block inheritance
        type: boolean
        required: false
      description:
        description: Description of OrgUnit
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#orgUnit'
        description: Kind of resource this is.
        type: string
        required: false
      name:
        description: Name of OrgUnit
        type: string
        required: false
      orgUnitId:
        description: Id of OrgUnit
        type: string
        required: false
      orgUnitPath:
        description: Path of OrgUnit
        type: string
        required: false
      parentOrgUnitId:
        description: Id of parent OrgUnit
        type: string
        required: false
      parentOrgUnitPath:
        description: Path of parent OrgUnit
        type: string
        required: false
  OrgUnits:
    description: JSON response template for List Organization Units operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#orgUnits'
        description: Kind of resource this is.
        type: string
        required: false
      organizationUnits:
        description: List of user objects.
        items:
          type: OrgUnit
        type: array
        required: false
  Privilege:
    description: JSON template for privilege resource in Directory API.
    properties:
      childPrivileges:
        description: A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.
        items:
          type: Privilege
        type: array
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      isOuScopable:
        description: If the privilege can be restricted to an organization unit.
        type: boolean
        required: false
      kind:
        default: 'admin#directory#privilege'
        description: 'The type of the API resource. This is always admin#directory#privilege.'
        type: string
        required: false
      privilegeName:
        description: The name of the privilege.
        type: string
        required: false
      serviceId:
        description: The obfuscated ID of the service this privilege is for.
        type: string
        required: false
      serviceName:
        description: The name of the service this privilege is for.
        type: string
        required: false
  Privileges:
    description: JSON response template for List privileges operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of Privilege resources.
        items:
          type: Privilege
        type: array
        required: false
      kind:
        default: 'admin#directory#privileges'
        description: 'The type of the API resource. This is always admin#directory#privileges.'
        type: string
        required: false
  Role:
    description: JSON template for role resource in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      isSuperAdminRole:
        description: Returns true if the role is a super admin role.
        type: boolean
        required: false
      isSystemRole:
        description: Returns true if this is a pre-defined system role.
        type: boolean
        required: false
      kind:
        default: 'admin#directory#role'
        description: 'The type of the API resource. This is always admin#directory#role.'
        type: string
        required: false
      roleDescription:
        description: A short description of the role.
        type: string
        required: false
      roleId:
        description: ID of the role.
        format: int64
        type: string
        facets:
          format: string
        required: false
      roleName:
        description: Name of the role.
        type: string
        required: false
      rolePrivileges:
        description: The set of privileges that are granted to this role.
        items:
          properties:
            privilegeName:
              description: The name of the privilege.
              type: string
              required: false
            serviceId:
              description: The obfuscated ID of the service this privilege is for.
              type: string
              required: false
          type: object
        type: array
        required: false
  RoleAssignment:
    description: JSON template for roleAssignment resource in Directory API.
    properties:
      assignedTo:
        description: The unique ID of the user this role is assigned to.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#roleAssignment'
        description: 'The type of the API resource. This is always admin#directory#roleAssignment.'
        type: string
        required: false
      orgUnitId:
        description: 'If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.'
        type: string
        required: false
      roleAssignmentId:
        description: ID of this roleAssignment.
        format: int64
        type: string
        facets:
          format: string
        required: false
      roleId:
        description: The ID of the role that is assigned.
        format: int64
        type: string
        facets:
          format: string
        required: false
      scopeType:
        description: |-
          The scope in which this role is assigned. Possible values are: 
          - CUSTOMER
          - ORG_UNIT
        type: string
        required: false
  RoleAssignments:
    description: JSON response template for List roleAssignments operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of RoleAssignment resources.
        items:
          type: RoleAssignment
        type: array
        required: false
      kind:
        default: 'admin#directory#roleAssignments'
        description: 'The type of the API resource. This is always admin#directory#roleAssignments.'
        type: string
        required: false
      nextPageToken:
        type: string
        required: false
  Roles:
    description: JSON response template for List roles operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of Role resources.
        items:
          type: Role
        type: array
        required: false
      kind:
        default: 'admin#directory#roles'
        description: 'The type of the API resource. This is always admin#directory#roles.'
        type: string
        required: false
      nextPageToken:
        type: string
        required: false
  Schema:
    description: JSON template for Schema resource in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      fields:
        description: Fields of Schema
        items:
          type: SchemaFieldSpec
        type: array
        required: false
      kind:
        default: 'admin#directory#schema'
        description: Kind of resource this is.
        type: string
        required: false
      schemaId:
        description: Unique identifier of Schema (Read-only)
        type: string
        required: false
      schemaName:
        description: Schema name
        type: string
        required: false
  SchemaFieldSpec:
    description: JSON template for FieldSpec resource for Schemas in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      fieldId:
        description: Unique identifier of Field (Read-only)
        type: string
        required: false
      fieldName:
        description: Name of the field.
        type: string
        required: false
      fieldType:
        description: Type of the field.
        type: string
        required: false
      indexed:
        default: true
        description: Boolean specifying whether the field is indexed or not.
        type: boolean
        required: false
      kind:
        default: 'admin#directory#schema#fieldspec'
        description: Kind of resource this is.
        type: string
        required: false
      multiValued:
        description: Boolean specifying whether this is a multi-valued field or not.
        type: boolean
        required: false
      numericIndexingSpec:
        description: 'Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.'
        properties:
          maxValue:
            description: 'Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.'
            format: double
            type: number
            required: false
          minValue:
            description: 'Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.'
            format: double
            type: number
            required: false
        type: object
        required: false
      readAccessType:
        default: ALL_DOMAIN_USERS
        description: Read ACLs on the field specifying who can view values of this field. Valid values are "ALL_DOMAIN_USERS" and "ADMINS_AND_SELF".
        type: string
        required: false
  Schemas:
    description: JSON response template for List Schema operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#schemas'
        description: Kind of resource this is.
        type: string
        required: false
      schemas:
        description: List of UserSchema objects.
        items:
          type: Schema
        type: array
        required: false
  Token:
    description: JSON template for token resource in Directory API.
    properties:
      anonymous:
        description: Whether the application is registered with Google. The value is true if the application has an anonymous Client ID.
        type: boolean
        required: false
      clientId:
        description: The Client ID of the application the token is issued to.
        type: string
        required: false
      displayText:
        description: The displayable name of the application the token is issued to.
        type: string
        required: false
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#token'
        description: 'The type of the API resource. This is always admin#directory#token.'
        type: string
        required: false
      nativeApp:
        description: Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device.
        type: boolean
        required: false
      scopes:
        description: A list of authorization scopes the application is granted.
        items:
          type: string
        type: array
        required: false
      userKey:
        description: The unique ID of the user that issued the token.
        type: string
        required: false
  Tokens:
    description: JSON response template for List tokens operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of Token resources.
        items:
          type: Token
        type: array
        required: false
      kind:
        default: 'admin#directory#tokenList'
        description: 'The type of the API resource. This is always admin#directory#tokenList.'
        type: string
        required: false
  User:
    description: JSON template for User object in Directory API.
    properties:
      addresses:
        required: false
      agreedToTerms:
        description: Indicates if user has agreed to terms (Read-only)
        readOnly: true
        type: boolean
        facets:
          readOnly?: boolean
        required: false
      aliases:
        description: List of aliases (Read-only)
        items:
          type: string
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      changePasswordAtNextLogin:
        description: Boolean indicating if the user should change password in next login
        type: boolean
        required: false
      creationTime:
        description: User's Google account creation time. (Read-only)
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
      customSchemas:
        description: Custom fields of the user.
        type: object
        required: false
        properties:
          //:
            type: UserCustomProperties
      customerId:
        description: CustomerId of User (Read-only)
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      deletionTime:
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
      emails:
        required: false
      etag:
        description: ETag of the resource.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      externalIds:
        required: false
      hashFunction:
        description: 'Hash function name for password. Supported are MD5, SHA-1 and crypt'
        type: string
        required: false
      id:
        description: Unique identifier of User (Read-only)
        type: string
        required: false
      ims:
        required: false
      includeInGlobalAddressList:
        description: Boolean indicating if user is included in Global Address List
        type: boolean
        required: false
      ipWhitelisted:
        description: Boolean indicating if ip is whitelisted
        type: boolean
        required: false
      isAdmin:
        description: Boolean indicating if the user is admin (Read-only)
        readOnly: true
        type: boolean
        facets:
          readOnly?: boolean
        required: false
      isDelegatedAdmin:
        description: Boolean indicating if the user is delegated admin (Read-only)
        readOnly: true
        type: boolean
        facets:
          readOnly?: boolean
        required: false
      isMailboxSetup:
        description: Is mailbox setup (Read-only)
        readOnly: true
        type: boolean
        facets:
          readOnly?: boolean
        required: false
      kind:
        default: 'admin#directory#user'
        description: Kind of resource this is.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      lastLoginTime:
        description: User's last login time. (Read-only)
        format: rfc3339
        readOnly: true
        type: datetime
        facets:
          readOnly?: boolean
        required: false
      name:
        description: User's name
        type: UserName
        required: false
      nonEditableAliases:
        description: List of non editable aliases (Read-only)
        items:
          type: string
        readOnly: true
        type: array
        facets:
          readOnly?: boolean
        required: false
      notes:
        required: false
      orgUnitPath:
        description: OrgUnit of User
        type: string
        required: false
      organizations:
        required: false
      password:
        description: User's password
        type: string
        required: false
      phones:
        required: false
      primaryEmail:
        description: username of User
        type: string
        required: false
      relations:
        required: false
      suspended:
        description: Indicates if user is suspended
        type: boolean
        required: false
      suspensionReason:
        description: Suspension reason if user is suspended (Read-only)
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      thumbnailPhotoEtag:
        description: ETag of the user's photo (Read-only)
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      thumbnailPhotoUrl:
        description: Photo Url of the user (Read-only)
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      websites:
        required: false
  UserAbout:
    description: JSON template for About (notes) of a user in Directory API.
    properties:
      contentType:
        description: 'About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.'
        type: string
        required: false
      value:
        description: Actual value of notes.
        type: string
        required: false
  UserAddress:
    description: JSON template for address.
    properties:
      country:
        description: Country.
        type: string
        required: false
      countryCode:
        description: Country code.
        type: string
        required: false
      customType:
        description: Custom type.
        type: string
        required: false
      extendedAddress:
        description: Extended Address.
        type: string
        required: false
      formatted:
        description: Formatted address.
        type: string
        required: false
      locality:
        description: Locality.
        type: string
        required: false
      poBox:
        description: Other parts of address.
        type: string
        required: false
      postalCode:
        description: Postal code.
        type: string
        required: false
      primary:
        description: If this is user's primary address. Only one entry could be marked as primary.
        type: boolean
        required: false
      region:
        description: Region.
        type: string
        required: false
      sourceIsStructured:
        description: 'User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses, but any values will eventually be clobbered.'
        type: boolean
        required: false
      streetAddress:
        description: Street.
        type: string
        required: false
      type:
        description: 'Each entry can have a type which indicates standard values of that entry. For example address could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.'
        type: string
        required: false
  UserCustomProperties:
    description: JSON template for a set of custom properties (i.e. all fields in a particular schema)
    type: object
    properties:
      //: {}
  UserEmail:
    description: JSON template for an email.
    properties:
      address:
        description: Email id of the user.
        type: string
        required: false
      customType:
        description: Custom Type.
        type: string
        required: false
      primary:
        description: If this is user's primary email. Only one entry could be marked as primary.
        type: boolean
        required: false
      type:
        description: 'Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.'
        type: string
        required: false
  UserExternalId:
    description: JSON template for an externalId entry.
    properties:
      customType:
        description: Custom type.
        type: string
        required: false
      type:
        description: The type of the Id.
        type: string
        required: false
      value:
        description: The value of the id.
        type: string
        required: false
  UserIm:
    description: JSON template for instant messenger of an user.
    properties:
      customProtocol:
        description: Custom protocol.
        type: string
        required: false
      customType:
        description: Custom type.
        type: string
        required: false
      im:
        description: Instant messenger id.
        type: string
        required: false
      primary:
        description: If this is user's primary im. Only one entry could be marked as primary.
        type: boolean
        required: false
      protocol:
        description: 'Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify the custom name in customProtocol field.'
        type: string
        required: false
      type:
        description: 'Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.'
        type: string
        required: false
  UserMakeAdmin:
    description: JSON request template for setting/revoking admin status of a user in Directory API.
    properties:
      status:
        description: Boolean indicating new admin status of the user
        type: boolean
        required: false
  UserName:
    description: JSON template for name of a user in Directory API.
    properties:
      familyName:
        description: Last Name
        type: string
        required: false
      fullName:
        description: Full Name
        type: string
        required: false
      givenName:
        description: First Name
        type: string
        required: false
  UserOrganization:
    description: JSON template for an organization entry.
    properties:
      costCenter:
        description: The cost center of the users department.
        type: string
        required: false
      customType:
        description: Custom type.
        type: string
        required: false
      department:
        description: Department within the organization.
        type: string
        required: false
      description:
        description: Description of the organization.
        type: string
        required: false
      domain:
        description: The domain to which the organization belongs to.
        type: string
        required: false
      location:
        description: Location of the organization. This need not be fully qualified address.
        type: string
        required: false
      name:
        description: Name of the organization
        type: string
        required: false
      primary:
        description: If it user's primary organization.
        type: boolean
        required: false
      symbol:
        description: Symbol of the organization.
        type: string
        required: false
      title:
        description: Title (designation) of the user in the organization.
        type: string
        required: false
      type:
        description: 'Each entry can have a type which indicates standard types of that entry. For example organization could be of school, work etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.'
        type: string
        required: false
  UserPhone:
    description: JSON template for a phone entry.
    properties:
      customType:
        description: Custom Type.
        type: string
        required: false
      primary:
        description: If this is user's primary phone or not.
        type: boolean
        required: false
      type:
        description: 'Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax, work, mobile etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.'
        type: string
        required: false
      value:
        description: Phone number.
        type: string
        required: false
  UserPhoto:
    description: JSON template for Photo object in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      height:
        description: Height in pixels of the photo
        format: int32
        type: integer
        required: false
      id:
        description: Unique identifier of User (Read-only)
        type: string
        required: false
      kind:
        default: 'admin#directory#user#photo'
        description: Kind of resource this is.
        type: string
        required: false
      mimeType:
        description: Mime Type of the photo
        type: string
        required: false
      photoData:
        description: Base64 encoded photo data
        format: byte
        type: string
        facets:
          format: string
        required: false
      primaryEmail:
        description: Primary email of User (Read-only)
        type: string
        required: false
      width:
        description: Width in pixels of the photo
        format: int32
        type: integer
        required: false
  UserRelation:
    description: JSON template for a relation entry.
    properties:
      customType:
        description: Custom Type.
        type: string
        required: false
      type:
        description: 'The relation of the user. Some of the possible values are mother, father, sister, brother, manager, assistant, partner.'
        type: string
        required: false
      value:
        description: The name of the relation.
        type: string
        required: false
  UserUndelete:
    description: JSON request template to undelete a user in Directory API.
    properties:
      orgUnitPath:
        description: OrgUnit of User
        type: string
        required: false
  UserWebsite:
    description: JSON template for a website entry.
    properties:
      customType:
        description: Custom Type.
        type: string
        required: false
      primary:
        description: If this is user's primary website or not.
        type: boolean
        required: false
      type:
        description: 'Each entry can have a type which indicates standard types of that entry. For example website could be of home, work, blog etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.'
        type: string
        required: false
      value:
        description: Website.
        type: string
        required: false
  Users:
    description: JSON response template for List Users operation in Apps Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#users'
        description: Kind of resource this is.
        type: string
        required: false
      nextPageToken:
        description: Token used to access next page of this result.
        type: string
        required: false
      trigger_event:
        description: Event that triggered this response (only used in case of Push Response)
        type: string
        required: false
      users:
        description: List of user objects.
        items:
          type: User
        type: array
        required: false
  VerificationCode:
    description: JSON template for verification codes in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      kind:
        default: 'admin#directory#verificationCode'
        description: 'The type of the resource. This is always admin#directory#verificationCode.'
        type: string
        required: false
      userId:
        description: The obfuscated unique ID of the user.
        type: string
        required: false
      verificationCode:
        description: A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.
        type: string
        required: false
  VerificationCodes:
    description: JSON response template for List verification codes operation in Directory API.
    properties:
      etag:
        description: ETag of the resource.
        type: string
        required: false
      items:
        description: A list of verification code resources.
        items:
          type: VerificationCode
        type: array
        required: false
      kind:
        default: 'admin#directory#verificationCodesList'
        description: 'The type of the resource. This is always admin#directory#verificationCodesList.'
        type: string
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
