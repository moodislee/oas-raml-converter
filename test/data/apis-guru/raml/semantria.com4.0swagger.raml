#%RAML 1.0
title: Semantria
version: '4.0'
baseUri: 'https://api.semantria.com/'
mediaType:
  - application/json
  - application/xml
protocols:
  - HTTPS
description: 'Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.'
(oas-tags-definition):
  - description: Blacklisted output
    name: Blacklist
  - description: User categories
    name: Categories
  - description: Configurations
    name: Configuration
  - description: User entities
    name: Entities
  - description: Supported features
    name: Features
  - description: Sentiment-Bearing Phrases
    name: Phrases
  - description: Discovery analysis
    name: ProcessingCollections
  - description: Basic analysis
    name: ProcessingDocuments
  - description: Queries
    name: Queries
  - description: Usage statistics
    name: Statistics
  - description: API status
    name: Status
  - description: Subscription details
    name: Subscription
  - description: Taxonomy
    name: Taxonomy
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_semantria.com_marketing_img_ui_semantria-lexalytics_mainlogo.png'
  (oas-x-origin):
    format: swagger
    url: 'https://semantria.com/developer/api-docs-prod'
    version: '1.2'
  (oas-x-preferred): true
  (oas-x-providerName): semantria.com
(oas-externalDocs):
  url: 'https://semantria.com/support/developer/'
/document:
  displayName: document
  '/{document_id}.{content_type}':
    displayName: '{document_id}.{content_type}'
    uriParameters:
      document_id:
        description: Document ID
        required: true
        type: string
      content_type:
        required: true
        type: string
    get:
      displayName: receiveDocumentAnalyticData
      description: This method retrieves analysis results for the single document by its unique ID or the document’s status in queue if it did not analyzed yet. Semantria guarantees delivering of all documents back to the client even if they FAILED on Semantria side due to some reason.
      (oas-summary): Retrieve document analysis or its status in queue
      responses:
        '200':
          body:
            application/json:
              type: DocumentAnalyticData
          description: Client request accepted. Server responds with processed document or its status.
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '404':
          description: No documents with provided ID found on server.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingDocuments
    delete:
      displayName: cancelDocument
      description: This method cancels document analysis by unique ID on Semantria side if it is waiting for analysis in queue.
      (oas-summary): Cancel document analysis
      responses:
        '200':
          description: Client request accepted. Document canceled from processing on the server.
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '404':
          description: No documents with provided ID found on server.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingDocuments
  '/processed.{content_type}':
    displayName: 'processed.{content_type}'
    uriParameters:
      content_type:
        required: true
        type: string
    get:
      displayName: retrieveProcessedDocuments
      description: 'This method retrieves analysis results for processed documents from Semantria. FAILED documents will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the document, which were queued using the same configuration ID, in opposite Primary.'
      (oas-summary): Retrieve documents analysis
      responses:
        '200':
          body:
            application/json:
              type: DocumentAnalyticData
          description: Client request accepted and queued. Server responds with processed documents.
        '202':
          description: 'Client request accepted, no processed documents found on the server.'
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingDocuments
  '/batch.{content_type}':
    displayName: 'batch.{content_type}'
    uriParameters:
      content_type:
        required: true
        type: string
    post:
      displayName: queueBatchOfDocuments
      description: This method queues batch of documents for analysis. The rules are the same as for single document mode but here the documents ordered into the batch.
      (oas-summary): Queue batch of documents for analysis
      body:
        application/json:
          type: Request_class
          (oas-body-name): Batch of Documents
          description: List of parametrized JSON or XML objects.
      responses:
        '200':
          body:
            application/json:
              type: Document
          description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
        '202':
          description: Client request accepted and queued for processing.
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '403':
          description: Request is forbidden for selected processing mode.
        '406':
          description: Documents limit per batch is achieved.
        '413':
          description: Characters limit for the document exceeded.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingDocuments
'/taxonomy.{content_type}':
  displayName: 'taxonomy.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  put:
    displayName: updateTaxonomy
    description: This method updates taxonomy nodes on Semantria side.
    (oas-summary): Update taxonomy nodes
    body:
      application/json:
        type: Request_class
        (oas-body-name): Taxonomy
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: TaxonomyNode_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed queries per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Taxonomy
  post:
    displayName: addTaxonomy
    description: This method adds taxonomy nodes on Semantria side.
    (oas-summary): Add taxonomy nodes
    body:
      application/json:
        type: Request_class
        (oas-body-name): Taxonomy
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: TaxonomyNode_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed queries per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Taxonomy
  get:
    displayName: getTaxonomy
    description: This method retrieves list of taxonomy available on Semantria side.
    (oas-summary): Retrieve taxonomy
    responses:
      '200':
        body:
          application/json:
            items:
              type: TaxonomyNode_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the taxonomy list.
      '202':
        description: Client request accepted and no taxonomy found. Server responds with empty body.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration taxonomy linked to.
        required: false
        type: string
    (oas-tags):
      - Taxonomy
  delete:
    displayName: deleteTaxonomy
    description: This method removes certain taxonomy nodes by their IDs on Semantria side.
    (oas-summary): Remove taxonomy nodes
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Taxonomy
'/entities.{content_type}':
  displayName: 'entities.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deleteEntities
    description: This method removes certain user entities by their names on Semantria side.
    (oas-summary): Remove user entities
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Entities
  get:
    displayName: getEntities
    description: This method retrieves list of user entities available on Semantria side.
    (oas-summary): Retrieve user entities
    responses:
      '200':
        body:
          application/json:
            items:
              type: Entity_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the entities list.
      '202':
        description: Client request accepted and no entities found. Server responds with empty body.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user entities linked to.
        required: false
        type: string
    (oas-tags):
      - Entities
  post:
    displayName: addEntities
    description: This method adds user entities on Semantria side.
    (oas-summary): Add user entities
    body:
      application/json:
        type: Request_class
        (oas-body-name): User entities
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Entity_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed entities per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user entities linked to.
        required: false
        type: string
    (oas-tags):
      - Entities
  put:
    displayName: updateEntities
    description: This method updates user entities by unique IDs on Semantria side.
    (oas-summary): Update user entities
    body:
      application/json:
        type: Request_class
        (oas-body-name): User entities
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Entity_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed entities per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user entities linked to.
        required: false
        type: string
    (oas-tags):
      - Entities
'/blacklist.{content_type}':
  displayName: 'blacklist.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deleteBlacklistItems
    description: This method removes certain blacklisted items by their values on Semantria side.
    (oas-summary): Remove items from blacklist
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration blacklist items linked to.
        required: false
        type: string
    (oas-tags):
      - Blacklist
  post:
    displayName: addBlacklist
    description: This method adds new unique items to the backlist on Semantria side.
    (oas-summary): Add items to blacklist
    body:
      application/json:
        type: Request_class
        (oas-body-name): Blacklisted items
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: BlacklistItem_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed blacklisted items per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration blacklist linked to.
        required: false
        type: string
    (oas-tags):
      - Blacklist
  get:
    displayName: getBlacklist
    description: This method retrieves all backlisted items available on Semantria side.
    (oas-summary): Retrieve blacklisted items
    responses:
      '200':
        body:
          application/json:
            items:
              type: BlacklistItem_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the blacklist.
      '202':
        description: 'Client request accepted, no blacklist found. Server responds with empty body.'
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration blacklist linked to.
        required: false
        type: string
    (oas-tags):
      - Blacklist
  put:
    displayName: updateBlacklist
    description: This method updates existing items by unique IDs in the backlist on Semantria side.
    (oas-summary): Update items in blacklist
    body:
      application/json:
        type: Request_class
        (oas-body-name): Blacklisted items
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: BlacklistItem_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed blacklisted items per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration blacklist linked to.
        required: false
        type: string
    (oas-tags):
      - Blacklist
'/categories.{content_type}':
  displayName: 'categories.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deleteCategories
    description: This method removes certain user categories by their IDs on Semantria side.
    (oas-summary): Remove user categories
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user categories linked to.
        required: false
        type: string
    (oas-tags):
      - Categories
  post:
    displayName: addCategories
    description: This method adds user categories on Semantria side.
    (oas-summary): Add user categories
    body:
      application/json:
        type: Request_class
        (oas-body-name): Categories
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Category_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed categories per configuration or samples per category achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user categories linked to.
        required: false
        type: string
    (oas-tags):
      - Categories
  get:
    displayName: getCategories
    description: This method retrieves list of user categories available on Semantria side.
    (oas-summary): Retrieve user categories
    responses:
      '200':
        body:
          application/json:
            items:
              type: Category_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the categories list.
      '202':
        description: 'Client request accepted, no categories found. Server responds with empty body.'
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user categories linked to.
        required: false
        type: string
    (oas-tags):
      - Categories
  put:
    displayName: updateCategories
    description: This method updates user categories by unique IDs on Semantria side.
    (oas-summary): Updates user categories
    body:
      application/json:
        type: Request_class
        (oas-body-name): Categories
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Category_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed categories per configuration or samples per category achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration user categories linked to.
        required: false
        type: string
    (oas-tags):
      - Categories
'/features.{content_type}':
  displayName: 'features.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  get:
    displayName: getFeatures
    description: This method returns list of supported features per languages supported by Semantria API. Let the users know about API capabilities.
    (oas-summary): Retrieve supported features
    responses:
      '200':
        body:
          application/json:
            items:
              type: Feature
            type: array
        description: Client request accepted and queued. Server responds with subscription details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      language:
        description: Filter features by specified language
        required: false
        type: string
    (oas-tags):
      - Features
'/collection.{content_type}':
  displayName: 'collection.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  post:
    displayName: queueCollection
    description: 'This method queues collection of documents onto the server for analysis. Queued collection of documents analyzes in common context as entire thing. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Collection IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing collection with the new Data'
    (oas-summary): Queue collection for analysis
    body:
      application/json:
        type: Request_class
        (oas-body-name): Collection
        description: Parametrized JSON or XML object.
    responses:
      '200':
        body:
          application/json:
            type: Collection
        description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
      '202':
        description: Client request accepted and queued for processing.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Documents limit per collection is achieved.
      '413':
        description: Characters limit for single document exceeded.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration used for analysis.
        required: false
        type: string
    (oas-tags):
      - ProcessingCollections
'/phrases.{content_type}':
  displayName: 'phrases.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deletePhrases
    description: This method removes certain sentiment-bearing phrases by their names on Semantria side.
    (oas-summary): Remove sentiment-bearing phrases
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration phrases linked to.
        required: false
        type: string
    (oas-tags):
      - Phrases
  get:
    displayName: getPhrases
    description: This method retrieves list of sentiment-bearing phrases available on Semantria side.
    (oas-summary): Retrieve sentiment-bearing phrases
    responses:
      '200':
        body:
          application/json:
            items:
              type: Phrase_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
      '202':
        description: Client request accepted and no sentiment-bearing phrases found. Server responds with empty body.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration phrases linked to.
        required: false
        type: string
    (oas-tags):
      - Phrases
  post:
    displayName: addPhrases
    description: This method adds sentiment-bearing phrases on Semantria side.
    (oas-summary): Add sentiment-bearing phrases
    body:
      application/json:
        type: Request_class
        (oas-body-name): Sentiment phrases
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Phrase_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed sentiment-bearing phrases per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration phrases linked to.
        required: false
        type: string
    (oas-tags):
      - Phrases
  put:
    displayName: updatePhrases
    description: This method updates sentiment-bearing phrases by unique IDs on Semantria side.
    (oas-summary): Updates sentiment-bearing phrases
    body:
      application/json:
        type: Request_class
        (oas-body-name): Sentiment phrases
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Phrase_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed sentiment-bearing phrases per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration phrases linked to.
        required: false
        type: string
    (oas-tags):
      - Phrases
/collection:
  displayName: collection
  '/{collection_id}.{content_type}':
    displayName: '{collection_id}.{content_type}'
    uriParameters:
      collection_id:
        description: Collection ID
        required: true
        type: string
      content_type:
        required: true
        type: string
    delete:
      displayName: cancelCollection
      description: This method cancels collection analysis by unique ID on Semantria side if it is waiting for analysis in queue.
      (oas-summary): Cancel collection analysis
      responses:
        '200':
          description: Client request accepted. Document canceled from processing on the server.
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '404':
          description: No collections with provided ID found on server.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingCollections
    get:
      displayName: receiveCollectionAnalyticData
      description: This method retrieves analysis results for documents collection by its unique ID or the collection’s status in queue if it did not analyzed yet. Semantria guarantees delivering of all collections back to the client even if they FAILED on Semantria side due to some reason.
      (oas-summary): Retrieve collection analysis or its status in queue
      responses:
        '200':
          body:
            application/json:
              type: CollectionAnalyticData
          description: Client request accepted. Server responds with processed document or its status.
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '404':
          description: No collections with provided ID found on server.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingCollections
  '/processed.{content_type}':
    displayName: 'processed.{content_type}'
    uriParameters:
      content_type:
        required: true
        type: string
    get:
      displayName: retrieveProcessedCollections
      description: 'This method retrieves analysis results for processed collections from Semantria. FAILED collections will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the collections, which were queued using the same configuration ID, in opposite Primary configuration uses.'
      (oas-summary): Retrieve collections analysis
      responses:
        '200':
          body:
            application/json:
              type: CollectionAnalyticData
          description: Client request accepted and queued. Server responds with processed collections.
        '202':
          description: 'Client request accepted, no processed collections found on the server.'
        '401':
          description: Authentication failed.
        '402':
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        '500':
          description: Server side issue. Server may respond with the details in response body.
      queryParameters:
        config_id:
          description: Identifier of configuration used for analysis.
          required: false
          type: string
      (oas-tags):
        - ProcessingCollections
'/configurations.{content_type}':
  displayName: 'configurations.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deleteConfigurations
    description: This method removes certain configuration by unique ID on Semantria side.
    (oas-summary): Remove user configurations
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Configuration
  post:
    displayName: addConfigurations
    description: This method creates configurations on Semantria side.
    (oas-summary): Create user configurations
    body:
      application/json:
        type: Request_class
        (oas-body-name): Configurations
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Configuration_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed configurations for user subscription is reached.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Configuration
  get:
    displayName: getConfigurations
    description: This method retrieves all user configurations available on Semantria side.
    (oas-summary): Retrieve user configurations
    responses:
      '200':
        body:
          application/json:
            items:
              type: Configuration_ResponseVersion
            type: array
        description: Client request accepted. Server responds with status object.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Configuration
  put:
    displayName: updateConfigurations
    description: This method updates specific configurations by unique IDs on Semantria side.
    (oas-summary): Update user configurations
    body:
      application/json:
        type: Request_class
        (oas-body-name): Configurations
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Configuration_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed configurations for user subscription is reached.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Configuration
'/document.{content_type}':
  displayName: 'document.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  post:
    displayName: queueDocument
    description: 'This method queues document onto the server for analysis. Queued document analyzes individually and will have its own set of results. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Document IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing document with the new Data.'
    (oas-summary): Queue document for analysis
    body:
      application/json:
        type: Request_class
        (oas-body-name): Document
        description: Parametrized JSON or XML object.
    responses:
      '200':
        body:
          application/json:
            type: Document
        description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
      '202':
        description: Client request accepted and queued for processing.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '413':
        description: Characters limit for the document exceeded.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration used for analysis.
        required: false
        type: string
    (oas-tags):
      - ProcessingDocuments
'/queries.{content_type}':
  displayName: 'queries.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  delete:
    displayName: deleteQueries
    description: This method removes certain queries by their IDs on Semantria side.
    (oas-summary): Remove queries
    responses:
      '200':
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '403':
        description: Forbidden. Server responds if client tries to remove primary configuration.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Queries
  get:
    displayName: getQueries
    description: This method retrieves list of queries available on Semantria side.
    (oas-summary): Retrieve queries
    responses:
      '200':
        body:
          application/json:
            items:
              type: Query_ResponseVersion
            type: array
        description: Client request accepted and queued. Server responds with the queries list.
      '202':
        description: Client request accepted and no queries found. Server responds with empty body.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Queries
  post:
    displayName: addQueries
    description: This method adds queries on Semantria side.
    (oas-summary): Add or update queries
    body:
      application/json:
        type: Request_class
        (oas-body-name): Queries
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Query_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed queries per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Queries
  put:
    displayName: updateQueries
    description: This method updates queries by unique IDs on Semantria side.
    (oas-summary): Update queries
    body:
      application/json:
        type: Request_class
        (oas-body-name): Queries
        description: List of parametrized JSON or XML objects.
    responses:
      '200':
        body:
          application/json:
            items:
              type: Query_ResponseVersion
            type: array
        description: No response was specified
      '202':
        description: Client request accepted and queued.
      '400':
        description: Incoming request body is incorrect. Server responds with details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '406':
        description: Number of allowed queries per configuration achieved.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Identifier of configuration queries linked to.
        required: false
        type: string
    (oas-tags):
      - Queries
'/statistics.{content_type}':
  displayName: 'statistics.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  get:
    displayName: getStatistic
    description: 'This method retrieves overall and per configuration usage statistics for specific timeframe. Statistics ordered per available configurations. Available interval values are current <b>hour</b>, <b>day</b>, <b>week</b>, <b>month</b> and <b>year</b>.'
    (oas-summary): Retrieve usage statistics
    responses:
      '200':
        body:
          application/json:
            type: Statistic
        description: Client request accepted. Server responds with statistics details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    queryParameters:
      config_id:
        description: Configuration identifier for usage statistics retrieving.
        required: false
        type: string
      interval:
        description: 'Hour, Day, Week, Month, Year values are supported.'
        required: false
        type: string
    (oas-tags):
      - Statistics
'/status.{content_type}':
  displayName: 'status.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  get:
    displayName: getStatus
    description: 'This method retrieves API status information such as the app version, current API version, supported languages and encodings, the overall service status, etc.'
    (oas-summary): Retrieve API status
    responses:
      '200':
        body:
          application/json:
            type: Status
        description: Client request accepted. Server responds with status object.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Status
'/subscription.{content_type}':
  displayName: 'subscription.{content_type}'
  uriParameters:
    content_type:
      required: true
      type: string
  get:
    displayName: getSubscription
    description: 'This method retrieves user''s subscription details that consist of the list of allowed features, configured limits and options on Semantria side.'
    (oas-summary): Retrieve subscription details
    responses:
      '200':
        body:
          application/json:
            type: Subscription
        description: Client request accepted and queued. Server responds with subscription details.
      '401':
        description: Authentication failed.
      '402':
        description: Unauthorized. Limit of system calls is reached or subscription is expired.
      '500':
        description: Server side issue. Server may respond with the details in response body.
    (oas-tags):
      - Subscription
types:
  Attribute:
    properties:
      count:
        description: The count of occurrences of the attribute across the documents
        minimum: 0
        type: integer
      label:
        description: The text of the attribute
        type: string
      mentions:
        description: Returns genuine forms of attribute mentioned across the documents
        items:
          type: Mention
        type: array
  AutoCategory:
    properties:
      categories:
        description: List of sub-categories of the current category if applicable
        items:
          type: SubCategory
        type: array
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with this category
        format: double
        type: number
      strength_score:
        description: Strength of the category matches with the document content
        format: double
        type: number
      title:
        description: 'The category title, which is its label in the text'
        type: string
      type:
        description: Type of category; can be either "node" (root level) or "leaf" (nested) value
        type: string
  BlacklistItem_InsertVersion:
    properties:
      name:
        description: Blacklist item name
        type: string
  BlacklistItem_ResponseVersion:
    properties:
      id:
        description: Unique blacklist item identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Blacklist item name
        type: string
  BlacklistItem_UpdateVersion:
    properties:
      id:
        description: Unique blacklist item identifier
        type: string
      name:
        description: Blacklist item name
        type: string
  Category_InsertVersion:
    properties:
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
  Category_ResponseVersion:
    properties:
      id:
        description: Unique category identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
  Category_UpdateVersion:
    properties:
      id:
        description: Unique category identifier
        type: string
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
  Collection:
    properties:
      documents:
        description: List of documents text that need to be analyzed by the service
        items:
          type: string
        type: array
      id:
        description: Up to 32 symbols unique identifier of document assigned and tracked by client
        type: string
      job_id:
        description: Specific marker of incoming job that can be used then for collections retrieving
        type: string
      metadata:
        description: Free form metadata object(JSON) attached to the certain collection
        type: JSON
      tag:
        description: Any text of up to 50 characters used like marker
        type: string
  CollectionAnalyticData:
    properties:
      config_id:
        description: Unique configuration identifier. Usually 36 alphanumeric characters
        type: string
      docs_count:
        description: Count of the documents the collection consist of
        type: integer
      entities:
        description: Returns the named entities and user defined entities from the text
        items:
          type: Entity
        type: array
      facets:
        description: Returns the facets extracted across all documents in the collection
        items:
          type: Facet
        type: array
      id:
        description: Unique collection identifier. Can be up to 36 alphanumeric characters
        type: string
      job_id:
        description: 'Specific marker of a job collection belongs to, can be used for collections ordering on client side.'
        type: string
      metadata:
        description: Free form metadata object(JSON) attached to the certain collection
        type: JSON
      status:
        description: Status of the collection
        enum:
          - queued
          - processed
          - failed
        type: string
      tag:
        description: Any text of up to 50 characters used like marker
        type: string
      taxonomy:
        description: Returns the taxonomy determined for the text
        items:
          type: Topic
        type: array
      themes:
        description: Returns themes across the documents
        items:
          type: Theme
        type: array
      topics:
        description: Returns the concept and query defined topics determined for the text
        items:
          type: Topic
        type: array
  ConfigurationCollectionSection:
    properties:
      attributes:
        description: 'Defines whether attributes for facets will be reported for the collection. Default: true'
        type: boolean
      concept_topics:
        description: 'Defines whether user_categories will be reported for the collection. Default: false'
        type: boolean
      facets:
        description: 'Defines whether facets will be reported for the collection. Default: true'
        type: boolean
      mentions:
        description: 'Defines whether mentions for themes, user/named entities, facets and attributes will be reported for the collection. Default: false'
        type: boolean
      named_entities:
        description: 'Defines whether named entities will be reported for the collection. Default: true'
        type: boolean
      query_topics:
        description: 'Defines whether queries will be reported for the collection. Default: true'
        type: boolean
      themes:
        description: 'Defines whether themes will be reported for the collection. Default: true'
        type: boolean
      user_entities:
        description: 'Defines whether user entities will be reported for the collection. Default: true'
        type: boolean
  ConfigurationDocumentSection:
    properties:
      auto_categories:
        description: 'Defines whether auto-categories will be reported for the document. Default: true'
        type: boolean
      concept_topics:
        description: 'Defines whether user categories will be reported for the document. Default: false'
        type: boolean
      detect_language:
        description: 'Switches on language detection feature. Default: true'
        type: boolean
      intentions:
        description: 'Switches on intentions detection feature. Default: false'
        type: boolean
      mentions:
        description: 'Defines whether mentions for themes and user/named entities will be reported for the document. Default: false'
        type: boolean
      model_sentiment:
        description: 'Switches on/off model-based sentiment feature. Default: false'
        type: boolean
      named_entities:
        description: 'Defines whether named entities will be reported for the document. Default: true'
        type: boolean
      opinions:
        description: 'Defines whether user/named entity opinions will be reported for the document. Default: false'
        type: boolean
      pos_types:
        description: Defines parts-of-speech which will be responded by the server
        enum:
          - All
          - Noun
          - Verb
          - Adjective
          - Determiner
          - Misc
          - Twitter
          - Chinese
        type: string
      query_topics:
        description: 'Defines whether queries will be reported for the document. Default: true'
        type: boolean
      relations:
        description: 'Defines whether user/named entity relations will be reported for the document. Default: false'
        type: boolean
      sentiment_phrases:
        description: 'Defines whether sentiment-bearing phrases will be reported for the document. Default: true'
        type: boolean
      summary_size:
        description: 'Limits the number of sentences for the document summary feature.  Default: 3'
        maximum: 20
        minimum: 0
        type: integer
      themes:
        description: 'Defines whether document and user/named entity themes will be reported for the document. Default: false'
        type: boolean
      user_entities:
        description: 'Defines whether user entities will be reported for the document. Default: true'
        type: boolean
  Configuration_InsertVersion:
    properties:
      alphanumeric_threshold:
        description: 'Defines the threshold of alphanumeric characters needed in the text in percent. Default: 80'
        maximum: 100
        minimum: 0
        type: integer
      auto_response:
        description: 'Defines whether or not the service should respond with processed results automatically. Default: false'
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      collection:
        description: Includes options related to collection processing mode
        type: ConfigurationCollectionSection
      concept_topics_threshold:
        description: 'Defines concept topics detection threshold. Default: 0.45'
        format: double
        type: number
      document:
        description: Includes options related to document processing mode
        type: ConfigurationDocumentSection
      entities_threshold:
        description: 'Defines low threshold for evidence score of named and user entities to be reported in the output. Default: 55'
        type: integer
      is_primary:
        description: 'Identifies whether the current configuration is primary or not. Default: false'
        type: boolean
      language:
        description: 'Defines target language that will be used for task processing. Default: English'
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence_mode:
        description: 'Defines whether or not service should use one sentence mode with less accurate grammar. Default: false'
        type: boolean
      process_html:
        description: 'Defines whether or not the service should clean up HTML tags before processing. Default: false'
        type: boolean
  Configuration_ResponseVersion:
    properties:
      alphanumeric_threshold:
        description: 'Defines the threshold for alphanumeric characters in the text in percent. Default: 80'
        maximum: 100
        minimum: 0
        type: integer
      auto_response:
        description: 'Defines whether or not the service should respond with processed results automatically. Default: false'
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      collection:
        description: Includes options related to collection processing mode
        type: ConfigurationCollectionSection
      concept_topics_threshold:
        description: 'Defines concept topics detection threshold. Default: 0.45'
        format: double
        type: number
      document:
        description: Includes options related to document processing mode
        type: ConfigurationDocumentSection
      entities_threshold:
        description: 'Defines low threshold for evidence score of named and user entities to be reported in the output. Default: 55'
        type: integer
      id:
        description: Unique configuration identifier
        type: string
      is_primary:
        description: 'Identifies whether the current configuration is primary or not. Default: false'
        type: boolean
      language:
        description: 'Defines target language that will be used for task processing. Default: English'
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence_mode:
        description: 'Defines whether or not service should use one sentence mode with less accurate grammar. Default: false'
        type: boolean
      process_html:
        description: 'Defines whether or not the service should clean up HTML tags before processing. Default: false'
        type: boolean
      template:
        description: Unique identifier of template configuration if copy operation is performing
        type: string
      version:
        description: 'Version of the vertical pack, for versioning purposes'
        type: string
  Configuration_UpdateVersion:
    properties:
      alphanumeric_threshold:
        description: 'Defines the threshold of alphanumeric characters needed in the text in percent. Default: 80'
        maximum: 100
        minimum: 0
        type: integer
      auto_response:
        description: 'Defines whether or not the service should respond with processed results automatically. Default: false'
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      collection:
        description: Includes options related to collection processing mode
        type: ConfigurationCollectionSection
      concept_topics_threshold:
        description: 'Defines concept topics detection threshold. Default: 0.45'
        format: double
        type: number
      document:
        description: Includes options related to document processing mode
        type: ConfigurationDocumentSection
      entities_threshold:
        description: 'Defines low threshold for evidence score of named and user entities to be reported in the output. Default: 55'
        type: integer
      id:
        description: Unique configuration identifier
        type: string
      is_primary:
        description: 'Identifies whether the current configuration is primary or not. Default: false'
        type: boolean
      language:
        description: 'Defines target language that will be used for task processing. Default: English'
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence_mode:
        description: 'Defines whether or not service should use one sentence mode with less accurate grammar. Default: false'
        type: boolean
      process_html:
        description: 'Defines whether or not the service should clean up HTML tags before processing. Default: false'
        type: boolean
  Details:
    properties:
      is_imperative:
        description: Represents whether sentence (group of words) is imperative or not
        type: boolean
      is_polar:
        description: Represents whether or not sentence content contains sentiment polarity
        type: boolean
      words:
        description: Returns list of words grouped by the parent sentence
        items:
          type: Word
        type: array
  Document:
    properties:
      id:
        description: Up to 32 symbols unique identifier of document assigned and tracked by client.
        type: string
      job_id:
        description: Specific marker of incoming job that can be used then for documents retrieving
        type: string
      metadata:
        description: Free form metadata object(JSON) attached to the certain document
        type: JSON
      tag:
        description: Any text of up to 50 characters used like marker.
        type: string
      text:
        description: Document text that needs to be analyzed by the service.
        type: string
  DocumentAnalyticData:
    properties:
      auto_categories:
        description: Auto-generated categories applicable for the document
        items:
          type: AutoCategory
        type: array
      config_id:
        description: Unique configuration identifier. Usually 36 alphanumeric characters
        type: string
      details:
        description: Returns sentences from the original document with POS tags within
        items:
          type: Details
        type: array
      entities:
        description: Returns the named entities and user defined entities from the text
        items:
          type: Entity
        type: array
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      intentions:
        description: Returns intentions list detected by the engine
        items:
          type: Intention
        type: array
      job_id:
        description: 'Specific marker of a job document belongs to, can be used for documents ordering on client side'
        type: string
      language:
        description: Determined language of source text
        type: string
      language_score:
        description: The percentage score of the best match of language among detected languages
        format: double
        type: number
      metadata:
        description: Free form metadata object(JSON) attached to the certain document
        type: JSON
      model_sentiment:
        description: Returns details of model-based sentiment analysis for the document
        type: ModelSentiment
      opinions:
        description: Returns the list of opinions extracted from the source text
        items:
          type: Opinion
        type: array
      phrases:
        description: Returns sentiment-bearing phrases of the document
        items:
          type: Phrase
        type: array
      relations:
        description: Returns relations which represent a connection between one or more Entity objects
        items:
          type: Relation
        type: array
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: A sentiment analysis of the document text
        format: double
        type: number
      source_text:
        description: Original source text passed by client for this document
        type: string
      status:
        description: Status of the document
        enum:
          - queued
          - processed
          - failed
        type: string
      summary:
        description: A summary of the document text
        type: string
      taxonomy:
        description: Returns the taxonomy determined for the text
        items:
          type: Topic
        type: array
      themes:
        description: Returns themes of the document
        items:
          type: Theme
        type: array
      topics:
        description: Returns the concept and query defined topics determined for the text
        items:
          type: Topic
        type: array
  Entity:
    properties:
      count:
        description: The count of occurrences of the entity across the documents
        minimum: 0
        type: integer
      entity_type:
        description: 'Type of the entity (Company, Person, Place, Product, etc.)'
        type: string
      label:
        description: 'Descriptive label for the entity, if applicable'
        type: string
      mentions:
        description: Returns the genuine forms of entity mentioned across the documents
        items:
          type: Mention
        type: array
      negative_count:
        description: The count of negative occurrences of the entity across the documents
        minimum: 0
        type: integer
      neutral_count:
        description: The count of neutral occurrences of the entity across the documents
        minimum: 0
        type: integer
      positive_count:
        description: The count of positive occurrences of the entity across the documents
        minimum: 0
        type: integer
      title:
        description: Normalized form of the entity. It is the normalized entity title
        type: string
      type:
        description: Type of the entity; can be either “named” or “user” (reserved for future usage)
        enum:
          - named
          - user
        type: string
  Entity_InsertVersion:
    properties:
      label:
        description: 'Descriptive label for the entity, e.g. Wikipedia URL'
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: 'Type of the entity (Company, Person, any custom type)'
        type: string
  Entity_ResponseVersion:
    properties:
      id:
        description: Unique user entity identifier
        type: string
      label:
        description: 'Descriptive label for the entity, e.g. Wikipedia URL'
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: 'Type of the entity (Company, Person, any custom type)'
        type: string
  Entity_UpdateVersion:
    properties:
      id:
        description: Unique user entity identifier
        type: string
      label:
        description: 'Descriptive label for the entity, e.g. Wikipedia URL'
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: 'Type of the entity (Company, Person, any custom type)'
        type: string
  Facet:
    properties:
      attributes:
        description: Returns the attributes associated with this facet
        items:
          type: Attribute
        type: array
      count:
        description: The count of occurrences of the facet in the text
        minimum: 0
        type: integer
      label:
        description: The text of the facet
        type: string
      mentions:
        description: Returns genuine forms of facet mentioned across the documents
        items:
          type: Mention
        type: array
      negative_count:
        description: The count of negative occurrences of the facet across the documents
        minimum: 0
        type: integer
      neutral_count:
        description: The count of neutral occurrences of the facet across the documents
        minimum: 0
        type: integer
      positive_count:
        description: The count of positive occurrences of the facet across the documents
        minimum: 0
        type: integer
  Feature:
    properties:
      detailed_mode:
        description: Includes detailed mode output for certain language
        type: FeatureDetailedModeSection
      discovery_mode:
        description: Includes discovery mode output for certain language
        type: FeatureDiscoveryModeSection
      html_processing:
        description: Represents whether HTML processing supported for certain language or not
        type: boolean
      id:
        description: Unique language identifier
        type: string
      language:
        description: Represents language following options relevant to
        type: string
      one_sentence_mode:
        description: Considers entire text as one sentence and uses optimized chunker for short content like tweets.
        type: boolean
      settings:
        description: Includes analysis adjustment options for certain language
        type: FeatureSettingsSection
      templates:
        description: Includes all existing templates
        type: FeatureTemplateSection
  FeatureDetailedModeSection:
    properties:
      auto_categories:
        description: Represents whether auto-categories of entities supported for certain language or not
        type: boolean
      entity_opinions:
        description: Represents whether opinions of entities supported for certain language or not
        type: boolean
      entity_relations:
        description: Represents whether relations of entities supported for certain language or not
        type: boolean
      intentions:
        description: Represents whether intentions detection supported for certain language or not
        type: boolean
      language_detection:
        description: Represents whether language detection feature supported or not
        type: boolean
      mentions:
        description: Represents whether mentions for themes and entities supported for certain language or not
        type: boolean
      model_sentiment:
        description: Represents whether model-based sentiment supported for certain language or not
        type: boolean
      named_entities:
        description: Represents whether named entities extraction supported for certain language or not
        type: boolean
      pos_tagging:
        description: Represents whether POS tagging supported for certain language or not
        type: boolean
      queries:
        description: Represents whether queries of entities supported for certain language or not
        type: boolean
      sentiment:
        description: Represents whether sentiment detection supported for certain language or not
        type: boolean
      sentiment_phrases:
        description: Represents whether sentiment phrases detection supported for certain language or not
        type: boolean
      summarization:
        description: Represents whether summarization supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      themes:
        description: Represents whether document and entity themes supported for certain language or not
        type: boolean
      user_categories:
        description: Represents whether user categories of entities supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities extraction supported for certain language or not
        type: boolean
  FeatureDiscoveryModeSection:
    properties:
      attributes:
        description: Represents whether attributes of facets supported for certain language or not
        type: boolean
      concept_topics:
        description: Represents whether user categories extraction supported for certain language or not
        type: boolean
      facets:
        description: Represents whether facets detection supported for certain language or not
        type: boolean
      mentions:
        description: 'Represents whether mentions for facets, themes and entities supported for certain language or not'
        type: boolean
      named_entities:
        description: Represents whether named entities extraction supported for certain language or not
        type: boolean
      query_topics:
        description: Represents whether queries extraction supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      themes:
        description: Represents whether themes extraction supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities extraction supported for certain language or not
        type: boolean
  FeatureSettingsSection:
    properties:
      blacklist:
        description: Represents whether blacklist feature supported for certain language or not
        type: boolean
      concept_topics:
        description: Represents whether user categories definition supported for certain language or not
        type: boolean
      query_topics:
        description: Represents whether queries definition supported for certain language or not
        type: boolean
      sentiment_phrases:
        description: Represents whether sentiment-bearing phrases adjustmment supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities definition supported for certain language or not
        type: boolean
  FeatureTemplateSection:
    properties:
      config_id:
        description: Unique identifier of configuration associated with the vertical pack. Required for cloning
        type: string
      description:
        description: 'Verbal description of template features, belonging to domain area, etc.'
        type: string
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      is_free:
        description: Shows whether Vertical pack is free or requires subscription
        type: boolean
      language:
        description: The language supported by the vertical pack
        type: string
      name:
        description: Name of the vertical pack
        type: string
      type:
        description: 'The type of the vertical pack, can be either "vertical-pack" or "language-default"'
        enum:
          - language-default
          - vertical-pack
        type: string
      version:
        description: 'Version of the vertical pack, for versioning purposes.'
        type: string
  Intention:
    properties:
      evidence_phrase:
        description: The phrase which expressed the intention
        type: string
      type:
        description: 'The classification of the intention detected (buy, quit, etc.)'
        type: string
      what:
        description: The object of the intention (if detected)
        type: string
      who:
        description: The author of the intention (if detected)
        type: string
  JSON: {}
  Location:
    properties:
      index:
        description: Document index within collection where the mention appeared
        type: integer
      length:
        description: The length of the mention in bytes
        type: integer
      offset:
        description: The amount of bytes offset in the original text before the start of the mention
        type: integer
  Mention:
    properties:
      is_negated:
        description: Indicates whether or not the mention has been negated
        type: boolean
      label:
        description: The text of the attribute mention
        type: string
      locations:
        description: List of coordinates of the mentions found within the collection
        items:
          type: Location
        type: array
      negating_phrase:
        description: 'If the mention has been negated, this gives the negating phrase'
        type: string
  ModelSentiment:
    properties:
      mixed_score:
        description: Mixed sentiment score associated with the document
        format: double
        type: number
      model_name:
        description: Name of the sentiment model used for scoring
        type: string
      negative_score:
        description: Negative (probable negative score) sentiment score associated with the document
        format: double
        type: number
      neutral_score:
        description: Neutral (probable neutral score) sentiment score associated with the document
        format: double
        type: number
      positive_score:
        description: Positive (probable positive score) sentiment score associated with the document
        format: double
        type: number
      sentiment_polarity:
        description: 'Verbal representation of sentiment score that matches the best on the document. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
  Opinion:
    properties:
      quotation:
        description: The text of the expressed opinion
        type: string
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with the opinion
        format: double
        type: number
      speaker:
        description: An entity title identifying the author of the opinion
        format: float
        type: number
      topic:
        description: 'An entity title identifying the subject of the opinion, if applicable'
        type: string
      type:
        description: Type of opinion according to extracted entity
        enum:
          - named
          - user
        type: string
  Phrase:
    properties:
      intensifying_phrase:
        description: 'If the phrase has been intensified, this gives the intensifying phrase'
        type: string
      is_intensified:
        description: Specifies whether the phrase has been intensified or not
        type: boolean
      is_negated:
        description: Specifies whether the phrase has been negated or not
        type: boolean
      length:
        description: The length of the phrase in bytes
        type: integer
      negating_phrase:
        description: 'If the phrase has been negated, this gives the negating phrase'
        type: string
      offset:
        description: The amount of bytes offset in the original text before the start of the phrase
        type: integer
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with this phrase
        format: double
        type: number
      title:
        description: The text of the sentiment-bearing phrase
        type: string
      type:
        description: Type of phrase; can be either "possible" or "detected" value
        type: string
  Phrase_InsertVersion:
    properties:
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
  Phrase_ResponseVersion:
    properties:
      id:
        description: Unique sentiment-bearing phrase identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
  Phrase_UpdateVersion:
    properties:
      id:
        description: Unique sentiment-bearing phrase identifier
        type: string
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
  Query_InsertVersion:
    properties:
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
  Query_ResponseVersion:
    properties:
      id:
        description: Unique query identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
  Query_UpdateVersion:
    properties:
      id:
        description: Unique query identifier
        type: string
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
  Relation:
    properties:
      confidence_score:
        description: A measure of confidence in the relationship extraction
        format: float
        type: number
      entities:
        description: Returns entities which presents parent relationship
        items:
          type: RelationEntity
        type: array
      extra:
        description: Extra information that has been extracted about the relationship
        type: string
      relation_type:
        description: A label describing the nature of the relationship
        type: string
      type:
        description: Type of relation according to extracted entities
        enum:
          - named
          - user
        type: string
  RelationEntity:
    properties:
      entity_type:
        description: 'Type of the entity (Company, Person, Place, Product, etc.)'
        type: string
      title:
        description: Normalized entity title based on existing entity normalization rules
        type: string
  Request_class: {}
  Statistic:
    properties:
      batches_queued:
        description: Total number of queued batches of texts processed
        minimum: 0
        type: integer
      calls_data:
        description: Total number of data API calls made. These affect you API balance
        minimum: 0
        type: integer
      calls_polling:
        description: Total number of polling API calls made
        minimum: 0
        type: integer
      calls_settings:
        description: Total number of settings API calls made. These do not affect API balance
        minimum: 0
        type: integer
      configurations:
        description: Includes statistics per specific configuration
        items:
          type: StatisticConfiguration
        type: array
      docs_failed:
        description: Total number of documents that have failed to be processed
        minimum: 0
        type: integer
      docs_queued:
        description: Total number of documents that have been queued
        minimum: 0
        type: integer
      docs_retrieved:
        description: Total number of successfully processed documents that have been returned
        minimum: 0
        type: integer
      docs_successful:
        description: Total number of documents that have been successfully processed
        minimum: 0
        type: integer
      latest_used_app:
        description: The latest application that used the API on this account
        type: string
      name:
        description: Semantria subscriber name. Usually email
        type: string
      total_api_calls:
        description: Total number of API calls made
        minimum: 0
        type: integer
  StatisticConfiguration:
    properties:
      batches_queued:
        description: Number of queued batches of texts using certain configuration
        minimum: 0
        type: integer
      calls_data:
        description: Number of data API calls made  using certain configuration. These affect you API balance
        minimum: 0
        type: integer
      calls_polling:
        description: Number of polling API calls made using certain configuration. These do not affect API balance
        minimum: 0
        type: integer
      calls_settings:
        description: Number of settings API calls made  using certain configuration. These do not affect API balance
        minimum: 0
        type: integer
      config_id:
        description: Unique identifier of configuration
        type: string
      docs_failed:
        description: Number of documents that have failed to be processed using certain configuration
        minimum: 0
        type: integer
      docs_queued:
        description: Number of documents that have been queued using certain configuration
        minimum: 0
        type: integer
      docs_retrieved:
        description: Number of successfully processed documents which have been returned using certain configuration
        minimum: 0
        type: integer
      docs_successful:
        description: Number of documents that have been successfully processed using certain configuration
        minimum: 0
        type: integer
      latest_used_app:
        description: The latest application used by certain configuration
        type: string
      name:
        description: The name of configuration
        type: string
      total_api_calls:
        description: Number of API calls made  using certain configuration
        minimum: 0
        type: integer
  Status:
    properties:
      api_version:
        description: Represents current version of the exposed API
        type: string
      service_status:
        description: Represents the availability of the service
        enum:
          - available
          - pending
          - sold
        type: string
      service_version:
        description: Represents current version of the Semantria service
        type: string
      supported_compression:
        description: Exposes supported compression algorithms. Currently only gzip and deflate are supported
        type: string
      supported_encoding:
        description: Exposes supported content encoding. Currently only UTF-8 is supported
        type: string
      supported_languages:
        description: Exposes list of supported languages
        items:
          type: string
        type: array
  SubCategory:
    properties:
      strength_score:
        description: Strength of the category matches with the document content
        format: double
        type: number
      title:
        description: 'The category title, which is its label in the text'
        type: string
      type:
        description: Type of category; can be either "node" (root level) or "leaf" (nested) value
        type: string
  Subscription:
    properties:
      basic_settings:
        description: Includes basic settings of current subscription
        type: SubscriptionBasicSection
      billing_settings:
        description: Billing related settings of current subscription
        type: SubscriptionBillingSection
      feature_settings:
        description: Includes features related settings of current subscription
        type: SubscriptionFeatureSection
      name:
        description: Semantria subscriber name. Usually email
        type: string
      status:
        description: 'Semantria subscriber status. Can be active, expired, disabled, etc'
        type: string
  SubscriptionBasicSection:
    properties:
      auto_response_batch_limit:
        description: Represents the maximum size of outgoing batch for auto-response feature
        minimum: 0
        type: integer
      blacklist_limit:
        description: Represents the maximum number of allowed blacklist items
        minimum: 0
        type: integer
      callback_batch_limit:
        description: Represents the maximum size of outgoing batch for callback data retrieving mode
        minimum: 0
        type: integer
      collection_limit:
        description: Represents the maximum size of collection in documents
        minimum: 0
        type: integer
      concept_topic_samples_limit:
        description: Represents the maximum number of allowed user category samples
        minimum: 0
        type: integer
      concept_topics_limit:
        description: Represents the maximum number of allowed user categories
        minimum: 0
        type: integer
      configurations_limit:
        description: Represents the maximum number of allowed configurations
        minimum: 0
        type: integer
      document_length:
        description: Represents the maximum length of the document allowed for processing
        minimum: 0
        type: integer
      incoming_batch_limit:
        description: Represents the maximum size of the incoming batch of documents
        minimum: 0
        type: integer
      near_operator_distance:
        description: Represents the maximum allowed distance that can be used with NEAR operator
        minimum: 0
        type: integer
      near_operator_limit:
        description: Represents the maximum number of NEAR operators that can appear in query/entity/phrase
        minimum: 0
        type: integer
      polling_batch_limit:
        description: Represents the maximum size of outgoing batch for polling data retrieving mode
        minimum: 0
        type: integer
      queries_depth_level:
        description: Represents the maximum depth level allowed for nested and referenced queries
        minimum: 0
        type: integer
      query_topics_limit:
        description: Represents the maximum number of allowed queries
        minimum: 0
        type: integer
      return_source_text:
        description: Indicates whether responding of source text along with the analysis data is allowed or not
        type: boolean
      sentiment_phrases_limit:
        description: Represents the maximum number of allowed sentiment-bearing phrases
        minimum: 0
        type: integer
      summary_size_limit:
        description: Represent the maximum number allowed as output limit of configuration
        minimum: 0
        type: integer
      taxonomy_depth_limit:
        description: Represents the maximum depth level allowed for nested taxonomy nodes
        minimum: 0
        type: integer
      taxonomy_limit:
        description: Represents the number of nodes allowed for entire taxonomy tree
        minimum: 0
        type: integer
      taxonomy_topics_limit:
        description: Represents the maximum allowed number of topics associated with the certain taxonomy node
        minimum: 0
        type: integer
      user_entities_limit:
        description: Represents the maximum number of allowed user entities
        minimum: 0
        type: integer
  SubscriptionBillingSection:
    properties:
      app_seats_allocated:
        description: Number of allocated application cells permitted to work with the API
        minimum: 0
        type: integer
      app_seats_permitted:
        description: Number of permitted application to work with the same API account
        minimum: 0
        type: integer
      data_calls_balance:
        description: Represents actual value of remained data API calls
        minimum: 0
        type: integer
      data_calls_limit:
        description: Represents the limit of data API calls per "data_calls_limit_interval" value
        minimum: 0
        type: integer
      data_calls_limit_interval:
        description: Represents an interval for the "data_calls_limit" value of current subscription
        minimum: 0
        type: integer
      docs_balance:
        description: Current transaction balance. Applicable for pay-as-you-go subscriptions only
        minimum: 0
        type: integer
      expiration_date:
        description: Expiration date of current subscription. Defined as a Unix time stamp
        type: string
      job_ids_allocated:
        description: Number of job Ids currently allocated on the server by the certain subscription
        minimum: 0
        type: integer
      job_ids_permitted:
        description: Number of job Ids allowed for the certain subscription
        minimum: 0
        type: integer
      polling_calls_balance:
        description: Represents actual value of remained polling API calls
        minimum: 0
        type: integer
      polling_calls_limit:
        description: Represents the limit of polling API calls per "polling_calls_limit_interval" value
        minimum: 0
        type: integer
      polling_calls_limit_interval:
        description: Represents an interval for the "polling_calls_limit" value of current subscription
        minimum: 0
        type: integer
      settings_calls_balance:
        description: Represents actual value of remained settings API calls
        minimum: 0
        type: integer
      settings_calls_limit:
        description: Represents the limit of settings API calls per "settings_calls_limit_interval" value
        minimum: 0
        type: integer
      settings_calls_limit_interval:
        description: Represents an interval for the "settings_calls_limit" value of current subscription
        minimum: 0
        type: integer
  SubscriptionFeatureSection:
    properties:
      collection:
        description: Includes collection processing mode related settings
        type: SubscriptionFeatureSectionCollection
      document:
        description: Includes document processing mode related settings
        type: SubscriptionFeatureSectionDocument
      html_processing:
        description: Identifies whether HTML processing feature is supported or not
        type: boolean
      supported_languages:
        description: Lists all languages which are allowed for current subscription
        type: string
      templates:
        description: Includes available templates
        type: SubscriptionFeatureSectionTemplate
  SubscriptionFeatureSectionCollection:
    properties:
      concept_topics:
        description: Indicates whether concept topics are allowed or not
        type: boolean
      facets:
        description: Indicates whether facets extraction feature is allowed or not
        type: boolean
      mentions:
        description: Indicates whether mentions are allowed for facets and attributes or not
        type: boolean
      named_entities:
        description: Indicates whether named entities feature is allowed or not
        type: boolean
      query_topics:
        description: Indicates whether query defined topics are allowed or not
        type: boolean
      themes:
        description: Indicates whether themes extraction feature is allowed or not
        type: boolean
      user_entities:
        description: Indicates whether user entities feature is allowed or not
        type: boolean
  SubscriptionFeatureSectionDocument:
    properties:
      auto_categories:
        description: Indicates whether auto categories feature is allowed or not
        type: boolean
      concept_topics:
        description: Indicates whether concept topics are allowed or not
        type: boolean
      intentions:
        description: Indicates whether intentions feature is allowed or not.
        type: boolean
      language_detection:
        description: Indicates whether language detection feature is allowed or not
        type: boolean
      mentions:
        description: Indicates whether mentions for entities and themes are allowed or not
        type: boolean
      model_sentiment:
        description: Indicates whether model-based sentiment feature is allowed or not
        type: boolean
      named_entities:
        description: Indicates whether named entities feature is allowed or not
        type: boolean
      opinions:
        description: Indicates whether opinions feature is allowed or not
        type: boolean
      pos_tagging:
        description: Indicates whether part of speech tagging feature is allowed or not
        type: boolean
      query_topics:
        description: Indicates whether query defined topics are allowed or not
        type: boolean
      relations:
        description: Indicates whether relations feature for user and named entities is allowed or not
        type: boolean
      sentiment_phrases:
        description: Indicates whether sentiment-bearing phrases output is allowed or not
        type: boolean
      summary:
        description: Indicates whether summarization feature is allowed or not
        type: boolean
      themes:
        description: Indicates whether document and entity themes feature is allowed or not
        type: boolean
      user_entities:
        description: Indicates whether user entities feature is allowed or not
        type: boolean
  SubscriptionFeatureSectionTemplate:
    properties:
      config_id:
        description: Unique identifier of configuration associated with the vertical pack. Required for cloning
        type: string
      description:
        description: 'Verbal description of template features, belonging to domain area, etc.'
        type: string
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      is_free:
        description: Shows whether Vertical pack is free or requires subscription
        type: boolean
      language:
        description: The language supported by the vertical pack
        type: string
      name:
        description: Name of the vertical pack
        type: string
      type:
        description: 'The type of the vertical pack, can be either "vertical-pack" or "language-default"'
        enum:
          - language-default
          - vertical-pack
        type: string
      version:
        description: 'Version of the vertical pack, for versioning purposes.'
        type: string
  TaxonomyNode: {}
  TaxonomyNode_InsertVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
        required: false
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          type: TaxonomyNode
        type: array
        required: false
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          type: TaxonomyTopic
        type: array
        required: false
  TaxonomyNode_ResponseVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
        required: false
      id:
        description: Unique taxonomy node identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          type: TaxonomyNode
        type: array
        required: false
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          type: TaxonomyTopic
        type: array
        required: false
  TaxonomyNode_UpdateVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
        required: false
      id:
        description: Unique taxonomy node identifier
        type: string
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          type: TaxonomyNode
        type: array
        required: false
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          type: TaxonomyTopic
        type: array
        required: false
  TaxonomyTopic:
    properties:
      id:
        description: Unique taxonomy topic identifier
        type: string
        required: false
      type:
        description: Type of the topic (category or query) associated with the certain taxonomy node
        type: string
  Theme:
    properties:
      mentions:
        description: Returns the concept and query defined topics determined for the text
        items:
          type: Mention
        type: array
      normalized:
        description: The normalized form of the theme
        type: string
      phrases_count:
        description: Count of sentiment-bearing phrases was used in calculating theme's sentiment
        minimum: 0
        type: integer
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: Sentiment score for theme’s sentences across the documents
        format: double
        type: number
      stemmed:
        description: The stemmed form of the theme
        type: string
      themes_count:
        description: Count of themes across the documents that got rolled into this one
        minimum: 0
        type: integer
      title:
        description: The text of the theme across the documents
        type: string
  Topic:
    properties:
      hitcount:
        description: The number of documents within the collection that match the topic
        minimum: 0
        type: integer
      id:
        description: Unique topic identifier
        type: string
      sentiment_polarity:
        description: 'Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"'
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score for documents content associated with the topic
        format: double
        type: number
      title:
        description: 'The topic title, which is its label in the text'
        type: string
      type:
        description: Type of the topic; can be either "concept" or "query"
        enum:
          - concept
          - query
        type: string
  Word:
    properties:
      is_negated:
        description: A flag indicating if the token is or is part of a sentiment inverting construction
        type: boolean
      sentiment_score:
        description: The sentiment score associated with the word
        format: double
        type: number
      stemmed:
        description: The stemmed form of the word
        type: string
      tag:
        description: POS marker of the word
        type: string
      title:
        description: The original word representation in text
        type: string
      type:
        description: Verbal representation of part of speech in addition to certain tag
        type: string
