#%RAML 1.0
title: SCIM
version: N/A
baseUri: 'https://api.citrixonline.com/identity/v1'
mediaType: application/json
protocols:
  - HTTPS
description: 'The SCIM API lets you manage users in your Citrix organization. You can then automate the provisioning of product licenses for these users, and they can use your company''s Single Sign-On solution through an Identity Provider.'
(oas-tags-definition):
  - description: Operations on users belonging to an organization
    name: Users
  - description: Operations on groups belonging to an organization
    name: Groups
  - description: Operations on schemas
    name: Schemas
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-logo):
    backgroundColor: '#5F6166'
    url: 'https://api.apis.guru/v2/cache/logo/https_developer.citrixonline.com_sites_all_themes_citrix_responsive_logo.png'
  (oas-x-origin):
    format: swagger
    url: 'https://developer.citrixonline.com/sites/default/files/citrix/citrix-apis/scim.json'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): citrixonline.com
  (oas-x-serviceName): scim
  contact:
    name: Developer Support
    url: 'https://developer.citrixonline.com'
    email: developer-support@citrixonline.com
  termsOfService: 'https://developer.citrixonline.com/terms-use'
(oas-externalDocs):
  url: 'https://developer.citrixonline.com/'
/Users:
  displayName: Users
  get:
    displayName: getUsers
    description: Queries multiple user identities in the organization domain. Filtering is available.
    (oas-summary): Get Users
    is:
      - authorization
    responses:
      '200':
        body:
          application/json:
            type: UserCollection
        description: The request has succeeded.
      '400':
        description: Invalid filter syntax
      '401':
        description: Client is not sufficiently authorized
      '403':
        description: Invalid token passed
      '502':
        description: Authentication or account gateway error occurred
      '504':
        description: Authentication or account gateway timeout occurred
    queryParameters:
      filter:
        description: ' Without a filter, all users in a user domain are returned. The filter parameter must be a properly formed SCIM filter using either the operator eq (equals) or the operator sw (starts with). The filter works for userName, displayName, name.givenName, and name.familyName attributes. For example, /Users?filter=name.familyName%20eq%20%%22Smith%22'
        type: string
    (oas-tags):
      - Users
  '/{userKey}':
    displayName: '{userKey}'
    uriParameters:
      userKey:
        description: The key of the user to query. The user must be in the organization domain
        format: int64
        required: true
        type: integer
    put:
      displayName: replaceUser
      description: 'Changes an existing user''s displayName, locale, timezone, username and password. The request must include the full user definition (to modify one or more values without sending the full definition, see Update User). The replaced user email domain must be an existing organization email domain.'
      (oas-summary): Replace User
      is:
        - authorization
      body:
        application/json:
          type: UserDefinition
          (oas-body-name): body
          description: The new user data
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The user has been replaced.
        '400':
          description: 'One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.'
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '409':
          description: Email address conflict
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
    patch:
      displayName: updateUser
      description: Changes a limited set (or all if you choose) of the user's data. The updated user email domain must be an existing organization email domain.
      (oas-summary): Update User
      is:
        - authorization
      body:
        application/json:
          type: UserDefinition
          (oas-body-name): body
          description: The new user data
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The user has been updated.
        '400':
          description: 'One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.'
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '409':
          description: Email address conflict
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
    get:
      displayName: getUser
      description: Queries user identity in the organization domain.
      (oas-summary): Get User
      is:
        - authorization
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The request has succeeded.
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
    delete:
      displayName: deleteUser
      description: Deletes a user from the organization (but not from the account).
      (oas-summary): Delete User
      is:
        - authorization
      responses:
        '200':
          description: The request has succeeded.
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
  post:
    displayName: createUsers
    description: Creates a new organization user and adds them to the user domain. The user email domain must match an existing organization email domain.
    (oas-summary): Create User
    is:
      - authorization
    body:
      application/json:
        type: UserDefinition
        (oas-body-name): body
        description: The details of the user to create
    responses:
      '201':
        body:
          application/json:
            type: User
        description: The user has been created.
      '400':
        description: 'One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.'
      '401':
        description: Client is not sufficiently authorized.
      '403':
        description: Invalid token passed
      '409':
        description: Username is already in use.
      '502':
        description: 'Authentication, account, or email verification gateway error occurred.'
      '504':
        description: 'Authentication, account, or email verification gateway timeout occurred.'
    (oas-tags):
      - Users
  /me:
    displayName: me
    get:
      displayName: getMe
      description: Queries the identity of the current authenticated user.
      (oas-summary): Get Current User
      is:
        - authorization
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The request has succeeded.
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
    patch:
      displayName: updateMe
      description: 'Changes a limited set (or all if you choose) of the current authenticated user''s data. The updated user email domain must be an existing organization email domain. '
      (oas-summary): Update Current User
      is:
        - authorization
      body:
        application/json:
          type: UserDefinition
          (oas-body-name): body
          description: The new user data
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The current user has been updated.
        '400':
          description: 'One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.'
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '409':
          description: Email address conflict
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
    put:
      displayName: replaceMe
      description: 'Changes the current authenticated user''s displayName, locale, timezone, username and password. The request must include the full user definition (to modify one or more values without sending the full definition, see Update User). The replaced user email domain must be an existing organization email domain. '
      (oas-summary): Replace Current User
      is:
        - authorization
      body:
        application/json:
          type: UserDefinition
          (oas-body-name): body
          description: The new user data
      responses:
        '200':
          body:
            application/json:
              type: User
          description: The current user has been replaced.
        '400':
          description: 'One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.'
        '401':
          description: Client is not sufficiently authorized
        '403':
          description: Invalid token passed
        '404':
          description: User not found
        '409':
          description: Email address conflict
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Users
/Groups:
  displayName: Groups
  get:
    displayName: getGroups
    description: 'Queries multiple group identities in the organization domain. Filtering, sorting and pagination are available. This call requires the role ROLE_ORG_READ.'
    (oas-summary): Get Groups
    is:
      - authorization
    responses:
      '200':
        body:
          application/json:
            type: GroupCollection
        description: The request has succeeded
      '400':
        description: Invalid filter syntax
      '401':
        description: Client is not sufficiently authorized
      '403':
        description: Invalid token passed
      '502':
        description: Authentication or account gateway error occurred
      '504':
        description: Authentication or account gateway timeout occurred
    queryParameters:
      filter:
        description: ' Without a filter, all groups are returned. The filter parameter must be a properly formed SCIM filter using the operator "eq" (equals), "sw" (starts with), or "co" (contains). The filter works for the displayName attribute. Sorting and pagination are supported. For example, GET /Groups?filter=displayName%20eq%20%22Engineering%22&sortBy=displayName&sortOrder=ascending&count=50&startIndex=51'
        type: string
    (oas-tags):
      - Groups
  '/{groupKey}':
    displayName: '{groupKey}'
    uriParameters:
      groupKey:
        description: The key of the group to query. The group must be in the organization domain
        format: int64
        required: true
        type: integer
    delete:
      displayName: deleteGroup
      description: Deletes a group from the organization (but not from the account). The group must be in the organization. This call requires the role ROLE_ORG_WRITE.
      (oas-summary): Delete Group
      is:
        - authorization
      responses:
        '200':
          description: The request has succeeded
        '401':
          description: Client is not sufficiently authorized or group does not exist in organization
        '403':
          description: Invalid token passed
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Groups
    patch:
      displayName: updateGroup
      description: Updates one or more values of an existing group without sending the full definition. Member groups and member users must be in the organization. This call requires the role ROLE_ORG_WRITE.
      (oas-summary): Update Group
      is:
        - authorization
      body:
        application/json:
          type: GroupDefinition
          (oas-body-name): body
          description: The group data to update. It is allowed to update one or more values of the group definition
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: The group has been updated
        '400':
          description: 'Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />'
        '401':
          description: Client is not sufficiently authorized or group does not exist in organization
        '403':
          description: Invalid token passed
        '409':
          description: The displayName is already in use within the organization
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Groups
    put:
      displayName: replaceGroup
      description: 'Updates an existing group. The request must include the full group definition. To modify one or more values without sending the full definition, see "Update Group". Member groups and member users must be in the organization. This call requires the role ROLE_ORG_WRITE.'
      (oas-summary): Replace Group
      is:
        - authorization
      body:
        application/json:
          type: GroupDefinition
          (oas-body-name): body
          description: The new group definition
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: The group has been replaced.
        '400':
          description: 'Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />'
        '401':
          description: Client is not sufficiently authorized or group does not exist in organization
        '403':
          description: Invalid token passed
        '409':
          description: The displayName is already in use within the organization
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Groups
    get:
      displayName: getGroup
      description: Queries group details in the organization domain. This call requires the role ROLE_ORG_READ.
      (oas-summary): Get Group
      is:
        - authorization
      responses:
        '200':
          body:
            application/json:
              type: Group
          description: The request has succeeded
        '401':
          description: Client is not sufficiently authorized or group does not exist in organization
        '403':
          description: Invalid token passed
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Groups
  post:
    displayName: createGroup
    description: Creates a new organization group and adds it to the user domain. Member groups and member users must be in the organization. This call requires the role ROLE_ORG_WRITE.
    (oas-summary): Create Group
    is:
      - authorization
    body:
      application/json:
        type: GroupDefinition
        (oas-body-name): body
        description: The details of the group to create
    responses:
      '201':
        body:
          application/json:
            type: Group
        description: The group has been created
      '400':
        description: 'Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />'
      '401':
        description: Client is not sufficiently authorized
      '403':
        description: Invalid token passed
      '409':
        description: The displayName is already in use within the organization
      '502':
        description: An authentication or account gateway error occurred
      '504':
        description: 'An authentication or account, or gateway timeout occurred.'
    (oas-tags):
      - Groups
/Schemas:
  displayName: Schemas
  /Users:
    displayName: Users
    get:
      displayName: getUserSchema
      description: 'Queries the user schema. The user schema is defined in SCIM Core Schema (http://www.simplecloud.info/specs/draft-scim-core-schema-01.html#resource-schema).'
      (oas-summary): Get User Schema
      is:
        - authorization
      responses:
        '200':
          body:
            application/json:
              type: ResourceSchema
          description: The request has succeeded.
        '403':
          description: Invalid token passed
        '502':
          description: Authentication or account gateway error occurred
        '504':
          description: Authentication or account gateway timeout occurred
      (oas-tags):
        - Schemas
/ServiceProviderConfigs:
  displayName: ServiceProviderConfigs
  get:
    displayName: getServiceProviderConfigs
    description: 'Queries service provider configurations. The service provider configurations are defined in SCIM Core Schema (http://www.simplecloud.info/specs/draft-scim-core-schema-01.html#anchor6). This call returns a description, a documentationURL, name, and specURL.'
    (oas-summary): Get Service Provider Configurations
    is:
      - authorization
    responses:
      '200':
        body:
          application/json:
            type: ServiceProviderConfigs
        description: The request has succeeded.
      '403':
        description: Invalid token passed
      '502':
        description: Authentication or account gateway error occurred
      '504':
        description: Authentication or account gateway timeout occurred
    (oas-tags):
      - Schemas
types:
  AuthenticationSchemes:
    description: Specifies supported Authentication Scheme properties
    properties:
      description:
        description: The description of the Authentication Scheme
        type: string
      documentationUrl:
        description: A HTTP addressable URL pointing to the Authentication Scheme's usage documentation
        type: string
      name:
        description: 'The common authentication scheme name, e.g. HTTP Basic'
        type: string
      specUrl:
        description: A HTTP addressable URL pointing to the Authentication Scheme's specification
        type: string
  Bulk:
    description: Specifies BULK configuration options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  ChangePassword:
    description: Specifies Change Password configuration options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  Etag:
    description: Specifies Etag configuration options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  Filter:
    description: Specifies FILTER options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  Group:
    description: Describes a group belonging to an organization
    properties:
      displayName:
        description: The group's display name
        type: string
      id:
        description: The group's unique key
        type: string
      members:
        description: An array of members
        items:
          type: Member
        type: array
        required: false
      meta:
        description: Group metadata
        type: GroupMetadata
  GroupCollection:
    description: Class describing a collection of groups
    properties:
      resources:
        description: An array of groups
        items:
          type: Group
        type: array
      totalResults:
        description: The number of groups in the collection
        format: int64
        type: integer
  GroupDefinition:
    description: Describes the group to create
    properties:
      displayName:
        description: The group's display name
        type: string
      members:
        description: An array of members
        items:
          type: Member
        type: array
        required: false
  GroupMetadata:
    description: Group metadata
    properties:
      created:
        description: The date and time the group was created
        format: rfc3339
        type: datetime
      location:
        description: The URL where the group can be accessed
        type: string
  Member:
    description: A member of a group. This can be a group or an user
    properties:
      type:
        description: The type of member
        enum:
          - group
          - user
        type: string
      value:
        description: Depending on the member type this is a groupKey or an userKey
        type: string
  Patch:
    description: Specifies PATCH configuration options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  ResourceSchema:
    description: Describes the attributes and metadata constituting a resource such as a user.
    properties:
      attributes:
        description: The resource's attributes
        items:
          type: SchemaAttribute
        type: array
      description:
        description: The resource's description
        type: string
      endpoint:
        description: 'The resource''s HTTP addressable endpoint relative to the base URL, e.g. /Users.'
        type: string
      id:
        description: 'The resource''s id, e.g. urn:scim:schemas:core:1.0:User'
        type: string
      name:
        description: 'The resource''s name, e.g. "User"'
        type: string
      schema:
        description: 'The resource''s associated schema, e.g. urn:scim:schemas:core:1.0'
        type: string
  SchemaAttribute:
    description: Describes a resource attribute
    properties:
      caseExact:
        description: Indicates whether the attribute is case sensitive
        type: boolean
      description:
        description: The attribute's description
        type: string
      multiValued:
        description: Indicates whether the attribute can have multiple values
        type: boolean
      name:
        description: The attribute's name
        type: string
      readOnly:
        description: Indicates whether the attribute is mutable
        type: boolean
      required:
        description: Indicates whether the attribute is required
        type: boolean
      schema:
        description: 'The attribute''s associated scheme, e.g. urn:scim:schemas:core:1.0'
        type: string
      subAttributes:
        description: The attribute's potential sub-attributes
        items:
          type: SchemaSubAttribute
        type: array
        required: false
      type:
        description: 'The attribute''s data type, e.g. String'
        type: string
  SchemaSubAttribute:
    description: Describes the sub-attribute of a resource attribute
    properties:
      caseExact:
        description: Indicates whether the attribute is case sensitive
        type: boolean
      description:
        description: The attribute's description
        type: string
      name:
        description: The attribute's name
        type: string
      readOnly:
        description: Indicates whether the attribute is mutable
        type: boolean
      required:
        description: Indicates whether the attribute is required
        type: boolean
      type:
        description: 'The attribute''s data type, e.g. String'
        type: string
  ServiceProviderConfigs:
    description: Represents the Service Provider's configuration
    properties:
      authenticationSchemes:
        description: Specifies whether the XML data format is supported
        type: AuthenticationSchemes
      bulk:
        description: Specifies BULK configuration options
        type: Bulk
      changePassword:
        description: Specifies Change Password configuration options
        type: ChangePassword
      documentationUrl:
        description: An HTTP addressable URL pointing to the Service Provider's help documentation
        type: string
      etag:
        description: Specifies Etag configuration options
        type: Etag
      filter:
        description: Specifies FILTER options
        type: Filter
      patch:
        description: Specifies PATCH configuration options
        type: Patch
      sort:
        description: Specifies Sort configuration options
        type: Sort
      xmlDataFormat:
        description: Specifies supported Authentication Scheme properties
        type: XmlDataFormat
  Sort:
    description: Specifies Sort configuration options
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
  User:
    description: Describes a user belonging to an organization
    properties:
      displayName:
        description: The user's display name
        type: string
      id:
        description: The user's unique key
        type: string
      locale:
        description: The user's language settings
        type: string
      meta:
        description: User metadata
        type: UserMetadata
      name:
        description: The user's full name
        type: UserFullName
      timezone:
        description: The user's time zone
        type: string
      userName:
        description: 'The user''s username, usually their email address'
        type: string
  UserCollection:
    description: Class describing a collection of users
    properties:
      resources:
        description: The list of users
        items:
          type: User
        type: array
      totalResults:
        description: The number of users in the collection
        format: int64
        type: integer
  UserDefinition:
    description: Describes a new user
    properties:
      displayName:
        description: The user's display name
        type: string
        required: false
      locale:
        description: The user's language settings
        type: string
        required: false
      name:
        description: The user's full name
        type: UserFullName
        required: false
      password:
        description: The user's password
        type: string
        required: false
      timezone:
        description: The user's time zone
        type: string
        required: false
      userName:
        description: 'The user''s username, usually their email address'
        type: string
        required: false
  UserFullName:
    description: The full name of the user
    properties:
      familyName:
        description: The user's surname
        type: string
      givenName:
        description: The user's first name
        type: string
  UserMetadata:
    description: User metadata
    properties:
      created:
        description: The date and time the user was created
        format: rfc3339
        type: datetime
      location:
        description: The URL where the user can be accessed
        type: string
  XmlDataFormat:
    description: Specifies whether the XML data format is supported
    properties:
      supported:
        description: Specifies whether the operation is supported
        type: boolean
traits:
  authorization:
    headers:
      Authorization:
        type: string
        description: 'Access token prefixed with ''Bearer '', e.g. ''Bearer 123456abcdef'''
        required: true
