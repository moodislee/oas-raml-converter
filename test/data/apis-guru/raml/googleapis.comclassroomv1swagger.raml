#%RAML 1.0
title: Google Classroom
version: v1
baseUri: 'https://classroom.googleapis.com/'
protocols:
  - HTTPS
description: 'Manages classes, rosters, and invitations in Google Classroom.'
(oas-tags-definition):
  - name: courses
  - name: userProfiles
  - name: invitations
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/classroom/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): classroom
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/classroom/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/classroom.course-work.readonly'
        - 'https://www.googleapis.com/auth/classroom.courses'
        - 'https://www.googleapis.com/auth/classroom.courses.readonly'
        - 'https://www.googleapis.com/auth/classroom.coursework.me'
        - 'https://www.googleapis.com/auth/classroom.coursework.me.readonly'
        - 'https://www.googleapis.com/auth/classroom.coursework.students'
        - 'https://www.googleapis.com/auth/classroom.coursework.students.readonly'
        - 'https://www.googleapis.com/auth/classroom.profile.emails'
        - 'https://www.googleapis.com/auth/classroom.profile.photos'
        - 'https://www.googleapis.com/auth/classroom.rosters'
        - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
        - 'https://www.googleapis.com/auth/classroom.student-submissions.me.readonly'
        - 'https://www.googleapis.com/auth/classroom.student-submissions.students.readonly'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  /courses:
    displayName: courses
    '/{courseId}':
      displayName: '{courseId}'
      /teachers:
        displayName: teachers
        post:
          displayName: classroom.courses.teachers.create
          description: 'Creates a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create teachers in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user''s account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a teacher or student in the course.'
          body:
            application/json:
              type: Teacher
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Teacher
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.rosters'
          (oas-tags):
            - courses
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        '/{userId}':
          displayName: '{userId}'
          uriParameters:
            userId:
              description: 'Identifier of the teacher to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
              required: true
              type: string
          delete:
            displayName: classroom.courses.teachers.delete
            description: 'Deletes a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist. * `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher of this course.'
            responses:
              '200':
                body:
                  application/json:
                    type: Empty
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.rosters'
            (oas-tags):
              - courses
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
          get:
            displayName: classroom.courses.teachers.get
            description: 'Returns a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist.'
            responses:
              '200':
                body:
                  application/json:
                    type: Teacher
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
            (oas-tags):
              - courses
        get:
          displayName: classroom.courses.teachers.list
          description: 'Returns a list of teachers of this course that the requester is permitted to view. This method returns the following error codes: * `NOT_FOUND` if the course does not exist. * `PERMISSION_DENIED` for access errors.'
          responses:
            '200':
              body:
                application/json:
                  type: ListTeachersResponse
              description: Successful response
          queryParameters:
            pageSize:
              description: Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.
              type: integer
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
          (oas-tags):
            - courses
      /aliases:
        displayName: aliases
        get:
          displayName: classroom.courses.aliases.list
          description: 'Returns a list of aliases for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the course or for access errors. * `NOT_FOUND` if the course does not exist.'
          responses:
            '200':
              body:
                application/json:
                  type: ListCourseAliasesResponse
              description: Successful response
          queryParameters:
            pageSize:
              description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
              type: integer
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.courses.readonly'
          (oas-tags):
            - courses
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        '/{alias}':
          displayName: '{alias}'
          uriParameters:
            alias:
              description: Alias to delete. This may not be the Classroom-assigned identifier.
              required: true
              type: string
          delete:
            displayName: classroom.courses.aliases.delete
            description: 'Deletes an alias of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to remove the alias or for access errors. * `NOT_FOUND` if the alias does not exist.'
            responses:
              '200':
                body:
                  application/json:
                    type: Empty
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.courses'
            (oas-tags):
              - courses
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
        post:
          displayName: classroom.courses.aliases.create
          description: 'Creates an alias for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create the alias or for access errors. * `NOT_FOUND` if the course does not exist. * `ALREADY_EXISTS` if the alias already exists.'
          body:
            application/json:
              type: CourseAlias
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: CourseAlias
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.courses'
          (oas-tags):
            - courses
      /courseWork:
        displayName: courseWork
        post:
          displayName: classroom.courses.courseWork.create
          description: 'Creates course work. The resulting course work (and corresponding student submissions) are associated with the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to make the request. Classroom API requests to modify course work and student submissions must be made with an OAuth client ID from the associated Developer Console project. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course, create course work in the requested course, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course does not exist.'
          body:
            application/json:
              type: CourseWork
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: CourseWork
              description: Successful response
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.coursework.students'
          (oas-tags):
            - courses
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        '/{courseWorkId}':
          displayName: '{courseWorkId}'
          /studentSubmissions:
            displayName: studentSubmissions
            '/{id}':
              displayName: '{id}'
              uriParameters:
                id:
                  description: Identifier of the student submission.
                  required: true
                  type: string
              get:
                displayName: classroom.courses.courseWork.studentSubmissions.get
                description: 'Returns a student submission. * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course, course work, or student submission or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                responses:
                  '200':
                    body:
                      application/json:
                        type: StudentSubmission
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.student-submissions.students.readonly'
                (oas-tags):
                  - courses
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
              patch:
                displayName: classroom.courses.courseWork.studentSubmissions.patch
                description: 'Updates one or more fields of a student submission. See google.classroom.v1.StudentSubmission for details of which fields may be updated and who may change them. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting developer project did not create the corresponding course work, if the user is not permitted to make the requested modification to the student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                body:
                  application/json:
                    type: StudentSubmission
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: StudentSubmission
                    description: Successful response
                queryParameters:
                  updateMask:
                    description: 'Mask that identifies which fields on the student submission to update. This field is required to do an update. The update fails if invalid fields are specified. The following fields may be specified by teachers: * `draft_grade` * `assigned_grade`'
                    type: string
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.coursework.students'
                (oas-tags):
                  - courses
            '/{id}:modifyAttachments':
              displayName: '{id}:modifyAttachments'
              uriParameters:
                id:
                  description: Identifier of the student submission.
                  required: true
                  type: string
              post:
                displayName: classroom.courses.courseWork.studentSubmissions.modifyAttachments
                description: 'Modifies attachments of student submission. Attachments may only be added to student submissions whose type is `ASSIGNMENT`. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, if the user is not permitted to modify attachments on the requested student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                body:
                  application/json:
                    type: ModifyAttachmentsRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: StudentSubmission
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.coursework.students'
                (oas-tags):
                  - courses
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
            '/{id}:return':
              displayName: '{id}:return'
              uriParameters:
                id:
                  description: Identifier of the student submission.
                  required: true
                  type: string
              post:
                displayName: classroom.courses.courseWork.studentSubmissions.return
                description: 'Returns a student submission. Returning a student submission transfers ownership of attached Drive files to the student and may also update the submission state. Unlike the Classroom application, returning a student submission does not set assignedGrade to the draftGrade value. Only a teacher of the course that contains the requested student submission may call this method. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, return the requested student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                body:
                  application/json:
                    type: ReturnStudentSubmissionRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: Empty
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.coursework.students'
                (oas-tags):
                  - courses
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
            '/{id}:turnIn':
              displayName: '{id}:turnIn'
              uriParameters:
                id:
                  description: Identifier of the student submission.
                  required: true
                  type: string
              post:
                displayName: classroom.courses.courseWork.studentSubmissions.turnIn
                description: 'Turns in a student submission. Turning in a student submission transfers ownership of attached Drive files to the teacher and may also update the submission state. This may only be called by the student that owns the specified student submission. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, turn in the requested student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                body:
                  application/json:
                    type: TurnInStudentSubmissionRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: Empty
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.coursework.me'
                (oas-tags):
                  - courses
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
            '/{id}:reclaim':
              displayName: '{id}:reclaim'
              uriParameters:
                id:
                  description: Identifier of the student submission.
                  required: true
                  type: string
              post:
                displayName: classroom.courses.courseWork.studentSubmissions.reclaim
                description: 'Reclaims a student submission on behalf of the student that owns it. Reclaiming a student submission transfers ownership of attached Drive files to the student and update the submission state. Only the student that ownes the requested student submission may call this method, and only for a student submission that has been turned in. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, unsubmit the requested student submission, or for access errors. * `FAILED_PRECONDITION` if the student submission has not been turned in. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.'
                body:
                  application/json:
                    type: ReclaimStudentSubmissionRequest
                    (oas-body-name): body
                responses:
                  '200':
                    body:
                      application/json:
                        type: Empty
                    description: Successful response
                securedBy:
                  - Oauth2:
                      scopes:
                        - 'https://www.googleapis.com/auth/classroom.coursework.me'
                (oas-tags):
                  - courses
              is:
                - accessToken
                - alt
                - bearerToken
                - callback
                - fields
                - key
                - oauthToken
                - pp
                - prettyPrint
                - quotaUser
                - uploadProtocol
                - uploadType
                - xgafv
            get:
              displayName: classroom.courses.courseWork.studentSubmissions.list
              description: 'Returns a list of student submissions that the requester is permitted to view, factoring in the OAuth scopes of the request. `-` may be specified as the `course_work_id` to include student submissions for multiple course work items. Course students may only view their own work. Course teachers and domain administrators may view all student submissions. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course does not exist.'
              responses:
                '200':
                  body:
                    application/json:
                      type: ListStudentSubmissionsResponse
                  description: Successful response
              queryParameters:
                userId:
                  description: 'Optional argument to restrict returned student work to those owned by the student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
                  type: string
                states:
                  collectionFormat: multi
                  description: 'Requested submission states. If specified, returned student submissions match one of the specified submission states.'
                  items:
                    enum:
                      - SUBMISSION_STATE_UNSPECIFIED
                      - NEW
                      - CREATED
                      - TURNED_IN
                      - RETURNED
                      - RECLAIMED_BY_STUDENT
                    type: string
                  type: array
                  facets:
                    collectionFormat: string
                late:
                  description: 'Requested lateness value. If specified, returned student submissions are restricted by the requested value. If unspecified, submissions are returned regardless of `late` value.'
                  enum:
                    - LATE_VALUES_UNSPECIFIED
                    - LATE_ONLY
                    - NOT_LATE_ONLY
                  type: string
                pageSize:
                  description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
                  type: integer
                pageToken:
                  description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
                  type: string
              securedBy:
                - Oauth2:
                    scopes:
                      - 'https://www.googleapis.com/auth/classroom.student-submissions.students.readonly'
              (oas-tags):
                - courses
            is:
              - accessToken
              - alt
              - bearerToken
              - callback
              - fields
              - key
              - oauthToken
              - pp
              - prettyPrint
              - quotaUser
              - uploadProtocol
              - uploadType
              - xgafv
        '/{id}':
          displayName: '{id}'
          uriParameters:
            id:
              description: Identifier of the course work.
              required: true
              type: string
          get:
            displayName: classroom.courses.courseWork.get
            description: 'Returns course work. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course or course work does not exist.'
            responses:
              '200':
                body:
                  application/json:
                    type: CourseWork
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.coursework.students.readonly'
            (oas-tags):
              - courses
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
        get:
          displayName: classroom.courses.courseWork.list
          description: 'Returns a list of course work that the requester is permitted to view. Course students may only view `PUBLISHED` course work. Course teachers and domain administrators may view all course work. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course does not exist.'
          responses:
            '200':
              body:
                application/json:
                  type: ListCourseWorkResponse
              description: Successful response
          queryParameters:
            courseWorkStates:
              collectionFormat: multi
              description: 'Restriction on the work status to return. Only courseWork that matches is returned. If unspecified, items with a work status of `PUBLISHED` is returned.'
              items:
                enum:
                  - COURSE_WORK_STATE_UNSPECIFIED
                  - PUBLISHED
                  - DRAFT
                  - DELETED
                type: string
              type: array
              facets:
                collectionFormat: string
            orderBy:
              description: 'Optional sort ordering for results. A comma-separated list of fields with an optional sort direction keyword. Supported fields are `updateTime` and `dueDate`. Supported direction keywords are `asc` and `desc`. If not specified, `updateTime desc` is the default behavior. Examples: `dueDate asc,updateTime desc`, `updateTime,dueDate desc`'
              type: string
            pageSize:
              description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
              type: integer
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.coursework.students.readonly'
          (oas-tags):
            - courses
      /students:
        displayName: students
        post:
          displayName: classroom.courses.students.create
          description: 'Adds a user as a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create students in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user''s account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a student or teacher in the course.'
          body:
            application/json:
              type: Student
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: Student
              description: Successful response
          queryParameters:
            enrollmentCode:
              description: Enrollment code of the course to create the student in. This code is required if userId corresponds to the requesting user; it may be omitted if the requesting user has administrative permissions to create students for any user.
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.rosters'
          (oas-tags):
            - courses
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        '/{userId}':
          displayName: '{userId}'
          uriParameters:
            userId:
              description: 'Identifier of the student to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
              required: true
              type: string
          get:
            displayName: classroom.courses.students.get
            description: 'Returns a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.'
            responses:
              '200':
                body:
                  application/json:
                    type: Student
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
            (oas-tags):
              - courses
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
          delete:
            displayName: classroom.courses.students.delete
            description: 'Deletes a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.'
            responses:
              '200':
                body:
                  application/json:
                    type: Empty
                description: Successful response
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/classroom.rosters'
            (oas-tags):
              - courses
        get:
          displayName: classroom.courses.students.list
          description: 'Returns a list of students of this course that the requester is permitted to view. This method returns the following error codes: * `NOT_FOUND` if the course does not exist. * `PERMISSION_DENIED` for access errors.'
          responses:
            '200':
              body:
                application/json:
                  type: ListStudentsResponse
              description: Successful response
          queryParameters:
            pageSize:
              description: Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.
              type: integer
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
          (oas-tags):
            - courses
    get:
      displayName: classroom.courses.list
      description: 'Returns a list of courses that the requesting user is permitted to view, restricted to those that match the request. This method returns the following error codes: * `PERMISSION_DENIED` for access errors. * `INVALID_ARGUMENT` if the query argument is malformed. * `NOT_FOUND` if any users specified in the query arguments do not exist.'
      responses:
        '200':
          body:
            application/json:
              type: ListCoursesResponse
          description: Successful response
      queryParameters:
        studentId:
          description: 'Restricts returned courses to those having a student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
          type: string
        teacherId:
          description: 'Restricts returned courses to those having a teacher with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
          type: string
        courseStates:
          collectionFormat: multi
          description: Restricts returned courses to those in one of the specified states
          items:
            enum:
              - COURSE_STATE_UNSPECIFIED
              - ACTIVE
              - ARCHIVED
              - PROVISIONED
              - DECLINED
            type: string
          type: array
          facets:
            collectionFormat: string
        pageSize:
          description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
          type: integer
        pageToken:
          description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/classroom.courses.readonly'
      (oas-tags):
        - courses
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.
          required: true
          type: string
      delete:
        displayName: classroom.courses.delete
        description: 'Deletes a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.'
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.courses'
        (oas-tags):
          - courses
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      get:
        displayName: classroom.courses.get
        description: 'Returns a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.'
        responses:
          '200':
            body:
              application/json:
                type: Course
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.courses.readonly'
        (oas-tags):
          - courses
      patch:
        displayName: classroom.courses.patch
        description: 'Updates one or more fields in a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID. * `INVALID_ARGUMENT` if invalid fields are specified in the update mask or if no update mask is supplied. * `FAILED_PRECONDITION` for the following request errors: * CourseNotModifiable'
        body:
          application/json:
            type: Course
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Course
            description: Successful response
        queryParameters:
          updateMask:
            description: 'Mask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: * `name` * `section` * `descriptionHeading` * `description` * `room` * `courseState` When set in a query parameter, this field should be specified as `updateMask=,,...`'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.courses'
        (oas-tags):
          - courses
      put:
        displayName: classroom.courses.update
        description: 'Updates a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID. * `FAILED_PRECONDITION` for the following request errors: * CourseNotModifiable'
        body:
          application/json:
            type: Course
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: Course
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.courses'
        (oas-tags):
          - courses
    post:
      displayName: classroom.courses.create
      description: 'Creates a course. The user specified in `ownerId` is the owner of the created course and added as a teacher. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create courses or for access errors. * `NOT_FOUND` if the primary teacher is not a valid user. * `FAILED_PRECONDITION` if the course owner''s account is disabled or for the following request errors: * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if an alias was specified in the `id` and already exists.'
      body:
        application/json:
          type: Course
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Course
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/classroom.courses'
      (oas-tags):
        - courses
  /userProfiles:
    displayName: userProfiles
    '/{userId}':
      displayName: '{userId}'
      uriParameters:
        userId:
          description: 'Identifier of the profile to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
          required: true
          type: string
      get:
        displayName: classroom.userProfiles.get
        description: 'Returns a user profile. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access this user profile or if no profile exists with the requested ID or for access errors.'
        responses:
          '200':
            body:
              application/json:
                type: UserProfile
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
        (oas-tags):
          - userProfiles
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
    '/{studentId}':
      displayName: '{studentId}'
      /guardianInvitations:
        displayName: guardianInvitations
        get:
          displayName: classroom.userProfiles.guardianInvitations.list
          description: 'Returns a list of guardian invitations that the requesting user is permitted to view, filtered by the parameters provided. This method returns the following error codes: * `PERMISSION_DENIED` if a `student_id` is specified, and the requesting user is not permitted to view guardian invitations for that student, if `"-"` is specified as the `student_id` and the user is not a domain administrator, if guardians are not enabled for the domain in question, or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot be recognized (it is not an email address, nor a `student_id` from the API, nor the literal string `me`). May also be returned if an invalid `page_token` or `state` is provided. * `NOT_FOUND` if a `student_id` is specified, and its format can be recognized, but Classroom has no record of that student.'
          responses:
            '200':
              body:
                application/json:
                  type: ListGuardianInvitationsResponse
              description: Successful response
          queryParameters:
            invitedEmailAddress:
              description: 'If specified, only results with the specified `invited_email_address` will be returned.'
              type: string
            states:
              collectionFormat: multi
              description: 'If specified, only results with the specified `state` values will be returned. Otherwise, results with a `state` of `PENDING` will be returned.'
              items:
                enum:
                  - GUARDIAN_INVITATION_STATE_UNSPECIFIED
                  - PENDING
                  - COMPLETE
                type: string
              type: array
              facets:
                collectionFormat: string
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
            pageSize:
              description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
              type: integer
          (oas-tags):
            - userProfiles
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
        post:
          displayName: classroom.userProfiles.guardianInvitations.create
          description: 'Creates a guardian invitation, and sends an email to the guardian asking them to confirm that they are the student''s guardian. Once the guardian accepts the invitation, their `state` will change to `COMPLETED` and they will start receiving guardian notifications. A `Guardian` resource will also be created to represent the active guardian. The request object must have the `student_id` and `invited_email_address` fields set. Failing to set these fields, or setting any other fields in the request, will result in an error. This method returns the following error codes: * `PERMISSION_DENIED` if the current user does not have permission to manage guardians, if the guardian in question has already rejected too many requests for that student, if guardians are not enabled for the domain in question, or for other access errors. * `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the guardian link limit. * `INVALID_ARGUMENT` if the guardian email address is not valid (for example, if it is too long), or if the format of the student ID provided cannot be recognized (it is not an email address, nor a `user_id` from this API). This error will also be returned if read-only fields are set, or if the `state` field is set to to a value other than `PENDING`. * `NOT_FOUND` if the student ID provided is a valid student ID, but Classroom has no record of that student. * `ALREADY_EXISTS` if there is already a pending guardian invitation for the student and `invited_email_address` provided, or if the provided `invited_email_address` matches the Google account of an existing `Guardian` for this user.'
          body:
            application/json:
              type: GuardianInvitation
              (oas-body-name): body
          responses:
            '200':
              body:
                application/json:
                  type: GuardianInvitation
              description: Successful response
          (oas-tags):
            - userProfiles
        '/{invitationId}':
          displayName: '{invitationId}'
          uriParameters:
            invitationId:
              description: The `id` field of the `GuardianInvitation` to be modified.
              required: true
              type: string
          get:
            displayName: classroom.userProfiles.guardianInvitations.get
            description: 'Returns a specific guardian invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view guardian invitations for the student identified by the `student_id`, if guardians are not enabled for the domain in question, or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot be recognized (it is not an email address, nor a `student_id` from the API, nor the literal string `me`). * `NOT_FOUND` if Classroom cannot find any record of the given student or `invitation_id`. May also be returned if the student exists, but the requesting user does not have access to see that student.'
            responses:
              '200':
                body:
                  application/json:
                    type: GuardianInvitation
                description: Successful response
            (oas-tags):
              - userProfiles
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
          patch:
            displayName: classroom.userProfiles.guardianInvitations.patch
            description: 'Modifies a guardian invitation. Currently, the only valid modification is to change the `state` from `PENDING` to `COMPLETE`. This has the effect of withdrawing the invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the current user does not have permission to manage guardians, if guardians are not enabled for the domain in question or for other access errors. * `FAILED_PRECONDITION` if the guardian link is not in the `PENDING` state. * `INVALID_ARGUMENT` if the format of the student ID provided cannot be recognized (it is not an email address, nor a `user_id` from this API), or if the passed `GuardianInvitation` has a `state` other than `COMPLETE`, or if it modifies fields other than `state`. * `NOT_FOUND` if the student ID provided is a valid student ID, but Classroom has no record of that student, or if the `id` field does not refer to a guardian invitation known to Classroom.'
            body:
              application/json:
                type: GuardianInvitation
                (oas-body-name): body
            responses:
              '200':
                body:
                  application/json:
                    type: GuardianInvitation
                description: Successful response
            queryParameters:
              updateMask:
                description: 'Mask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: * `state` When set in a query parameter, this field should be specified as `updateMask=,,...`'
                type: string
            (oas-tags):
              - userProfiles
      /guardians:
        displayName: guardians
        '/{guardianId}':
          displayName: '{guardianId}'
          uriParameters:
            guardianId:
              description: The `id` field from a `Guardian`.
              required: true
              type: string
          get:
            displayName: classroom.userProfiles.guardians.get
            description: 'Returns a specific guardian. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view guardian information for the student identified by the `student_id`, if guardians are not enabled for the domain in question, or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot be recognized (it is not an email address, nor a `student_id` from the API, nor the literal string `me`). * `NOT_FOUND` if Classroom cannot find any record of the given student or `guardian_id`, or if the guardian has been disabled.'
            responses:
              '200':
                body:
                  application/json:
                    type: Guardian
                description: Successful response
            (oas-tags):
              - userProfiles
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
          delete:
            displayName: classroom.userProfiles.guardians.delete
            description: 'Deletes a guardian. The guardian will no longer receive guardian notifications and the guardian will no longer be accessible via the API. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to manage guardians for the student identified by the `student_id`, if guardians are not enabled for the domain in question, or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot be recognized (it is not an email address, nor a `student_id` from the API). * `NOT_FOUND` if Classroom cannot find any record of the given `student_id` or `guardian_id`, or if the guardian has already been disabled.'
            responses:
              '200':
                body:
                  application/json:
                    type: Empty
                description: Successful response
            (oas-tags):
              - userProfiles
        get:
          displayName: classroom.userProfiles.guardians.list
          description: 'Returns a list of guardians that the requesting user is permitted to view, restricted to those that match the request. To list guardians for any student that the requesting user may view guardians for, use the literal character `-` for the student ID. This method returns the following error codes: * `PERMISSION_DENIED` if a `student_id` is specified, and the requesting user is not permitted to view guardian information for that student, if `"-"` is specified as the `student_id` and the user is not a domain administrator, if guardians are not enabled for the domain in question, if the `invited_email_address` filter is set by a user who is not a domain administrator, or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot be recognized (it is not an email address, nor a `student_id` from the API, nor the literal string `me`). May also be returned if an invalid `page_token` is provided. * `NOT_FOUND` if a `student_id` is specified, and its format can be recognized, but Classroom has no record of that student.'
          responses:
            '200':
              body:
                application/json:
                  type: ListGuardiansResponse
              description: Successful response
          queryParameters:
            invitedEmailAddress:
              description: 'Filter results by the email address that the original invitation was sent to, resulting in this guardian link. This filter can only be used by domain administrators.'
              type: string
            pageToken:
              description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
              type: string
            pageSize:
              description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
              type: integer
          (oas-tags):
            - userProfiles
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
  /invitations:
    displayName: invitations
    get:
      displayName: classroom.invitations.list
      description: 'Returns a list of invitations that the requesting user is permitted to view, restricted to those that match the list request. *Note:* At least one of `user_id` or `course_id` must be supplied. Both fields can be supplied. This method returns the following error codes: * `PERMISSION_DENIED` for access errors.'
      responses:
        '200':
          body:
            application/json:
              type: ListInvitationsResponse
          description: Successful response
      queryParameters:
        userId:
          description: 'Restricts returned invitations to those for a specific user. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
          type: string
        courseId:
          description: Restricts returned invitations to those for a course with the specified identifier.
          type: string
        pageSize:
          description: Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.
          type: integer
        pageToken:
          description: 'nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
      (oas-tags):
        - invitations
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    post:
      displayName: classroom.invitations.create
      description: 'Creates an invitation. Only one invitation for a user and course may exist at a time. Delete and re-create an invitation to make changes. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create invitations for this course or for access errors. * `NOT_FOUND` if the course or the user does not exist. * `FAILED_PRECONDITION` if the requested user''s account is disabled or if the user already has this role or a role with greater permissions. * `ALREADY_EXISTS` if an invitation for the specified user and course already exists.'
      body:
        application/json:
          type: Invitation
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Invitation
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/classroom.rosters'
      (oas-tags):
        - invitations
    '/{id}':
      displayName: '{id}'
      uriParameters:
        id:
          description: Identifier of the invitation to return.
          required: true
          type: string
      delete:
        displayName: classroom.invitations.delete
        description: 'Deletes an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.'
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.rosters'
        (oas-tags):
          - invitations
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      get:
        displayName: classroom.invitations.get
        description: 'Returns an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.'
        responses:
          '200':
            body:
              application/json:
                type: Invitation
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.rosters.readonly'
        (oas-tags):
          - invitations
    '/{id}:accept':
      displayName: '{id}:accept'
      uriParameters:
        id:
          description: Identifier of the invitation to accept.
          required: true
          type: string
      post:
        displayName: classroom.invitations.accept
        description: 'Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to accept the requested invitation or for access errors. * `FAILED_PRECONDITION` for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `NOT_FOUND` if no invitation exists with the requested ID.'
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/classroom.rosters'
        (oas-tags):
          - invitations
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
types:
  Assignment:
    description: Additional details for assignments.
    properties:
      studentWorkFolder:
        description: Drive folder where attachments from student submissions are placed. This is only populated for course teachers.
        type: DriveFolder
        required: false
  AssignmentSubmission:
    description: Student work for an assignment.
    properties:
      attachments:
        description: 'Attachments added by the student. Drive files that correspond to materials with a share mode of SUBMISSION_COPY may not exist yet if the student has not accessed the assignment in Classroom. Some attachment metadata is only populated if the requesting user has permission to access it. Identifier and alternate_link fields are available, but others (e.g. title) may not be.'
        items:
          type: Attachment
        type: array
        required: false
  Attachment:
    description: 'Attachment added to student assignment work. When creating attachments, only the Link field may be specified.'
    properties:
      driveFile:
        description: Google Drive file attachment.
        type: DriveFile
        required: false
      form:
        description: Google Forms attachment.
        type: Form
        required: false
      link:
        description: Link attachment.
        type: Link
        required: false
      youTubeVideo:
        description: Youtube video attachment.
        type: YouTubeVideo
        required: false
  Course:
    description: A Course in Classroom.
    properties:
      alternateLink:
        description: Absolute link to this course in the Classroom web UI. Read-only.
        type: string
        required: false
      courseGroupEmail:
        description: The email address of a Google group containing all members of the course. This group does not accept email and can only be used for permissions. Read-only.
        type: string
        required: false
      courseMaterialSets:
        description: Sets of materials that appear on the "about" page of this course. Read-only.
        items:
          type: CourseMaterialSet
        type: array
        required: false
      courseState:
        description: 'State of the course. If unspecified, the default state is `PROVISIONED`.'
        enum:
          - COURSE_STATE_UNSPECIFIED
          - ACTIVE
          - ARCHIVED
          - PROVISIONED
          - DECLINED
        type: string
        required: false
      creationTime:
        description: Creation time of the course. Specifying this field in a course update mask results in an error. Read-only.
        type: string
        required: false
      description:
        description: 'Optional description. For example, "We''ll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.'
        type: string
        required: false
      descriptionHeading:
        description: 'Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set, this field must be a valid UTF-8 string and no longer than 3600 characters.'
        type: string
        required: false
      enrollmentCode:
        description: Enrollment code to use when joining this course. Specifying this field in a course update mask results in an error. Read-only.
        type: string
        required: false
      guardiansEnabled:
        description: Whether or not guardian notifications are enabled for this course. Read-only.
        type: boolean
        required: false
      id:
        description: 'Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask results in an error.'
        type: string
        required: false
      name:
        description: 'Name of the course. For example, "10th Grade Biology". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.'
        type: string
        required: false
      ownerId:
        description: 'The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask results in an `INVALID_ARGUMENT` error.'
        type: string
        required: false
      room:
        description: 'Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and no longer than 650 characters.'
        type: string
        required: false
      section:
        description: 'Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.'
        type: string
        required: false
      teacherFolder:
        description: Information about a Drive Folder that is shared with all teachers of the course. This field will only be set for teachers of the course and domain administrators. Read-only.
        type: DriveFolder
        required: false
      teacherGroupEmail:
        description: The email address of a Google group containing all teachers of the course. This group does not accept email and can only be used for permissions. Read-only.
        type: string
        required: false
      updateTime:
        description: Time of the most recent update to this course. Specifying this field in a course update mask results in an error. Read-only.
        type: string
        required: false
  CourseAlias:
    description: 'Alternative identifier for a course. An alias uniquely identifies a course. It must be unique within one of the following scopes: * domain: A domain-scoped alias is visible to all users within the alias creator''s domain and can be created only by a domain admin. A domain-scoped alias is often used when a course has an identifier external to Classroom. * project: A project-scoped alias is visible to any request from an application using the Developer Console project ID that created the alias and can be created by any project. A project-scoped alias is often used when an application has alternative identifiers. A random value can also be used to avoid duplicate courses in the event of transmission failures, as retrying a request will return `ALREADY_EXISTS` if a previous one has succeeded.'
    properties:
      alias:
        description: 'Alias string. The format of the string indicates the desired alias scoping. * `d:` indicates a domain-scoped alias. Example: `d:math_101` * `p:` indicates a project-scoped alias. Example: `p:abc123` This field has a maximum length of 256 characters.'
        type: string
        required: false
  CourseMaterial:
    description: A material attached to a course as part of a material set.
    properties:
      driveFile:
        description: Google Drive file attachment.
        type: DriveFile
        required: false
      form:
        description: Google Forms attachment.
        type: Form
        required: false
      link:
        description: Link atatchment.
        type: Link
        required: false
      youTubeVideo:
        description: Youtube video attachment.
        type: YouTubeVideo
        required: false
  CourseMaterialSet:
    description: 'A set of materials that appears on the "About" page of the course. These materials might include a syllabus, schedule, or other background information relating to the course as a whole.'
    properties:
      materials:
        description: Materials attached to this set.
        items:
          type: CourseMaterial
        type: array
        required: false
      title:
        description: Title for this set.
        type: string
        required: false
  CourseWork:
    description: Course work created by a teacher for students of the course.
    properties:
      alternateLink:
        description: Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
        type: string
        required: false
      assignment:
        description: Assignment details. This is populated only when `work_type` is `ASSIGNMENT`.
        type: Assignment
        required: false
      associatedWithDeveloper:
        description: Whether this course work item is associated with the Developer Console project making the request. See google.classroom.Work.CreateCourseWork for more details. Read-only.
        type: boolean
        required: false
      courseId:
        description: Identifier of the course. Read-only.
        type: string
        required: false
      creationTime:
        description: Timestamp when this course work was created. Read-only.
        type: string
        required: false
      description:
        description: 'Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.'
        type: string
        required: false
      dueDate:
        description: 'Optional date, in UTC, that submissions for this this course work are due. This must be specified if `due_time` is specified.'
        type: Date
        required: false
      dueTime:
        description: 'Optional time of day, in UTC, that submissions for this this course work are due. This must be specified if `due_date` is specified.'
        type: TimeOfDay
        required: false
      id:
        description: 'Classroom-assigned identifier of this course work, unique per course. Read-only.'
        type: string
        required: false
      materials:
        description: Additional materials. CourseWork must have no more than 20 material items.
        items:
          type: Material
        type: array
        required: false
      maxPoints:
        description: 'Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.'
        format: double
        type: number
        required: false
      multipleChoiceQuestion:
        description: Multiple choice question details. This is populated only when `work_type` is `MULTIPLE_CHOICE_QUESTION`.
        type: MultipleChoiceQuestion
        required: false
      state:
        description: 'Status of this course work. If unspecified, the default state is `DRAFT`.'
        enum:
          - COURSE_WORK_STATE_UNSPECIFIED
          - PUBLISHED
          - DRAFT
          - DELETED
        type: string
        required: false
      submissionModificationMode:
        description: 'Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.'
        enum:
          - SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
          - MODIFIABLE_UNTIL_TURNED_IN
          - MODIFIABLE
        type: string
        required: false
      title:
        description: Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.
        type: string
        required: false
      updateTime:
        description: Timestamp of the most recent change to this course work. Read-only.
        type: string
        required: false
      workType:
        description: 'Type of this course work. The type is set when the course work is created and cannot be changed. When creating course work, this must be `ASSIGNMENT`.'
        enum:
          - COURSE_WORK_TYPE_UNSPECIFIED
          - ASSIGNMENT
          - SHORT_ANSWER_QUESTION
          - MULTIPLE_CHOICE_QUESTION
        type: string
        required: false
  Date:
    description: 'Represents a whole calendar date, e.g. date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day may be 0 to represent a year and month where the day is not significant, e.g. credit card expiration date. The year may be 0 to represent a month and day independent of year, e.g. anniversary date. Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.'
    properties:
      day:
        description: 'Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year/month where the day is not significant.'
        format: int32
        type: integer
        required: false
      month:
        description: Month of year. Must be from 1 to 12.
        format: int32
        type: integer
        required: false
      year:
        description: 'Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.'
        format: int32
        type: integer
        required: false
  DriveFile:
    description: Representation of a Google Drive file.
    properties:
      alternateLink:
        description: URL that can be used to access the Drive item. Read-only.
        type: string
        required: false
      id:
        description: Drive API resource ID.
        type: string
        required: false
      thumbnailUrl:
        description: URL of a thumbnail image of the Drive item. Read-only.
        type: string
        required: false
      title:
        description: Title of the Drive item. Read-only.
        type: string
        required: false
  DriveFolder:
    description: Representation of a Google Drive folder.
    properties:
      alternateLink:
        description: URL that can be used to access the Drive folder. Read-only.
        type: string
        required: false
      id:
        description: Drive API resource ID.
        type: string
        required: false
      title:
        description: Title of the Drive folder. Read-only.
        type: string
        required: false
  Empty:
    description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
  Form:
    description: Google Forms item.
    properties:
      formUrl:
        description: URL of the form.
        type: string
        required: false
      responseUrl:
        description: URL of the form responses document. Only set if respsonses have been recorded and only when the requesting user is an editor of the form. Read-only.
        type: string
        required: false
      thumbnailUrl:
        description: URL of a thumbnail image of the Form. Read-only.
        type: string
        required: false
      title:
        description: Title of the Form. Read-only.
        type: string
        required: false
  GlobalPermission:
    description: Global user permission description.
    properties:
      permission:
        description: Permission value.
        enum:
          - PERMISSION_UNSPECIFIED
          - CREATE_COURSE
        type: string
        required: false
  Guardian:
    description: Association between a student and a guardian of that student. The guardian may receive information about the student's course work.
    properties:
      guardianId:
        description: Identifier for the guardian.
        type: string
        required: false
      guardianProfile:
        description: User profile for the guardian.
        type: UserProfile
        required: false
      invitedEmailAddress:
        description: The email address to which the initial guardian invitation was sent. This field is only visible to domain administrators.
        type: string
        required: false
      studentId:
        description: Identifier for the student to whom the guardian relationship applies.
        type: string
        required: false
  GuardianInvitation:
    description: 'An invitation to become the guardian of a specified user, sent to a specified email address.'
    properties:
      creationTime:
        description: The time that this invitation was created. Read-only.
        type: string
        required: false
      invitationId:
        description: Unique identifier for this invitation. Read-only.
        type: string
        required: false
      invitedEmailAddress:
        description: Email address that the invitation was sent to. This field is only visible to domain administrators.
        type: string
        required: false
      state:
        description: The state that this invitation is in.
        enum:
          - GUARDIAN_INVITATION_STATE_UNSPECIFIED
          - PENDING
          - COMPLETE
        type: string
        required: false
      studentId:
        description: ID of the student (in standard format)
        type: string
        required: false
  Invitation:
    description: An invitation to join a course.
    properties:
      courseId:
        description: Identifier of the course to invite the user to.
        type: string
        required: false
      id:
        description: Identifier assigned by Classroom. Read-only.
        type: string
        required: false
      role:
        description: Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
        enum:
          - COURSE_ROLE_UNSPECIFIED
          - STUDENT
          - TEACHER
        type: string
        required: false
      userId:
        description: 'Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
        type: string
        required: false
  Link:
    description: URL item.
    properties:
      thumbnailUrl:
        description: URL of a thumbnail image of the target URL. Read-only.
        type: string
        required: false
      title:
        description: Title of the target of the URL. Read-only.
        type: string
        required: false
      url:
        description: URL to link to. This must be a valid UTF-8 string containing between 1 and 2024 characters.
        type: string
        required: false
  ListCourseAliasesResponse:
    description: Response when listing course aliases.
    properties:
      aliases:
        description: The course aliases.
        items:
          type: CourseAlias
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListCourseWorkResponse:
    description: Response when listing course work.
    properties:
      courseWork:
        description: Course work items that match the request.
        items:
          type: CourseWork
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListCoursesResponse:
    description: Response when listing courses.
    properties:
      courses:
        description: Courses that match the list request.
        items:
          type: Course
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListGuardianInvitationsResponse:
    description: Response when listing guardian invitations.
    properties:
      guardianInvitations:
        description: Guardian invitations that matched the list request.
        items:
          type: GuardianInvitation
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListGuardiansResponse:
    description: Response when listing guardians.
    properties:
      guardians:
        description: Guardians on this page of results that met the criteria specified in the request.
        items:
          type: Guardian
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListInvitationsResponse:
    description: Response when listing invitations.
    properties:
      invitations:
        description: Invitations that match the list request.
        items:
          type: Invitation
        type: array
        required: false
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
  ListStudentSubmissionsResponse:
    description: Response when listing student submissions.
    properties:
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
      studentSubmissions:
        description: Student work that matches the request.
        items:
          type: StudentSubmission
        type: array
        required: false
  ListStudentsResponse:
    description: Response when listing students.
    properties:
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
      students:
        description: Students who match the list request.
        items:
          type: Student
        type: array
        required: false
  ListTeachersResponse:
    description: Response when listing teachers.
    properties:
      nextPageToken:
        description: 'Token identifying the next page of results to return. If empty, no further results are available.'
        type: string
        required: false
      teachers:
        description: Teachers who match the list request.
        items:
          type: Teacher
        type: array
        required: false
  Material:
    description: 'Material attached to course work. When creating attachments, only the Link field may be specified.'
    properties:
      driveFile:
        description: Google Drive file material.
        type: SharedDriveFile
        required: false
      form:
        description: Google Forms material.
        type: Form
        required: false
      link:
        description: Link material.
        type: Link
        required: false
      youtubeVideo:
        description: YouTube video material.
        type: YouTubeVideo
        required: false
  ModifyAttachmentsRequest:
    description: Request to modify the attachments of a student submission.
    properties:
      addAttachments:
        description: Attachments to add. A student submission may not have more than 20 attachments. This may only contain link attachments.
        items:
          type: Attachment
        type: array
        required: false
  MultipleChoiceQuestion:
    description: Additional details for multiple-choice questions.
    properties:
      choices:
        description: Possible choices.
        items:
          type: string
        type: array
        required: false
  MultipleChoiceSubmission:
    description: Student work for a multiple-choice question.
    properties:
      answer:
        description: Student's select choice.
        type: string
        required: false
  Name:
    description: Details of the user's name.
    properties:
      familyName:
        description: The user's last name. Read-only.
        type: string
        required: false
      fullName:
        description: The user's full name formed by concatenating the first and last name values. Read-only.
        type: string
        required: false
      givenName:
        description: The user's first name. Read-only.
        type: string
        required: false
  ReclaimStudentSubmissionRequest:
    description: Request to reclaim a student submission.
    type: object
  ReturnStudentSubmissionRequest:
    description: Request to return a student submission.
    type: object
  SharedDriveFile:
    description: Drive file that is used as material for course work.
    properties:
      driveFile:
        description: Drive file details.
        type: DriveFile
        required: false
      shareMode:
        description: Mechanism by which students access the Drive item.
        enum:
          - UNKNOWN_SHARE_MODE
          - VIEW
          - EDIT
          - STUDENT_COPY
        type: string
        required: false
  ShortAnswerSubmission:
    description: Student work for a short answer question.
    properties:
      answer:
        description: Student response to a short-answer question.
        type: string
        required: false
  Student:
    description: Student in a course.
    properties:
      courseId:
        description: Identifier of the course. Read-only.
        type: string
        required: false
      profile:
        description: Global user information for the student. Read-only.
        type: UserProfile
        required: false
      studentWorkFolder:
        description: Information about a Drive Folder for this student's work in this course. Only visible to the student and domain administrators. Read-only.
        type: DriveFolder
        required: false
      userId:
        description: 'Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
        type: string
        required: false
  StudentSubmission:
    description: Student submission for course work. StudentSubmission items are generated when a CourseWork item is created. StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.
    properties:
      alternateLink:
        description: Absolute link to the submission in the Classroom web UI. Read-only.
        type: string
        required: false
      assignedGrade:
        description: 'Optional grade. If unset, no grade was set. This must be a non-negative integer value. This may be modified only by course teachers.'
        format: double
        type: number
        required: false
      assignmentSubmission:
        description: Submission content when course_work_type is ASSIGNMENT .
        type: AssignmentSubmission
        required: false
      associatedWithDeveloper:
        description: Whether this student submission is associated with the Developer Console project making the request. See google.classroom.Work.CreateCourseWork for more details. Read-only.
        type: boolean
        required: false
      courseId:
        description: Identifier of the course. Read-only.
        type: string
        required: false
      courseWorkId:
        description: Identifier for the course work this corresponds to. Read-only.
        type: string
        required: false
      courseWorkType:
        description: Type of course work this submission is for. Read-only.
        enum:
          - COURSE_WORK_TYPE_UNSPECIFIED
          - ASSIGNMENT
          - SHORT_ANSWER_QUESTION
          - MULTIPLE_CHOICE_QUESTION
        type: string
        required: false
      creationTime:
        description: Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.
        type: string
        required: false
      draftGrade:
        description: 'Optional pending grade. If unset, no grade was set. This must be a non-negative integer value. This is only visible to and modifiable by course teachers.'
        format: double
        type: number
        required: false
      id:
        description: Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.
        type: string
        required: false
      late:
        description: Whether this submission is late. Read-only.
        type: boolean
        required: false
      multipleChoiceSubmission:
        description: Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION.
        type: MultipleChoiceSubmission
        required: false
      shortAnswerSubmission:
        description: Submission content when course_work_type is SHORT_ANSWER_QUESTION.
        type: ShortAnswerSubmission
        required: false
      state:
        description: State of this submission. Read-only.
        enum:
          - SUBMISSION_STATE_UNSPECIFIED
          - NEW
          - CREATED
          - TURNED_IN
          - RETURNED
          - RECLAIMED_BY_STUDENT
        type: string
        required: false
      updateTime:
        description: Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.
        type: string
        required: false
      userId:
        description: Identifier for the student that owns this submission. Read-only.
        type: string
        required: false
  Teacher:
    description: Teacher of a course.
    properties:
      courseId:
        description: Identifier of the course. Read-only.
        type: string
        required: false
      profile:
        description: Global user information for the teacher. Read-only.
        type: UserProfile
        required: false
      userId:
        description: 'Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user'
        type: string
        required: false
  TimeOfDay:
    description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may chose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
    properties:
      hours:
        description: 'Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.'
        format: int32
        type: integer
        required: false
      minutes:
        description: Minutes of hour of day. Must be from 0 to 59.
        format: int32
        type: integer
        required: false
      nanos:
        description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
        format: int32
        type: integer
        required: false
      seconds:
        description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
        format: int32
        type: integer
        required: false
  TurnInStudentSubmissionRequest:
    description: Request to turn in a student submission.
    type: object
  UserProfile:
    description: Global information for a user.
    properties:
      emailAddress:
        description: Email address of the user. Read-only.
        type: string
        required: false
      id:
        description: Identifier of the user. Read-only.
        type: string
        required: false
      name:
        description: Name of the user. Read-only.
        type: Name
        required: false
      permissions:
        description: Global permissions of the user. Read-only.
        items:
          type: GlobalPermission
        type: array
        required: false
      photoUrl:
        description: URL of user's profile photo. Read-only.
        type: string
        required: false
  YouTubeVideo:
    description: YouTube video item.
    properties:
      alternateLink:
        description: URL that can be used to view the YouTube video. Read-only.
        type: string
        required: false
      id:
        description: YouTube API resource ID.
        type: string
        required: false
      thumbnailUrl:
        description: URL of a thumbnail image of the YouTube video. Read-only.
        type: string
        required: false
      title:
        description: Title of the YouTube video. Read-only.
        type: string
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
