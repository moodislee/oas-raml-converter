#%RAML 1.0
title: Google Identity Toolkit
version: v3
baseUri: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
protocols:
  - HTTPS
description: Help the third party sites to implement federated login.
(oas-tags-definition):
  - name: relyingparty
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/identitytoolkit/v3/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): identitytoolkit
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/identity-toolkit/v3/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/firebase'
    description: Oauth 2.0 authentication
/resetPassword:
  displayName: resetPassword
  post:
    displayName: identitytoolkit.relyingparty.resetPassword
    description: Reset password for a user.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyResetPasswordRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: ResetPasswordResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/verifyPassword:
  displayName: verifyPassword
  post:
    displayName: identitytoolkit.relyingparty.verifyPassword
    description: Verifies the user entered password.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyVerifyPasswordRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: VerifyPasswordResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/setAccountInfo:
  displayName: setAccountInfo
  post:
    displayName: identitytoolkit.relyingparty.setAccountInfo
    description: Set account info for a user.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartySetAccountInfoRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: SetAccountInfoResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/createAuthUri:
  displayName: createAuthUri
  post:
    displayName: identitytoolkit.relyingparty.createAuthUri
    description: Creates the URI used by the IdP to authenticate the user.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyCreateAuthUriRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: CreateAuthUriResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/setProjectConfig:
  displayName: setProjectConfig
  post:
    displayName: identitytoolkit.relyingparty.setProjectConfig
    description: Set project configuration.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartySetProjectConfigRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: IdentitytoolkitRelyingpartySetProjectConfigResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/downloadAccount:
  displayName: downloadAccount
  post:
    displayName: identitytoolkit.relyingparty.downloadAccount
    description: Batch download user accounts.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyDownloadAccountRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: DownloadAccountResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/firebase'
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/signOutUser:
  displayName: signOutUser
  post:
    displayName: identitytoolkit.relyingparty.signOutUser
    description: Sign out user.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartySignOutUserRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: IdentitytoolkitRelyingpartySignOutUserResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/getOobConfirmationCode:
  displayName: getOobConfirmationCode
  post:
    displayName: identitytoolkit.relyingparty.getOobConfirmationCode
    description: Get a code for user action confirmation.
    body:
      application/json:
        type: Relyingparty
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: GetOobConfirmationCodeResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/getRecaptchaParam:
  displayName: getRecaptchaParam
  get:
    displayName: identitytoolkit.relyingparty.getRecaptchaParam
    description: Get recaptcha secure param.
    responses:
      '200':
        body:
          application/json:
            type: GetRecaptchaParamResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/verifyCustomToken:
  displayName: verifyCustomToken
  post:
    displayName: identitytoolkit.relyingparty.verifyCustomToken
    description: Verifies the developer asserted ID token.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: VerifyCustomTokenResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/verifyAssertion:
  displayName: verifyAssertion
  post:
    displayName: identitytoolkit.relyingparty.verifyAssertion
    description: Verifies the assertion returned by the IdP.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyVerifyAssertionRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: VerifyAssertionResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/uploadAccount:
  displayName: uploadAccount
  post:
    displayName: identitytoolkit.relyingparty.uploadAccount
    description: Batch upload existing user accounts.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyUploadAccountRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: UploadAccountResponse
        description: Successful response
    securedBy:
      - Oauth2:
          scopes:
            - 'https://www.googleapis.com/auth/firebase'
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/signupNewUser:
  displayName: signupNewUser
  post:
    displayName: identitytoolkit.relyingparty.signupNewUser
    description: Signup new user.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartySignupNewUserRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: SignupNewUserResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/publicKeys:
  displayName: publicKeys
  get:
    displayName: identitytoolkit.relyingparty.getPublicKeys
    description: Get token signing public key.
    responses:
      '200':
        body:
          application/json:
            type: IdentitytoolkitRelyingpartyGetPublicKeysResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/getProjectConfig:
  displayName: getProjectConfig
  get:
    displayName: identitytoolkit.relyingparty.getProjectConfig
    description: Get project configuration.
    responses:
      '200':
        body:
          application/json:
            type: IdentitytoolkitRelyingpartyGetProjectConfigResponse
        description: Successful response
    queryParameters:
      delegatedProjectNumber:
        description: Delegated GCP project number of the request.
        type: string
      projectNumber:
        description: GCP project number of the request.
        type: string
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/getAccountInfo:
  displayName: getAccountInfo
  post:
    displayName: identitytoolkit.relyingparty.getAccountInfo
    description: Returns the account info.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyGetAccountInfoRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: GetAccountInfoResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
/deleteAccount:
  displayName: deleteAccount
  post:
    displayName: identitytoolkit.relyingparty.deleteAccount
    description: Delete user account.
    body:
      application/json:
        type: IdentitytoolkitRelyingpartyDeleteAccountRequest
        (oas-body-name): body
    responses:
      '200':
        body:
          application/json:
            type: DeleteAccountResponse
        description: Successful response
    (oas-tags):
      - relyingparty
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
types:
  CreateAuthUriResponse:
    description: Response of creating the IDP authentication URL.
    properties:
      allProviders:
        description: all providers the user has once used to do federated login
        items:
          type: string
        type: array
        required: false
      authUri:
        description: The URI used by the IDP to authenticate the user.
        type: string
        required: false
      captchaRequired:
        description: True if captcha is required.
        type: boolean
        required: false
      forExistingProvider:
        description: True if the authUri is for user's existing provider.
        type: boolean
        required: false
      kind:
        default: 'identitytoolkit#CreateAuthUriResponse'
        description: 'The fixed string identitytoolkit#CreateAuthUriResponse".'
        type: string
        required: false
      providerId:
        description: The provider ID of the auth URI.
        type: string
        required: false
      registered:
        description: Whether the user is registered if the identifier is an email.
        type: boolean
        required: false
      sessionId:
        description: Session ID which should be passed in the following verifyAssertion request.
        type: string
        required: false
  DeleteAccountResponse:
    description: Respone of deleting account.
    properties:
      kind:
        default: 'identitytoolkit#DeleteAccountResponse'
        description: 'The fixed string "identitytoolkit#DeleteAccountResponse".'
        type: string
        required: false
  DownloadAccountResponse:
    description: Respone of downloading accounts in batch.
    properties:
      kind:
        default: 'identitytoolkit#DownloadAccountResponse'
        description: 'The fixed string "identitytoolkit#DownloadAccountResponse".'
        type: string
        required: false
      nextPageToken:
        description: The next page token. To be used in a subsequent request to return the next page of results.
        type: string
        required: false
      users:
        description: The user accounts data.
        items:
          type: UserInfo
        type: array
        required: false
  EmailTemplate:
    description: Template for an email template.
    properties:
      body:
        description: Email body.
        type: string
        required: false
      format:
        description: Email body format.
        type: string
        required: false
      from:
        description: From address of the email.
        type: string
        required: false
      fromDisplayName:
        description: From display name.
        type: string
        required: false
      replyTo:
        description: Reply-to address.
        type: string
        required: false
      subject:
        description: Subject of the email.
        type: string
        required: false
  GetAccountInfoResponse:
    description: Response of getting account information.
    properties:
      kind:
        default: 'identitytoolkit#GetAccountInfoResponse'
        description: 'The fixed string "identitytoolkit#GetAccountInfoResponse".'
        type: string
        required: false
      users:
        description: The info of the users.
        items:
          type: UserInfo
        type: array
        required: false
  GetOobConfirmationCodeResponse:
    description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
    properties:
      email:
        description: The email address that the email is sent to.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#GetOobConfirmationCodeResponse'
        description: 'The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".'
        type: string
        required: false
      oobCode:
        description: The code to be send to the user.
        type: string
        required: false
  GetRecaptchaParamResponse:
    description: Response of getting recaptcha param.
    properties:
      kind:
        default: 'identitytoolkit#GetRecaptchaParamResponse'
        description: 'The fixed string "identitytoolkit#GetRecaptchaParamResponse".'
        type: string
        required: false
      recaptchaSiteKey:
        description: Site key registered at recaptcha.
        type: string
        required: false
      recaptchaStoken:
        description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
        type: string
        required: false
  IdentitytoolkitRelyingpartyCreateAuthUriRequest:
    description: Request to get the IDP authentication URL.
    properties:
      appId:
        description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        type: string
        required: false
      authFlowType:
        description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        type: string
        required: false
      clientId:
        description: The relying party OAuth client ID.
        type: string
        required: false
      context:
        description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        type: string
        required: false
      continueUri:
        description: The URI to which the IDP redirects the user after the federated login flow.
        type: string
        required: false
      customParameter:
        description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
        type: object
        required: false
        properties:
          //:
            description: The customized query parameter.
            type: string
      hostedDomain:
        description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        type: string
        required: false
      identifier:
        description: The email or federated ID of the user.
        type: string
        required: false
      oauthConsumerKey:
        description: The developer's consumer key for OpenId OAuth Extension
        type: string
        required: false
      oauthScope:
        description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        type: string
        required: false
      openidRealm:
        description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        type: string
        required: false
      otaApp:
        description: The native app package for OTA installation.
        type: string
        required: false
      providerId:
        description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        type: string
        required: false
      sessionId:
        description: The session_id passed by client.
        type: string
        required: false
  IdentitytoolkitRelyingpartyDeleteAccountRequest:
    description: Request to delete account.
    properties:
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The GITKit token or STS id token of the authenticated user.
        type: string
        required: false
      localId:
        description: The local ID of the user.
        type: string
        required: false
  IdentitytoolkitRelyingpartyDownloadAccountRequest:
    description: Request to download user account in batch.
    properties:
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      maxResults:
        description: The max number of results to return in the response.
        type: integer
        required: false
      nextPageToken:
        description: The token for the next page. This should be taken from the previous response.
        type: string
        required: false
  IdentitytoolkitRelyingpartyGetAccountInfoRequest:
    description: Request to get the account information.
    properties:
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      email:
        description: The list of emails of the users to inquiry.
        items:
          type: string
        type: array
        required: false
      idToken:
        description: The GITKit token of the authenticated user.
        type: string
        required: false
      localId:
        description: The list of local ID's of the users to inquiry.
        items:
          type: string
        type: array
        required: false
  IdentitytoolkitRelyingpartyGetProjectConfigResponse:
    description: Response of getting the project configuration.
    properties:
      allowPasswordUser:
        description: Whether to allow password user sign in or sign up.
        type: boolean
        required: false
      apiKey:
        description: 'Browser API key, needed when making http request to Apiary.'
        type: string
        required: false
      authorizedDomains:
        description: Authorized domains.
        items:
          type: string
        type: array
        required: false
      changeEmailTemplate:
        description: Change email template.
        type: EmailTemplate
        required: false
      dynamicLinksDomain:
        type: string
        required: false
      enableAnonymousUser:
        description: Whether anonymous user is enabled.
        type: boolean
        required: false
      idpConfig:
        description: OAuth2 provider configuration.
        items:
          type: IdpConfig
        type: array
        required: false
      legacyResetPasswordTemplate:
        description: Legacy reset password email template.
        type: EmailTemplate
        required: false
      projectId:
        description: Project ID of the relying party.
        type: string
        required: false
      resetPasswordTemplate:
        description: Reset password email template.
        type: EmailTemplate
        required: false
      useEmailSending:
        description: Whether to use email sending provided by Firebear.
        type: boolean
        required: false
      verifyEmailTemplate:
        description: Verify email template.
        type: EmailTemplate
        required: false
  IdentitytoolkitRelyingpartyGetPublicKeysResponse:
    description: Respone of getting public keys.
    type: object
    properties:
      //:
        type: string
  IdentitytoolkitRelyingpartyResetPasswordRequest:
    description: Request to reset the password.
    properties:
      email:
        description: The email address of the user.
        type: string
        required: false
      newPassword:
        description: The new password inputted by the user.
        type: string
        required: false
      oldPassword:
        description: The old password inputted by the user.
        type: string
        required: false
      oobCode:
        description: The confirmation code.
        type: string
        required: false
  IdentitytoolkitRelyingpartySetAccountInfoRequest:
    description: Request to set the account information.
    properties:
      captchaChallenge:
        description: The captcha challenge.
        type: string
        required: false
      captchaResponse:
        description: Response to the captcha.
        type: string
        required: false
      createdAt:
        description: The timestamp when the account is created.
        format: int64
        type: string
        facets:
          format: string
        required: false
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      deleteAttribute:
        description: The attributes users request to delete.
        items:
          type: string
        type: array
        required: false
      deleteProvider:
        description: The IDPs the user request to delete.
        items:
          type: string
        type: array
        required: false
      disableUser:
        description: Whether to disable the user.
        type: boolean
        required: false
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      emailVerified:
        description: Mark the email as verified or not.
        type: boolean
        required: false
      idToken:
        description: The GITKit token of the authenticated user.
        type: string
        required: false
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      lastLoginAt:
        description: Last login timestamp.
        format: int64
        type: string
        facets:
          format: string
        required: false
      localId:
        description: The local ID of the user.
        type: string
        required: false
      oobCode:
        description: The out-of-band code of the change email request.
        type: string
        required: false
      password:
        description: The new password of the user.
        type: string
        required: false
      photoUrl:
        description: The photo url of the user.
        type: string
        required: false
      provider:
        description: The associated IDPs of the user.
        items:
          type: string
        type: array
        required: false
      returnSecureToken:
        description: Whether return sts id token and refresh token instead of gitkit token.
        type: boolean
        required: false
      upgradeToFederatedLogin:
        description: Mark the user to upgrade to federated login.
        type: boolean
        required: false
      validSince:
        description: Timestamp in seconds for valid login token.
        format: int64
        type: string
        facets:
          format: string
        required: false
  IdentitytoolkitRelyingpartySetProjectConfigRequest:
    description: Request to set the project configuration.
    properties:
      allowPasswordUser:
        description: Whether to allow password user sign in or sign up.
        type: boolean
        required: false
      apiKey:
        description: 'Browser API key, needed when making http request to Apiary.'
        type: string
        required: false
      authorizedDomains:
        description: Authorized domains for widget redirect.
        items:
          type: string
        type: array
        required: false
      changeEmailTemplate:
        description: Change email template.
        type: EmailTemplate
        required: false
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      enableAnonymousUser:
        description: Whether to enable anonymous user.
        type: boolean
        required: false
      idpConfig:
        description: Oauth2 provider configuration.
        items:
          type: IdpConfig
        type: array
        required: false
      legacyResetPasswordTemplate:
        description: Legacy reset password email template.
        type: EmailTemplate
        required: false
      resetPasswordTemplate:
        description: Reset password email template.
        type: EmailTemplate
        required: false
      useEmailSending:
        description: Whether to use email sending provided by Firebear.
        type: boolean
        required: false
      verifyEmailTemplate:
        description: Verify email template.
        type: EmailTemplate
        required: false
  IdentitytoolkitRelyingpartySetProjectConfigResponse:
    description: Response of setting the project configuration.
    properties:
      projectId:
        description: Project ID of the relying party.
        type: string
        required: false
  IdentitytoolkitRelyingpartySignOutUserRequest:
    description: Request to sign out user.
    properties:
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      localId:
        description: The local ID of the user.
        type: string
        required: false
  IdentitytoolkitRelyingpartySignOutUserResponse:
    description: Response of signing out user.
    properties:
      localId:
        description: The local ID of the user.
        type: string
        required: false
  IdentitytoolkitRelyingpartySignupNewUserRequest:
    description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
    properties:
      captchaChallenge:
        description: The captcha challenge.
        type: string
        required: false
      captchaResponse:
        description: Response to the captcha.
        type: string
        required: false
      disabled:
        description: Whether to disable the user. Only can be used by service account.
        type: boolean
        required: false
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      emailVerified:
        description: Mark the email as verified or not. Only can be used by service account.
        type: boolean
        required: false
      idToken:
        description: The GITKit token of the authenticated user.
        type: string
        required: false
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      password:
        description: The new password of the user.
        type: string
        required: false
      photoUrl:
        description: The photo url of the user.
        type: string
        required: false
  IdentitytoolkitRelyingpartyUploadAccountRequest:
    description: Request to upload user account in batch.
    properties:
      allowOverwrite:
        description: Whether allow overwrite existing account when user local_id exists.
        type: boolean
        required: false
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      hashAlgorithm:
        description: The password hash algorithm.
        type: string
        required: false
      memoryCost:
        description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        format: int32
        type: integer
        required: false
      rounds:
        description: Rounds for hash calculation. Used by scrypt and similar algorithms.
        format: int32
        type: integer
        required: false
      saltSeparator:
        description: The salt separator.
        format: byte
        type: string
        facets:
          format: string
        required: false
      sanityCheck:
        description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
        type: boolean
        required: false
      signerKey:
        description: The key for to hash the password.
        format: byte
        type: string
        facets:
          format: string
        required: false
      targetProjectId:
        description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        type: string
        required: false
      users:
        description: The account info to be stored.
        items:
          type: UserInfo
        type: array
        required: false
  IdentitytoolkitRelyingpartyVerifyAssertionRequest:
    description: Request to verify the IDP assertion.
    properties:
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The GITKit token of the authenticated user.
        type: string
        required: false
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      pendingIdToken:
        description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        type: string
        required: false
      postBody:
        description: The post body if the request is a HTTP POST.
        type: string
        required: false
      requestUri:
        description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        type: string
        required: false
      returnIdpCredential:
        description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        type: boolean
        required: false
      returnRefreshToken:
        description: Whether to return refresh tokens.
        type: boolean
        required: false
      returnSecureToken:
        description: Whether return sts id token and refresh token instead of gitkit token.
        type: boolean
        required: false
      sessionId:
        description: 'Session ID, which should match the one in previous createAuthUri request.'
        type: string
        required: false
  IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
    description: Request to verify a custom token
    properties:
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      returnSecureToken:
        description: Whether return sts id token and refresh token instead of gitkit token.
        type: boolean
        required: false
      token:
        description: The custom token to verify
        type: string
        required: false
  IdentitytoolkitRelyingpartyVerifyPasswordRequest:
    description: Request to verify the password.
    properties:
      captchaChallenge:
        description: The captcha challenge.
        type: string
        required: false
      captchaResponse:
        description: Response to the captcha.
        type: string
        required: false
      delegatedProjectNumber:
        description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        format: int64
        type: string
        facets:
          format: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      idToken:
        description: The GITKit token of the authenticated user.
        type: string
        required: false
      instanceId:
        description: Instance id token of the app.
        type: string
        required: false
      password:
        description: The password inputed by the user.
        type: string
        required: false
      pendingIdToken:
        description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
        type: string
        required: false
      returnSecureToken:
        description: Whether return sts id token and refresh token instead of gitkit token.
        type: boolean
        required: false
  IdpConfig:
    description: Template for a single idp configuration.
    properties:
      clientId:
        description: OAuth2 client ID.
        type: string
        required: false
      enabled:
        description: Whether this IDP is enabled.
        type: boolean
        required: false
      experimentPercent:
        description: Percent of users who will be prompted/redirected federated login for this IDP.
        format: int32
        type: integer
        required: false
      provider:
        description: OAuth2 provider.
        type: string
        required: false
      secret:
        description: OAuth2 client secret.
        type: string
        required: false
      whitelistedAudiences:
        description: Whitelisted client IDs for audience check.
        items:
          type: string
        type: array
        required: false
  Relyingparty:
    description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
    properties:
      captchaResp:
        description: The recaptcha response from the user.
        type: string
        required: false
      challenge:
        description: The recaptcha challenge presented to the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      idToken:
        description: The user's Gitkit login token for email change.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#relyingparty'
        description: 'The fixed string "identitytoolkit#relyingparty".'
        type: string
        required: false
      newEmail:
        description: The new email if the code is for email change.
        type: string
        required: false
      requestType:
        description: The request type.
        type: string
        required: false
      userIp:
        description: The IP address of the user.
        type: string
        required: false
  ResetPasswordResponse:
    description: Response of resetting the password.
    properties:
      email:
        description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
        type: string
        required: false
      kind:
        default: 'identitytoolkit#ResetPasswordResponse'
        description: 'The fixed string "identitytoolkit#ResetPasswordResponse".'
        type: string
        required: false
      newEmail:
        description: 'If the out-of-band code is for email recovery, the user''s new email.'
        type: string
        required: false
      requestType:
        description: The request type.
        type: string
        required: false
  SetAccountInfoResponse:
    description: Respone of setting the account information.
    properties:
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      expiresIn:
        description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The Gitkit id token to login the newly sign up user.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#SetAccountInfoResponse'
        description: 'The fixed string "identitytoolkit#SetAccountInfoResponse".'
        type: string
        required: false
      localId:
        description: The local ID of the user.
        type: string
        required: false
      newEmail:
        description: The new email the user attempts to change to.
        type: string
        required: false
      passwordHash:
        description: The user's hashed password.
        format: byte
        type: string
        facets:
          format: string
        required: false
      photoUrl:
        description: The photo url of the user.
        type: string
        required: false
      providerUserInfo:
        description: The user's profiles at the associated IdPs.
        items:
          properties:
            displayName:
              description: The user's display name at the IDP.
              type: string
              required: false
            federatedId:
              description: User's identifier at IDP.
              type: string
              required: false
            photoUrl:
              description: The user's photo url at the IDP.
              type: string
              required: false
            providerId:
              description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              type: string
              required: false
          type: object
        type: array
        required: false
      refreshToken:
        description: 'If idToken is STS id token, then this field will be refresh token.'
        type: string
        required: false
  SignupNewUserResponse:
    description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
    properties:
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      expiresIn:
        description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The Gitkit id token to login the newly sign up user.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#SignupNewUserResponse'
        description: 'The fixed string "identitytoolkit#SignupNewUserResponse".'
        type: string
        required: false
      localId:
        description: The RP local ID of the user.
        type: string
        required: false
      refreshToken:
        description: 'If idToken is STS id token, then this field will be refresh token.'
        type: string
        required: false
  UploadAccountResponse:
    description: Respone of uploading accounts in batch.
    properties:
      error:
        description: The error encountered while processing the account info.
        items:
          properties:
            index:
              description: 'The index of the malformed account, starting from 0.'
              format: int32
              type: integer
              required: false
            message:
              description: Detailed error message for the account info.
              type: string
              required: false
          type: object
        type: array
        required: false
      kind:
        default: 'identitytoolkit#UploadAccountResponse'
        description: 'The fixed string "identitytoolkit#UploadAccountResponse".'
        type: string
        required: false
  UserInfo:
    description: Template for an individual account info.
    properties:
      createdAt:
        description: User creation timestamp.
        format: int64
        type: string
        facets:
          format: string
        required: false
      customAuth:
        description: Whether the user is authenticated by the developer.
        type: boolean
        required: false
      disabled:
        description: Whether the user is disabled.
        type: boolean
        required: false
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: The email of the user.
        type: string
        required: false
      emailVerified:
        description: Whether the email has been verified.
        type: boolean
        required: false
      lastLoginAt:
        description: last login timestamp.
        format: int64
        type: string
        facets:
          format: string
        required: false
      localId:
        description: The local ID of the user.
        type: string
        required: false
      passwordHash:
        description: The user's hashed password.
        format: byte
        type: string
        facets:
          format: string
        required: false
      passwordUpdatedAt:
        description: The timestamp when the password was last updated.
        format: double
        type: number
        required: false
      photoUrl:
        description: The URL of the user profile photo.
        type: string
        required: false
      providerUserInfo:
        description: The IDP of the user.
        items:
          properties:
            displayName:
              description: The user's display name at the IDP.
              type: string
              required: false
            email:
              description: User's email at IDP.
              type: string
              required: false
            federatedId:
              description: User's identifier at IDP.
              type: string
              required: false
            photoUrl:
              description: The user's photo url at the IDP.
              type: string
              required: false
            providerId:
              description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              type: string
              required: false
            rawId:
              description: User's raw identifier directly returned from IDP.
              type: string
              required: false
            screenName:
              description: User's screen name at Twitter or login name at Github.
              type: string
              required: false
          type: object
        type: array
        required: false
      rawPassword:
        description: The user's plain text password.
        type: string
        required: false
      salt:
        description: The user's password salt.
        format: byte
        type: string
        facets:
          format: string
        required: false
      screenName:
        description: User's screen name at Twitter or login name at Github.
        type: string
        required: false
      validSince:
        description: Timestamp in seconds for valid login token.
        format: int64
        type: string
        facets:
          format: string
        required: false
      version:
        description: Version of the user's password.
        format: int32
        type: integer
        required: false
  VerifyAssertionResponse:
    description: Response of verifying the IDP assertion.
    properties:
      action:
        description: The action code.
        type: string
        required: false
      appInstallationUrl:
        description: URL for OTA app installation.
        type: string
        required: false
      appScheme:
        description: The custom scheme used by mobile app.
        type: string
        required: false
      context:
        description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        type: string
        required: false
      dateOfBirth:
        description: The birth date of the IdP account.
        type: string
        required: false
      displayName:
        description: The display name of the user.
        type: string
        required: false
      email:
        description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        type: string
        required: false
      emailRecycled:
        description: It's true if the email is recycled.
        type: boolean
        required: false
      emailVerified:
        description: The value is true if the IDP is also the email provider. It means the user owns the email.
        type: boolean
        required: false
      errorMessage:
        description: Client error code.
        type: string
        required: false
      expiresIn:
        description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      federatedId:
        description: The unique ID identifies the IdP account.
        type: string
        required: false
      firstName:
        description: The first name of the user.
        type: string
        required: false
      fullName:
        description: The full name of the user.
        type: string
        required: false
      idToken:
        description: The ID token.
        type: string
        required: false
      inputEmail:
        description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#VerifyAssertionResponse'
        description: 'The fixed string "identitytoolkit#VerifyAssertionResponse".'
        type: string
        required: false
      language:
        description: The language preference of the user.
        type: string
        required: false
      lastName:
        description: The last name of the user.
        type: string
        required: false
      localId:
        description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        type: string
        required: false
      needConfirmation:
        description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        type: boolean
        required: false
      needEmail:
        description: Whether need client to supply email to complete the federated login flow.
        type: boolean
        required: false
      nickName:
        description: The nick name of the user.
        type: string
        required: false
      oauthAccessToken:
        description: The OAuth2 access token.
        type: string
        required: false
      oauthAuthorizationCode:
        description: The OAuth2 authorization code.
        type: string
        required: false
      oauthExpireIn:
        description: The lifetime in seconds of the OAuth2 access token.
        format: int32
        type: integer
        required: false
      oauthIdToken:
        description: The OIDC id token.
        type: string
        required: false
      oauthRequestToken:
        description: The user approved request token for the OpenID OAuth extension.
        type: string
        required: false
      oauthScope:
        description: The scope for the OpenID OAuth extension.
        type: string
        required: false
      oauthTokenSecret:
        description: The OAuth1 access token secret.
        type: string
        required: false
      originalEmail:
        description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        type: string
        required: false
      photoUrl:
        description: The URI of the public accessible profiel picture.
        type: string
        required: false
      providerId:
        description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
        type: string
        required: false
      rawUserInfo:
        description: Raw IDP-returned user info.
        type: string
        required: false
      refreshToken:
        description: 'If idToken is STS id token, then this field will be refresh token.'
        type: string
        required: false
      screenName:
        description: The screen_name of a Twitter user or the login name at Github.
        type: string
        required: false
      timeZone:
        description: The timezone of the user.
        type: string
        required: false
      verifiedProvider:
        description: 'When action is ''map'', contains the idps which can be used for confirmation.'
        items:
          type: string
        type: array
        required: false
  VerifyCustomTokenResponse:
    description: Response from verifying a custom token
    properties:
      expiresIn:
        description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The GITKit token for authenticated user.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#VerifyCustomTokenResponse'
        description: 'The fixed string "identitytoolkit#VerifyCustomTokenResponse".'
        type: string
        required: false
      refreshToken:
        description: 'If idToken is STS id token, then this field will be refresh token.'
        type: string
        required: false
  VerifyPasswordResponse:
    description: Request of verifying the password.
    properties:
      displayName:
        description: The name of the user.
        type: string
        required: false
      email:
        description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        type: string
        required: false
      expiresIn:
        description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        format: int64
        type: string
        facets:
          format: string
        required: false
      idToken:
        description: The GITKit token for authenticated user.
        type: string
        required: false
      kind:
        default: 'identitytoolkit#VerifyPasswordResponse'
        description: 'The fixed string "identitytoolkit#VerifyPasswordResponse".'
        type: string
        required: false
      localId:
        description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        type: string
        required: false
      oauthAccessToken:
        description: The OAuth2 access token.
        type: string
        required: false
      oauthAuthorizationCode:
        description: The OAuth2 authorization code.
        type: string
        required: false
      oauthExpireIn:
        description: The lifetime in seconds of the OAuth2 access token.
        format: int32
        type: integer
        required: false
      photoUrl:
        description: The URI of the user's photo at IdP
        type: string
        required: false
      refreshToken:
        description: 'If idToken is STS id token, then this field will be refresh token.'
        type: string
        required: false
      registered:
        description: Whether the email is registered.
        type: boolean
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
