#%RAML 1.0
title: Stackdriver Logging
version: v2beta1
baseUri: 'https://logging.googleapis.com/'
protocols:
  - HTTPS
description: Writes log entries and manages your Stackdriver Logging configuration.
(oas-tags-definition):
  - name: projects
  - name: organizations
  - name: entries
  - name: monitoredResourceDescriptors
  - name: billingAccounts
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
  oas-x-hasEquivalentPaths: any
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  (oas-x-origin):
    format: google
    url: 'https://logging.googleapis.com/$discovery/rest?version=v2beta1'
    version: v1
  (oas-x-preferred): false
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): logging
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://cloud.google.com/logging/docs/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/cloud-platform'
        - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - 'https://www.googleapis.com/auth/logging.admin'
        - 'https://www.googleapis.com/auth/logging.read'
        - 'https://www.googleapis.com/auth/logging.write'
    description: Oauth 2.0 authentication
/v2beta1:
  displayName: v2beta1
  '/{parent}':
    displayName: '{parent}'
    /metrics:
      displayName: metrics
      get:
        displayName: logging.projects.metrics.list
        description: Lists logs-based metrics.
        responses:
          '200':
            body:
              application/json:
                type: ListLogMetricsResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: |-
              Optional. The maximum number of results to return from this request.
              Non-positive values are ignored.  The presence of `nextPageToken` in the
              response indicates that more results might be available.
            type: integer
          pageToken:
            description: |-
              Optional. If present, then retrieve the next batch of results from the
              preceding call to this method.  `pageToken` must be the value of
              `nextPageToken` from the previous response.  The values of other method
              parameters should be identical to those in the previous call.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/logging.read'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
      post:
        displayName: logging.projects.metrics.create
        description: Creates a logs-based metric.
        body:
          application/json:
            type: LogMetric
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: LogMetric
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/logging.write'
        (oas-tags):
          - projects
    /sinks:
      displayName: sinks
      post:
        displayName: logging.projects.sinks.create
        description: Creates a sink.
        body:
          application/json:
            type: LogSink
            (oas-body-name): body
        responses:
          '200':
            body:
              application/json:
                type: LogSink
            description: Successful response
        queryParameters:
          uniqueWriterIdentity:
            description: |-
              Optional. Whether the sink will have a dedicated service account returned
              in the sink's writer_identity. Set this field to be true to export
              logs from one project to a different project. This field is ignored for
              non-project sinks (e.g. organization sinks) because those sinks are
              required to have dedicated service accounts.
            type: boolean
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/logging.admin'
        (oas-tags):
          - projects
      is:
        - accessToken
        - prettyPrint
        - key
        - quotaUser
        - pp
        - fields
        - alt
        - xgafv
        - callback
        - oauthToken
        - uploadType
        - bearerToken
        - uploadProtocol
      get:
        displayName: logging.projects.sinks.list
        description: Lists sinks.
        responses:
          '200':
            body:
              application/json:
                type: ListSinksResponse
            description: Successful response
        queryParameters:
          pageSize:
            description: |-
              Optional. The maximum number of results to return from this request.
              Non-positive values are ignored.  The presence of `nextPageToken` in the
              response indicates that more results might be available.
            type: integer
          pageToken:
            description: |-
              Optional. If present, then retrieve the next batch of results from the
              preceding call to this method.  `pageToken` must be the value of
              `nextPageToken` from the previous response.  The values of other method
              parameters should be identical to those in the previous call.
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/logging.read'
        (oas-tags):
          - projects
  '/{sinkName}':
    displayName: '{sinkName}'
    uriParameters:
      sinkName:
        description: |-
          Required. The resource name of the sink to delete, including the parent
          resource and the sink identifier.  Example:
          `"projects/my-project-id/sinks/my-sink-id"`.  It is an error if the sink
          does not exist.
        required: true
        type: string
    put:
      displayName: logging.projects.sinks.update
      description: Updates or creates a sink.
      body:
        application/json:
          type: LogSink
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: LogSink
          description: Successful response
      queryParameters:
        uniqueWriterIdentity:
          description: |-
            Optional. Whether the sink will have a dedicated service account returned
            in the sink's writer_identity. Set this field to be true to export
            logs from one project to a different project. This field is ignored for
            non-project sinks (e.g. organization sinks) because those sinks are
            required to have dedicated service accounts.
          type: boolean
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.admin'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
    get:
      displayName: logging.projects.sinks.get
      description: Gets a sink.
      responses:
        '200':
          body:
            application/json:
              type: LogSink
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.read'
      (oas-tags):
        - projects
    delete:
      displayName: logging.projects.sinks.delete
      description: Deletes a sink.
      responses:
        '200':
          body:
            application/json:
              type: Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.admin'
      (oas-tags):
        - projects
  '/entries:list':
    displayName: 'entries:list'
    post:
      displayName: logging.entries.list
      description: |-
        Lists log entries.  Use this method to retrieve log entries from Cloud
        Logging.  For ways to export log entries, see
        [Exporting Logs](/logging/docs/export).
      body:
        application/json:
          type: ListLogEntriesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: ListLogEntriesResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.read'
      (oas-tags):
        - entries
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  /monitoredResourceDescriptors:
    displayName: monitoredResourceDescriptors
    get:
      displayName: logging.monitoredResourceDescriptors.list
      description: Lists the monitored resource descriptors used by Stackdriver Logging.
      responses:
        '200':
          body:
            application/json:
              type: ListMonitoredResourceDescriptorsResponse
          description: Successful response
      queryParameters:
        pageSize:
          description: |-
            Optional. The maximum number of results to return from this request.
            Non-positive values are ignored.  The presence of `nextPageToken` in the
            response indicates that more results might be available.
          type: integer
        pageToken:
          description: |-
            Optional. If present, then retrieve the next batch of results from the
            preceding call to this method.  `pageToken` must be the value of
            `nextPageToken` from the previous response.  The values of other method
            parameters should be identical to those in the previous call.
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.read'
      (oas-tags):
        - monitoredResourceDescriptors
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/{logName}':
    displayName: '{logName}'
    uriParameters:
      logName:
        description: |-
          Required. The resource name of the log to delete.  Example:
          `"projects/my-project/logs/syslog"`.
        required: true
        type: string
    delete:
      displayName: logging.billingAccounts.logs.delete
      description: |-
        Deletes a log and all its log entries.
        The log will reappear if it receives new entries.
      responses:
        '200':
          body:
            application/json:
              type: Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.admin'
      (oas-tags):
        - billingAccounts
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/entries:write':
    displayName: 'entries:write'
    post:
      displayName: logging.entries.write
      description: |-
        Writes log entries to Stackdriver Logging.  All log entries are
        written by this method.
      body:
        application/json:
          type: WriteLogEntriesRequest
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: WriteLogEntriesResponse
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.write'
      (oas-tags):
        - entries
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
  '/{metricName}':
    displayName: '{metricName}'
    uriParameters:
      metricName:
        description: |-
          The resource name of the metric to delete.
          Example: `"projects/my-project-id/metrics/my-metric-id"`.
        required: true
        type: string
    put:
      displayName: logging.projects.metrics.update
      description: Creates or updates a logs-based metric.
      body:
        application/json:
          type: LogMetric
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: LogMetric
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.write'
      (oas-tags):
        - projects
    is:
      - accessToken
      - prettyPrint
      - key
      - quotaUser
      - pp
      - fields
      - alt
      - xgafv
      - callback
      - oauthToken
      - uploadType
      - bearerToken
      - uploadProtocol
    get:
      displayName: logging.projects.metrics.get
      description: Gets a logs-based metric.
      responses:
        '200':
          body:
            application/json:
              type: LogMetric
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.read'
      (oas-tags):
        - projects
    delete:
      displayName: logging.projects.metrics.delete
      description: Deletes a logs-based metric.
      responses:
        '200':
          body:
            application/json:
              type: Empty
          description: Successful response
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/logging.write'
      (oas-tags):
        - projects
types:
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
  HttpRequest:
    description: |-
      A common proto for logging HTTP requests. Only contains semantics
      defined by the HTTP specification. Product-specific logging
      information MUST be defined in a separate message.
    properties:
      cacheFillBytes:
        description: |-
          The number of HTTP response bytes inserted into cache. Set only when a
          cache fill was attempted.
        format: int64
        type: string
        facets:
          format: string
        required: false
      cacheHit:
        description: |-
          Whether or not an entity was served from cache
          (with or without validation).
        type: boolean
        required: false
      cacheLookup:
        description: Whether or not a cache lookup was attempted.
        type: boolean
        required: false
      cacheValidatedWithOriginServer:
        description: |-
          Whether or not the response was validated with the origin server before
          being served from cache. This field is only meaningful if `cache_hit` is
          True.
        type: boolean
        required: false
      latency:
        description: |-
          The request processing latency on the server, from the time the request was
          received until the response was sent.
        format: google-duration
        type: string
        facets:
          format: string
        required: false
      referer:
        description: |-
          The referer URL of the request, as defined in
          [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
        type: string
        required: false
      remoteIp:
        description: |-
          The IP address (IPv4 or IPv6) of the client that issued the HTTP
          request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
        type: string
        required: false
      requestMethod:
        description: 'The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.'
        type: string
        required: false
      requestSize:
        description: |-
          The size of the HTTP request message in bytes, including the request
          headers and the request body.
        format: int64
        type: string
        facets:
          format: string
        required: false
      requestUrl:
        description: |-
          The scheme (http, https), the host name, the path and the query
          portion of the URL that was requested.
          Example: `"http://example.com/some/info?color=red"`.
        type: string
        required: false
      responseSize:
        description: |-
          The size of the HTTP response message sent back to the client, in bytes,
          including the response headers and the response body.
        format: int64
        type: string
        facets:
          format: string
        required: false
      serverIp:
        description: |-
          The IP address (IPv4 or IPv6) of the origin server that the request was
          sent to.
        type: string
        required: false
      status:
        description: |-
          The response code indicating the status of response.
          Examples: 200, 404.
        format: int32
        type: integer
        required: false
      userAgent:
        description: |-
          The user agent sent by the client. Example:
          `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
        type: string
        required: false
  LabelDescriptor:
    description: A description of a label.
    properties:
      description:
        description: A human-readable description for the label.
        type: string
        required: false
      key:
        description: The label key.
        type: string
        required: false
      valueType:
        description: The type of data that can be assigned to the label.
        enum:
          - STRING
          - BOOL
          - INT64
        type: string
        required: false
  ListLogEntriesRequest:
    description: The parameters to `ListLogEntries`.
    properties:
      filter:
        description: |-
          Optional. A filter that chooses which log entries to return.  See [Advanced
          Logs Filters](/logging/docs/view/advanced_filters).  Only log entries that
          match the filter are returned.  An empty filter matches all log entries.
          The maximum length of the filter is 20000 characters.
        type: string
        required: false
      orderBy:
        description: |-
          Optional. How the results should be sorted.  Presently, the only permitted
          values are `"timestamp asc"` (default) and `"timestamp desc"`. The first
          option returns entries in order of increasing values of
          `LogEntry.timestamp` (oldest first), and the second option returns entries
          in order of decreasing timestamps (newest first).  Entries with equal
          timestamps are returned in order of `LogEntry.insertId`.
        type: string
        required: false
      pageSize:
        description: |-
          Optional. The maximum number of results to return from this request.
          Non-positive values are ignored.  The presence of `nextPageToken` in the
          response indicates that more results might be available.
        format: int32
        type: integer
        required: false
      pageToken:
        description: |-
          Optional. If present, then retrieve the next batch of results from the
          preceding call to this method.  `pageToken` must be the value of
          `nextPageToken` from the previous response.  The values of other method
          parameters should be identical to those in the previous call.
        type: string
        required: false
      projectIds:
        description: |-
          Deprecated. One or more project identifiers or project numbers from which
          to retrieve log entries.  Examples: `"my-project-1A"`, `"1234567890"`. If
          present, these project identifiers are converted to resource format and
          added to the list of resources in `resourceNames`. Callers should use
          `resourceNames` rather than this parameter.
        items:
          type: string
        type: array
        required: false
      resourceNames:
        description: |-
          Required. One or more cloud resources from which to retrieve log entries.
          Example: `"projects/my-project-1A"`, `"projects/1234567890"`.  Projects
          listed in `projectIds` are added to this list.
        items:
          type: string
        type: array
        required: false
  ListLogEntriesResponse:
    description: Result returned from `ListLogEntries`.
    properties:
      entries:
        description: A list of log entries.
        items:
          type: LogEntry
        type: array
        required: false
      nextPageToken:
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
        type: string
        required: false
  ListLogMetricsResponse:
    description: Result returned from ListLogMetrics.
    properties:
      metrics:
        description: A list of logs-based metrics.
        items:
          type: LogMetric
        type: array
        required: false
      nextPageToken:
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
        type: string
        required: false
  ListMonitoredResourceDescriptorsResponse:
    description: Result returned from ListMonitoredResourceDescriptors.
    properties:
      nextPageToken:
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
        type: string
        required: false
      resourceDescriptors:
        description: A list of resource descriptors.
        items:
          type: MonitoredResourceDescriptor
        type: array
        required: false
  ListSinksResponse:
    description: Result returned from `ListSinks`.
    properties:
      nextPageToken:
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call the same
          method again using the value of `nextPageToken` as `pageToken`.
        type: string
        required: false
      sinks:
        description: A list of sinks.
        items:
          type: LogSink
        type: array
        required: false
  LogEntry:
    description: An individual entry in a log.
    properties:
      httpRequest:
        description: |-
          Optional. Information about the HTTP request associated with this
          log entry, if applicable.
        type: HttpRequest
        required: false
      insertId:
        description: |-
          Optional. A unique ID for the log entry. If you provide this
          field, the logging service considers other log entries in the
          same project with the same ID as duplicates which can be removed.  If
          omitted, Stackdriver Logging will generate a unique ID for this
          log entry.
        type: string
        required: false
      jsonPayload:
        additionalProperties:
          description: Properties of the object.
        description: |-
          The log entry payload, represented as a structure that
          is expressed as a JSON object.
        type: object
        required: false
      labels:
        additionalProperties:
          type: string
        description: |-
          Optional. A set of user-defined (key, value) data that provides additional
          information about the log entry.
        type: object
        required: false
      logName:
        description: |-
          Required. The resource name of the log to which this log entry
          belongs. The format of the name is
          `"projects/<project-id>/logs/<log-id>"`.  Examples:
          `"projects/my-projectid/logs/syslog"`,
          `"projects/my-projectid/logs/library.googleapis.com%2Fbook_log"`.

          The log ID part of resource name must be less than 512 characters
          long and can only include the following characters: upper and
          lower case alphanumeric characters: [A-Za-z0-9]; and punctuation
          characters: forward-slash, underscore, hyphen, and period.
          Forward-slash (`/`) characters in the log ID must be URL-encoded.
        type: string
        required: false
      operation:
        description: |-
          Optional. Information about an operation associated with the log entry, if
          applicable.
        type: LogEntryOperation
        required: false
      protoPayload:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The log entry payload, represented as a protocol buffer.  Some
          Google Cloud Platform services use this field for their log
          entry payloads.
        type: object
        required: false
      resource:
        description: |-
          Required. The monitored resource associated with this log entry.
          Example: a log entry that reports a database error would be
          associated with the monitored resource designating the particular
          database that reported the error.
        type: MonitoredResource
        required: false
      severity:
        description: |-
          Optional. The severity of the log entry. The default value is
          `LogSeverity.DEFAULT`.
        enum:
          - DEFAULT
          - DEBUG
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
        type: string
        required: false
      textPayload:
        description: 'The log entry payload, represented as a Unicode string (UTF-8).'
        type: string
        required: false
      timestamp:
        description: |-
          Optional. The time the event described by the log entry occurred.  If
          omitted, Stackdriver Logging will use the time the log entry is received.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
  LogEntryOperation:
    description: |-
      Additional information about a potentially long-running operation with which
      a log entry is associated.
    properties:
      first:
        description: Optional. Set this to True if this is the first log entry in the operation.
        type: boolean
        required: false
      id:
        description: |-
          Optional. An arbitrary operation identifier. Log entries with the
          same identifier are assumed to be part of the same operation.
        type: string
        required: false
      last:
        description: Optional. Set this to True if this is the last log entry in the operation.
        type: boolean
        required: false
      producer:
        description: |-
          Optional. An arbitrary producer identifier. The combination of
          `id` and `producer` must be globally unique.  Examples for `producer`:
          `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
        type: string
        required: false
  LogLine:
    description: Application log line emitted while processing a request.
    properties:
      logMessage:
        description: App-provided log message.
        type: string
        required: false
      severity:
        description: Severity of this log entry.
        enum:
          - DEFAULT
          - DEBUG
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
        type: string
        required: false
      sourceLocation:
        description: Where in the source code this log message was written.
        type: SourceLocation
        required: false
      time:
        description: Approximate time when this log entry was made.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
  LogMetric:
    description: |-
      Describes a logs-based metric.  The value of the metric is the
      number of log entries that match a logs filter.
    properties:
      description:
        description: 'Optional. A description of this metric, which is used in documentation.'
        type: string
        required: false
      filter:
        description: |-
          Required. An [advanced logs filter](/logging/docs/view/advanced_filters).
          Example: `"resource.type=gae_app AND severity>=ERROR"`.
          The maximum length of the filter is 20000 characters.
        type: string
        required: false
      name:
        description: |-
          Required. The client-assigned metric identifier. Example:
          `"severe_errors"`.  Metric identifiers are limited to 100
          characters and can include only the following characters: `A-Z`,
          `a-z`, `0-9`, and the special characters `_-.,+!*',()%/`.  The
          forward-slash character (`/`) denotes a hierarchy of name pieces,
          and it cannot be the first character of the name.  The '%' character
          is used to URL encode unsafe and reserved characters and must be
          followed by two hexadecimal digits according to RFC 1738.
        type: string
        required: false
      version:
        description: |-
          Output only. The API version that created or updated this metric.
          The version also dictates the syntax of the filter expression. When a value
          for this field is missing, the default value of V2 should be assumed.
        enum:
          - V2
          - V1
        type: string
        required: false
  LogSink:
    description: |-
      Describes a sink used to export log entries outside of Stackdriver Logging.
      A logs filter controls which log entries are exported.  Sinks can have a
      start time and an end time; these can be used to place log entries from an
      exact time range into a particular destination.  If both `start_time` and
      `end_time` are present, then `start_time` must be less than `end_time`.
    properties:
      destination:
        description: |-
          Required. The export destination. See
          [Exporting Logs With Sinks](/logging/docs/api/tasks/exporting-logs).
          Examples:

              "storage.googleapis.com/my-gcs-bucket"
              "bigquery.googleapis.com/projects/my-project-id/datasets/my-dataset"
              "pubsub.googleapis.com/projects/my-project/topics/my-topic"
        type: string
        required: false
      endTime:
        description: |-
          Optional. Time at which this sink will stop exporting log entries.  If this
          value is present, then log entries are exported only if `entry.timestamp` <
          `end_time`.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      filter:
        description: |-
          Optional. An [advanced logs filter](/logging/docs/view/advanced_filters).
          Only log entries matching the filter are exported. The filter
          must be consistent with the log entry format specified by the
          `outputVersionFormat` parameter, regardless of the format of the
          log entry that was originally written to Stackdriver Logging.
          Example filter (V2 format):

              logName=projects/my-projectid/logs/syslog AND severity>=ERROR
          The maximum length of the filter is 20000 characters.
        type: string
        required: false
      name:
        description: |-
          Required. The client-assigned sink identifier, unique within the
          project. Example: `"my-syslog-errors-to-pubsub"`.  Sink identifiers are
          limited to 1000 characters and can include only the following characters:
          `A-Z`, `a-z`, `0-9`, and the special characters `_-.`.  The maximum length
          of the name is 100 characters.
        type: string
        required: false
      outputVersionFormat:
        description: |-
          Optional. The log entry version to use for this sink's exported log
          entries.  This version does not have to correspond to the version of the
          log entry that was written to Stackdriver Logging. If omitted, the
          v2 format is used.
        enum:
          - VERSION_FORMAT_UNSPECIFIED
          - V2
          - V1
        type: string
        required: false
      startTime:
        description: |-
          Optional. The time at which this sink will begin exporting log entries.  If
          this value is present, then log entries are exported only if `start_time`
          <=`entry.timestamp`.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      writerIdentity:
        description: |-
          Output only. An IAM identity&mdash;a service account or group&mdash;that
          will write exported log entries to the destination on behalf of Stackdriver
          Logging. You must grant this identity write-access to the destination.
          Consult the destination service's documentation to determine the exact role
          that must be granted.
        type: string
        required: false
  MonitoredResource:
    description: |-
      An object representing a resource that can be used for monitoring, logging,
      billing, or other purposes. Examples include virtual machine instances,
      databases, and storage devices such as disks. The `type` field identifies a
      MonitoredResourceDescriptor object that describes the resource's
      schema. Information in the `labels` field identifies the actual resource and
      its attributes according to the schema. For example, a particular Compute
      Engine VM instance could be represented by the following object, because the
      MonitoredResourceDescriptor for `"gce_instance"` has labels
      `"instance_id"` and `"zone"`:

          { "type": "gce_instance",
            "labels": { "instance_id": "12345678901234",
                        "zone": "us-central1-a" }}
    properties:
      labels:
        additionalProperties:
          type: string
        description: |-
          Required. Values for all of the labels listed in the associated monitored
          resource descriptor. For example, Cloud SQL databases use the labels
          `"database_id"` and `"zone"`.
        type: object
        required: false
      type:
        description: |-
          Required. The monitored resource type. This field must match
          the `type` field of a MonitoredResourceDescriptor object. For
          example, the type of a Cloud SQL database is `"cloudsql_database"`.
        type: string
        required: false
  MonitoredResourceDescriptor:
    description: |-
      An object that describes the schema of a MonitoredResource object using a
      type name and a set of labels.  For example, the monitored resource
      descriptor for Google Compute Engine VM instances has a type of
      `"gce_instance"` and specifies the use of the labels `"instance_id"` and
      `"zone"` to identify particular VM instances.

      Different APIs can support different monitored resource types. APIs generally
      provide a `list` method that returns the monitored resource descriptors used
      by the API.
    properties:
      description:
        description: |-
          Optional. A detailed description of the monitored resource type that might
          be used in documentation.
        type: string
        required: false
      displayName:
        description: |-
          Optional. A concise name for the monitored resource type that might be
          displayed in user interfaces. It should be a Title Cased Noun Phrase,
          without any article or other determiners. For example,
          `"Google Cloud SQL Database"`.
        type: string
        required: false
      labels:
        description: |-
          Required. A set of labels used to describe instances of this monitored
          resource type. For example, an individual Google Cloud SQL database is
          identified by values for the labels `"database_id"` and `"zone"`.
        items:
          type: LabelDescriptor
        type: array
        required: false
      name:
        description: |-
          Optional. The resource name of the monitored resource descriptor:
          `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where
          {type} is the value of the `type` field in this object and
          {project_id} is a project ID that provides API-specific context for
          accessing the type.  APIs that do not use project information can use the
          resource name format `"monitoredResourceDescriptors/{type}"`.
        type: string
        required: false
      type:
        description: |-
          Required. The monitored resource type. For example, the type
          `"cloudsql_database"` represents databases in Google Cloud SQL.
          The maximum length of this value is 256 characters.
        type: string
        required: false
  RequestLog:
    description: |-
      Complete log information about a single HTTP request to an App Engine
      application.
    properties:
      appEngineRelease:
        description: App Engine release version.
        type: string
        required: false
      appId:
        description: Application that handled this request.
        type: string
        required: false
      cost:
        description: An indication of the relative cost of serving this request.
        format: double
        type: number
        required: false
      endTime:
        description: Time when the request finished.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      finished:
        description: Whether this request is finished or active.
        type: boolean
        required: false
      first:
        description: |-
          Whether this is the first `RequestLog` entry for this request.  If an
          active request has several `RequestLog` entries written to Stackdriver
          Logging, then this field will be set for one of them.
        type: boolean
        required: false
      host:
        description: Internet host and port number of the resource being requested.
        type: string
        required: false
      httpVersion:
        description: 'HTTP version of request. Example: `"HTTP/1.1"`.'
        type: string
        required: false
      instanceId:
        description: An identifier for the instance that handled the request.
        type: string
        required: false
      instanceIndex:
        description: |-
          If the instance processing this request belongs to a manually scaled
          module, then this is the 0-based index of the instance. Otherwise, this
          value is -1.
        format: int32
        type: integer
        required: false
      ip:
        description: Origin IP address.
        type: string
        required: false
      latency:
        description: Latency of the request.
        format: google-duration
        type: string
        facets:
          format: string
        required: false
      line:
        description: A list of log lines emitted by the application while serving this request.
        items:
          type: LogLine
        type: array
        required: false
      megaCycles:
        description: Number of CPU megacycles used to process request.
        format: int64
        type: string
        facets:
          format: string
        required: false
      method:
        description: 'Request method. Example: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`, `"DELETE"`.'
        type: string
        required: false
      moduleId:
        description: Module of the application that handled this request.
        type: string
        required: false
      nickname:
        description: |-
          The logged-in user who made the request.

          Most likely, this is the part of the user's email before the `@` sign.  The
          field value is the same for different requests from the same user, but
          different users can have similar names.  This information is also
          available to the application via the App Engine Users API.

          This field will be populated starting with App Engine 1.9.21.
        type: string
        required: false
      pendingTime:
        description: Time this request spent in the pending request queue.
        format: google-duration
        type: string
        facets:
          format: string
        required: false
      referrer:
        description: Referrer URL of request.
        type: string
        required: false
      requestId:
        description: |-
          Globally unique identifier for a request, which is based on the request
          start time.  Request IDs for requests which started later will compare
          greater as strings than those for requests which started earlier.
        type: string
        required: false
      resource:
        description: |-
          Contains the path and query portion of the URL that was requested. For
          example, if the URL was "http://example.com/app?name=val", the resource
          would be "/app?name=val".  The fragment identifier, which is identified by
          the `#` character, is not included.
        type: string
        required: false
      responseSize:
        description: Size in bytes sent back to client by request.
        format: int64
        type: string
        facets:
          format: string
        required: false
      sourceReference:
        description: |-
          Source code for the application that handled this request. There can be
          more than one source reference per deployed application if source code is
          distributed among multiple repositories.
        items:
          type: SourceReference
        type: array
        required: false
      startTime:
        description: Time when the request started.
        format: google-datetime
        type: string
        facets:
          format: string
        required: false
      status:
        description: 'HTTP response status code. Example: 200, 404.'
        format: int32
        type: integer
        required: false
      taskName:
        description: 'Task name of the request, in the case of an offline request.'
        type: string
        required: false
      taskQueueName:
        description: 'Queue name of the request, in the case of an offline request.'
        type: string
        required: false
      traceId:
        description: Stackdriver Trace identifier for this request.
        type: string
        required: false
      urlMapEntry:
        description: File or class that handled the request.
        type: string
        required: false
      userAgent:
        description: User agent that made the request.
        type: string
        required: false
      versionId:
        description: Version of the application that handled this request.
        type: string
        required: false
      wasLoadingRequest:
        description: Whether this was a loading request for the instance.
        type: boolean
        required: false
  SourceLocation:
    description: Specifies a location in a source code file.
    properties:
      file:
        description: |-
          Source file name. Depending on the runtime environment, this might be a
          simple name or a fully-qualified name.
        type: string
        required: false
      functionName:
        description: |-
          Human-readable name of the function or method being invoked, with optional
          context such as the class or package name. This information is used in
          contexts such as the logs viewer, where a file and line number are less
          meaningful. The format can vary by language. For example:
          `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
          (Python).
        type: string
        required: false
      line:
        description: Line within the source file.
        format: int64
        type: string
        facets:
          format: string
        required: false
  SourceReference:
    description: |-
      A reference to a particular snapshot of the source tree used to build and
      deploy an application.
    properties:
      repository:
        description: |-
          Optional. A URI string identifying the repository.
          Example: "https://github.com/GoogleCloudPlatform/kubernetes.git"
        type: string
        required: false
      revisionId:
        description: |-
          The canonical and persistent identifier of the deployed revision.
          Example (git): "0035781c50ec7aa23385dc841529ce8a4b70db1b"
        type: string
        required: false
  WriteLogEntriesRequest:
    description: The parameters to WriteLogEntries.
    properties:
      entries:
        description: |-
          Required. The log entries to write. Values supplied for the fields
          `log_name`, `resource`, and `labels` in this `entries.write` request are
          added to those log entries that do not provide their own values for the
          fields.

          To improve throughput and to avoid exceeding the
          [quota limit](/logging/quota-policy) for calls to `entries.write`,
          you should write multiple log entries at once rather than
          calling this method for each individual log entry.
        items:
          type: LogEntry
        type: array
        required: false
      labels:
        additionalProperties:
          type: string
        description: |-
          Optional. Default labels that are added to the `labels` field of all log
          entries in `entries`. If a log entry already has a label with the same key
          as a label in this parameter, then the log entry's label is not changed.
          See LogEntry.
        type: object
        required: false
      logName:
        description: |-
          Optional. A default log resource name that is assigned to all log entries
          in `entries` that do not specify a value for `log_name`.  Example:
          `"projects/my-project/logs/syslog"`.  See
          LogEntry.
        type: string
        required: false
      partialSuccess:
        description: |-
          Optional. Whether valid entries should be written even if some other
          entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any
          entry is not written, the response status will be the error associated
          with one of the failed entries and include error details in the form of
          WriteLogEntriesPartialErrors.
        type: boolean
        required: false
      resource:
        description: |-
          Optional. A default monitored resource object that is assigned to all log
          entries in `entries` that do not specify a value for `resource`. Example:

              { "type": "gce_instance",
                "labels": {
                  "zone": "us-central1-a", "instance_id": "00000000000000000000" }}

          See LogEntry.
        type: MonitoredResource
        required: false
  WriteLogEntriesResponse:
    description: |-
      Result returned from WriteLogEntries.
      empty
    properties: {}
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
        enum:
          - '1'
          - '2'
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
        enum:
          - json
          - media
          - proto
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
(oas-x-hasEquivalentPaths): true
