#%RAML 1.0
title: Instagram
version: 1.0.0
baseUri: 'https://api.instagram.com/v1'
mediaType: application/json
protocols:
  - HTTPS
description: |
  Description of Instagram RESTful API.

  Current limitations:
    * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
    for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.
    * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)
    that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and
    started in [Sandbox Mode](http://instagram.com/developer/sandbox/).
    * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.

  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses
  containing media objects no longer return the `data` field in `comments` and `likes` nodes.

  Last update: 2015-11-28
(oas-tags-definition):
  - description: Get information about users
    name: users
  - description: Relationships to other users outgoing and incoming
    name: relationships
  - description: Get information about media
    name: media
  - description: Manage comments
    name: comments
  - description: Manage likes
    name: likes
  - description: Get information about tags
    name: tags
  - description: Get information about locations
    name: locations
  - description: Get geographies
    name: geographies
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-unofficialSpec: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-deprecated:
    type: boolean
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
(oas-info):
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_instagramstatic-a.akamaihd.net_bluebar_8a8f88c_images_press_brand-thumb-icon.jpg'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/darklynx/swagger-api-collection/master/api/yaml/instagram.yaml'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): instagram.com
  (oas-x-unofficialSpec): true
  contact:
    name: Instagram
    url: 'https://instagram.com/developer/support'
  termsOfService: 'https://instagram.com/about/legal/terms/api/'
(oas-externalDocs):
  description: Instagram Developer Documentation
  url: 'https://instagram.com/developer'
securitySchemes:
  instagram_auth:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://instagram.com/oauth/authorize/'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - basic
        - comments
        - follower_list
        - likes
        - public_content
        - relationships
  api_key:
    type: Pass Through
    describedBy:
      queryParameters:
        access_token:
          type: string
/media:
  displayName: media
  '/{media-id}':
    displayName: '{media-id}'
    /likes:
      displayName: likes
      post:
        displayName: POST_media-media-id-likes
        description: Set a like on this media by the currently authenticated user.
        (oas-summary): Set a like on this media by the current user.
        responses:
          '200':
            body:
              application/json:
                type: StatusResponse
            description: Result of setting a like.
        securedBy:
          - instagram_auth:
              scopes:
                - likes
          - api_key
        (oas-tags):
          - likes
      get:
        displayName: GET_media-media-id-likes
        description: Get a list of users who have liked this media.
        (oas-summary): Get a list of users who have liked this media.
        responses:
          '200':
            body:
              application/json:
                type: UsersInfoResponse
            description: List of users who liked the media resource.
        securedBy:
          - instagram_auth:
              scopes:
                - basic
                - public_content
          - api_key
        (oas-tags):
          - likes
      delete:
        displayName: DELETE_media-media-id-likes
        description: Remove a like on this media by the currently authenticated user.
        (oas-summary): Remove a like on this media by the current user.
        responses:
          '200':
            body:
              application/json:
                type: StatusResponse
            description: Result of removing a like.
        securedBy:
          - instagram_auth:
              scopes:
                - likes
          - api_key
        (oas-tags):
          - likes
    /comments:
      displayName: comments
      get:
        displayName: GET_media-media-id-comments
        description: Get a list of recent comments on a media object.
        (oas-summary): Get a list of recent comments on a media object.
        responses:
          '200':
            body:
              application/json:
                type: CommentsResponse
            description: List of comments of the media resource.
        securedBy:
          - instagram_auth:
              scopes:
                - basic
                - public_content
          - api_key
        (oas-tags):
          - comments
      '/{comment-id}':
        displayName: '{comment-id}'
        uriParameters:
          comment-id:
            description: The ID of the comment entry.
            required: true
            type: string
        delete:
          displayName: DELETE_media-media-id-comments-comment-id
          description: |
            Remove a comment either on the authenticated user's media object or authored by the authenticated user.
          (oas-summary): Remove a comment.
          responses:
            '200':
              body:
                application/json:
                  type: StatusResponse
              description: Result of deleting a comment.
          securedBy:
            - instagram_auth:
                scopes:
                  - comments
            - api_key
          (oas-tags):
            - comments
      post:
        displayName: POST_media-media-id-comments
        description: |
          Create a comment on a media object with the following rules:

            * The total length of the comment cannot exceed 300 characters.
            * The comment cannot contain more than 4 hashtags.
            * The comment cannot contain more than 1 URL.
            * The comment cannot consist of all capital letters.
        (oas-summary): Create a comment on a media object.
        responses:
          '200':
            body:
              application/json:
                type: StatusResponse
            description: Result of posting a comment.
        queryParameters:
          text:
            description: Text to post as a comment on the media object as specified in `media-id`.
            required: true
            type: string
        securedBy:
          - instagram_auth:
              scopes:
                - comments
          - api_key
        (oas-tags):
          - comments
    uriParameters:
      media-id:
        description: The ID of the media resource.
        required: true
        type: string
    get:
      displayName: GET_media-media-id
      description: |
        Get information about a media object. The returned type key will allow you to differentiate between image and
        video media.

        **Note:** if you authenticate with an OAuth Token, you will receive the user_has_liked key which quickly tells
        you whether the current user has liked this media item.
      (oas-summary): Get information about a media object.
      responses:
        '200':
          body:
            application/json:
              type: MediaEntryResponse
          description: Media resource information.
      securedBy:
        - instagram_auth:
            scopes:
              - basic
              - public_content
        - api_key
      (oas-tags):
        - media
  /popular:
    displayName: popular
    get:
      displayName: GET_media-popular
      description: |
        Get a list of what media is most popular at the moment. Can return mix of `image` and `video` types.

        **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
      (oas-summary): Get a list of currently popular media.
      responses:
        '200':
          body:
            application/json:
              type: MediaSearchResponse
          description: Found media resources (without likes information).
      securedBy:
        - instagram_auth:
            scopes:
              - basic
        - api_key
      (oas-tags):
        - media
      (oas-deprecated): true
  /shortcode:
    displayName: shortcode
    '/{shortcode}':
      displayName: '{shortcode}'
      uriParameters:
        shortcode:
          description: The short code of the media resource.
          required: true
          type: string
      get:
        displayName: GET_media-shortcode-shortcode
        description: |
          This endpoint returns the same response as `GET /media/{media-id}`.

          A media object's shortcode can be found in its shortlink URL. An example shortlink is
          `http://instagram.com/p/D/`, its corresponding shortcode is `D`.
        (oas-summary): Get information about a media object.
        responses:
          '200':
            body:
              application/json:
                type: MediaEntryResponse
            description: Media resource information.
        securedBy:
          - instagram_auth:
              scopes:
                - basic
                - public_content
          - api_key
        (oas-tags):
          - media
  /search:
    displayName: search
    get:
      displayName: GET_media-search
      description: |
        Search for media in a given area. The default time span is set to 5 days. The time span must not exceed 7 days.
        Defaults time stamps cover the last 5 days. Can return mix of `image` and `video` types.
      (oas-summary): Search for media in a given area.
      responses:
        '200':
          body:
            application/json:
              type: MediaSearchResponse
          description: Found media resources (without likes information) in a given area.
      queryParameters:
        lat:
          description: 'Latitude of the center search coordinate. If used, `lng` is required.'
          format: double
          required: true
          type: number
        lng:
          description: 'Longitude of the center search coordinate. If used, `lat` is required.'
          format: double
          required: true
          type: number
        min_timestamp:
          description: A unix timestamp. All media returned will be taken later than this timestamp.
          format: int64
          required: false
          type: integer
        max_timestamp:
          description: A unix timestamp. All media returned will be taken earlier than this timestamp.
          format: int64
          required: false
          type: integer
        distance:
          description: 'Default is 1km (distance=1000), max distance is 5km.'
          format: int32
          required: false
          type: integer
      securedBy:
        - instagram_auth:
            scopes:
              - public_content
        - api_key
      (oas-tags):
        - media
/users:
  displayName: users
  '/{user-id}':
    displayName: '{user-id}'
    /relationship:
      displayName: relationship
      post:
        displayName: POST_users-user-id-relationship
        description: Modify the relationship between the current user and the target user.
        (oas-summary): Modify the relationship between the current user and the target user.
        responses:
          '200':
            body:
              application/json:
                type: RelationshipPostResponse
            description: Relationship information.
        queryParameters:
          action:
            description: Type of action to apply for relationship with the user.
            enum:
              - follow
              - unfollow
              - block
              - unblock
              - approve
              - ignore
            required: true
            type: string
        securedBy:
          - instagram_auth:
              scopes:
                - relationships
          - api_key
        (oas-tags):
          - relationships
      get:
        displayName: GET_users-user-id-relationship
        description: Get information about a relationship to another user.
        (oas-summary): Get information about a relationship to another user.
        responses:
          '200':
            body:
              application/json:
                type: RelationshipResponse
            description: Relationship information.
        securedBy:
          - instagram_auth:
              scopes:
                - follower_list
          - api_key
        (oas-tags):
          - relationships
    uriParameters:
      user-id:
        description: 'The ID of a user to get information about, or **self** to retrieve information about authenticated user.'
        required: true
        type: string
    get:
      displayName: GET_users-user-id
      description: |
        Get basic information about a user. To get information about the owner of the access token, you can use
        **self** instead of the `user-id`.

        Security scope `public_content` is required to read information about other users.
      (oas-summary): Get basic information about a user.
      responses:
        '200':
          body:
            application/json:
              type: UserResponse
          description: User basic information.
        '404':
          description: 'Not Found, user with such ID does not exist.'
      securedBy:
        - instagram_auth:
            scopes:
              - basic
              - public_content
        - api_key
      (oas-tags):
        - users
    /media:
      displayName: media
      /recent:
        displayName: recent
        get:
          displayName: GET_users-user-id-media-recent
          description: |
            Get the most recent media published by a user. To get the most recent media published by the owner of the
            access token, you can use **self** instead of the `user-id`.

            Security scope `public_content` is required to read information about other users.
          (oas-summary): Get the most recent media published by a user.
          responses:
            '200':
              body:
                application/json:
                  type: MediaListResponse
              description: Users media entries.
          queryParameters:
            count:
              description: Count of media to return.
              required: false
              type: integer
            max_timestamp:
              description: Return media before this UNIX timestamp.
              format: int64
              required: false
              type: integer
            min_timestamp:
              description: Return media after this UNIX timestamp.
              format: int64
              required: false
              type: integer
            min_id:
              description: Return media later than this `min_id`.
              required: false
              type: string
            max_id:
              description: Return media earlier than this `max_id`.
              required: false
              type: string
          securedBy:
            - instagram_auth:
                scopes:
                  - basic
                  - public_content
            - api_key
          (oas-tags):
            - users
    /follows:
      displayName: follows
      get:
        displayName: GET_users-user-id-follows
        description: |
          Get the list of users this user follows. To get follows of the owner of the access token, you can use **self**
          instead of the `user-id`.
        (oas-summary): Get the list of users this user follows.
        responses:
          '200':
            body:
              application/json:
                type: UsersPagingResponse
            description: List of users this user follows.
        securedBy:
          - instagram_auth:
              scopes:
                - follower_list
          - api_key
        (oas-tags):
          - relationships
    /followed-by:
      displayName: followed-by
      get:
        displayName: GET_users-user-id-followed-by
        description: |
          Get the list of users this user is followed by. To get users followed by the owner of the access token, you
          can use **self** instead of the `user-id`.
        (oas-summary): Get the list of users this user is followed by.
        responses:
          '200':
            body:
              application/json:
                type: UsersPagingResponse
            description: List of users this user is followed by.
        securedBy:
          - instagram_auth:
              scopes:
                - follower_list
          - api_key
        (oas-tags):
          - relationships
  /search:
    displayName: search
    get:
      displayName: GET_users-search
      description: Search for a user by name.
      (oas-summary): Search for a user by name.
      responses:
        '200':
          body:
            application/json:
              type: UsersInfoResponse
          description: List of found users.
      queryParameters:
        q:
          description: A query string.
          required: true
          type: string
        count:
          description: Number of users to return.
          required: false
          type: integer
      securedBy:
        - instagram_auth:
            scopes:
              - basic
        - api_key
      (oas-tags):
        - users
  /self:
    displayName: self
    /feed:
      displayName: feed
      get:
        displayName: GET_users-self-feed
        description: |
          See the authenticated user's feed.

          **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
        (oas-summary): See the authenticated user's feed.
        responses:
          '200':
            body:
              application/json:
                type: MediaListResponse
            description: Users feed entries.
        queryParameters:
          count:
            description: Count of media to return.
            required: false
            type: integer
          min_id:
            description: Return media later than this `min_id`.
            required: false
            type: string
          max_id:
            description: Return media earlier than this `max_id`.
            required: false
            type: string
        securedBy:
          - instagram_auth:
              scopes:
                - basic
          - api_key
        (oas-tags):
          - users
        (oas-deprecated): true
    /media:
      displayName: media
      /liked:
        displayName: liked
        get:
          displayName: GET_users-self-media-liked
          description: |
            See the list of media liked by the authenticated user. Private media is returned as long as the authenticated
            user has permission to view that media. Liked media lists are only available for the currently authenticated
            user.
          (oas-summary): See the list of media liked by the authenticated user.
          responses:
            '200':
              body:
                application/json:
                  type: MediaListResponse
              description: Users media entries.
          queryParameters:
            count:
              description: Count of media to return.
              required: false
              type: integer
            max_like_id:
              description: Return media liked before this id.
              required: false
              type: string
          securedBy:
            - instagram_auth:
                scopes:
                  - basic
            - api_key
          (oas-tags):
            - users
    /requested-by:
      displayName: requested-by
      get:
        displayName: GET_users-self-requested-by
        description: List the users who have requested this user's permission to follow.
        (oas-summary): List the users who have requested this user's permission to follow.
        responses:
          '200':
            body:
              application/json:
                type: UsersInfoResponse
            description: List of users who have requested this user's permission to follow.
        securedBy:
          - instagram_auth:
              scopes:
                - follower_list
          - api_key
        (oas-tags):
          - relationships
/tags:
  displayName: tags
  /search:
    displayName: search
    get:
      displayName: GET_tags-search
      description: Search for tags by name.
      (oas-summary): Search for tags by name.
      responses:
        '200':
          body:
            application/json:
              type: TagSearchResponse
          description: List of found tags and their statistics.
      queryParameters:
        q:
          description: 'A valid tag name without a leading \#. (eg. snowy, nofilter)'
          required: true
          type: string
      securedBy:
        - instagram_auth:
            scopes:
              - public_content
        - api_key
      (oas-tags):
        - tags
  '/{tag-name}':
    displayName: '{tag-name}'
    uriParameters:
      tag-name:
        description: The tag name.
        required: true
        type: string
    get:
      displayName: GET_tags-tag-name
      description: Get information about a tag object.
      (oas-summary): Get information about a tag object.
      responses:
        '200':
          body:
            application/json:
              type: TagInfoResponse
          description: Tag information response.
      securedBy:
        - instagram_auth:
            scopes:
              - public_content
        - api_key
      (oas-tags):
        - tags
    /media:
      displayName: media
      /recent:
        displayName: recent
        get:
          displayName: GET_tags-tag-name-media-recent
          description: |
            Get a list of recently tagged media. Use the `max_tag_id` and `min_tag_id` parameters in the pagination
            response to paginate through these objects.
          (oas-summary): Get a list of recently tagged media.
          responses:
            '200':
              body:
                application/json:
                  type: TagMediaListResponse
              description: List of media entries with this tag.
          queryParameters:
            count:
              description: Count of tagged media to return.
              required: false
              type: integer
            min_tag_id:
              description: Return media before this `min_tag_id`.
              required: false
              type: string
            max_tag_id:
              description: Return media after this `max_tag_id`.
              required: false
              type: string
          securedBy:
            - instagram_auth:
                scopes:
                  - public_content
            - api_key
          (oas-tags):
            - tags
/geographies:
  displayName: geographies
  '/{geo-id}':
    displayName: '{geo-id}'
    /media:
      displayName: media
      /recent:
        displayName: recent
        get:
          displayName: GET_geographies-geo-id-media-recent
          description: |
            Get recent media from a geography subscription that you created.

            **Note:** You can only access Geographies that were explicitly created by your OAuth client. Check the
            Geography Subscriptions section of the [real-time updates page](https://instagram.com/developer/realtime/).
            When you create a subscription to some geography that you define, you will be returned a unique `geo-id` that
            can be used in this query. To backfill photos from the location covered by this geography, use the
            [media search endpoint](https://instagram.com/developer/endpoints/media/).

            **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
          (oas-summary): Get recent media from a custom geo-id.
          responses:
            '200':
              body:
                application/json:
                  type: MediaListResponse
              description: List of recent media entries from a geography subscription.
          queryParameters:
            count:
              description: Max number of media to return.
              format: int32
              required: false
              type: integer
            min_id:
              description: Return media before this `min_id`.
              required: false
              type: string
          securedBy:
            - instagram_auth:
                scopes:
                  - basic
            - api_key
          (oas-tags):
            - geographies
          (oas-deprecated): true
/locations:
  displayName: locations
  '/{location-id}':
    displayName: '{location-id}'
    uriParameters:
      location-id:
        description: The location ID.
        required: true
        type: string
    get:
      displayName: GET_locations-location-id
      description: Get information about a location.
      (oas-summary): Get information about a location.
      responses:
        '200':
          body:
            application/json:
              type: LocationInfoResponse
          description: Location information response.
      securedBy:
        - instagram_auth:
            scopes:
              - public_content
        - api_key
      (oas-tags):
        - locations
    /media:
      displayName: media
      /recent:
        displayName: recent
        get:
          displayName: GET_locations-location-id-media-recent
          description: Get a list of recent media objects from a given location.
          (oas-summary): Get a list of recent media objects from a given location.
          responses:
            '200':
              body:
                application/json:
                  type: MediaListResponse
              description: List of media entries from this location.
          queryParameters:
            min_timestamp:
              description: Return media after this UNIX timestamp.
              format: int64
              required: false
              type: integer
            max_timestamp:
              description: Return media before this UNIX timestamp.
              format: int64
              required: false
              type: integer
            min_id:
              description: Return media before this `min_id`.
              required: false
              type: string
            max_id:
              description: Return media after this `max_id`.
              required: false
              type: string
          securedBy:
            - instagram_auth:
                scopes:
                  - public_content
            - api_key
          (oas-tags):
            - locations
  /search:
    displayName: search
    get:
      displayName: GET_locations-search
      description: Search for a location by geographic coordinate.
      (oas-summary): Search for a location by geographic coordinate.
      responses:
        '200':
          body:
            application/json:
              type: LocationSearchResponse
          description: List of found locations.
      queryParameters:
        distance:
          description: 'Default is 1000m (distance=1000), max distance is 5000.'
          format: int32
          required: false
          type: integer
        facebook_places_id:
          description: 'Returns a location mapped off of a Facebook places id. If used, a Foursquare id and `lat`, `lng` are not required.'
          required: false
          type: string
        foursquare_id:
          description: |
            Returns a location mapped off of a foursquare v1 api location id. If used, you are not required to use
            `lat` and `lng`. Note that this method is deprecated; you should use the new foursquare IDs with V2 of their API.
          required: false
          type: string
        lat:
          description: 'Latitude of the center search coordinate. If used, `lng` is required.'
          format: double
          required: false
          type: number
        lng:
          description: 'Longitude of the center search coordinate. If used, `lat` is required.'
          format: double
          required: false
          type: number
        foursquare_v2_id:
          description: |
            Returns a location mapped off of a foursquare v2 api location id. If used, you are not required to use
            `lat` and `lng`.
          required: false
          type: string
      securedBy:
        - instagram_auth:
            scopes:
              - public_content
        - api_key
      (oas-tags):
        - locations
types:
  CaptionData:
    properties:
      created_time:
        description: Caption creation UNIX timestamp
        type: string
        required: false
      from:
        description: User who created this caption
        type: UserShortInfo
        required: false
      id:
        description: ID of this caption
        type: string
        required: false
      text:
        description: Caption text
        type: string
        required: false
  CommentEntry:
    properties:
      created_time:
        description: Comment creation UNIX timestamp
        type: string
        required: false
      from:
        description: User who posted this comment
        type: UserShortInfo
        required: false
      id:
        description: ID of this comment
        type: string
        required: false
      text:
        description: Text of the comment
        type: string
        required: false
  CommentsCollection:
    properties:
      count:
        description: 'Nember of comments available, data does not necessary contain all comments'
        type: integer
        required: false
      data:
        description: 'Collection of comment entries; **warning:** deprecated for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/)'
        items:
          type: CommentEntry
        type: array
        required: false
  CommentsResponse:
    properties:
      data:
        description: Collection of comments
        items:
          type: CommentEntry
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  CursorPaginationInfo:
    properties:
      next_cursor:
        description: The cursor ID of the next page
        type: string
        required: false
      next_url:
        description: URL to retrieve next page of entries
        type: string
        required: false
  IdPaginationInfo:
    properties:
      next_max_id:
        description: The max ID of the next page
        type: string
        required: false
      next_url:
        description: URL to retrieve next page of entries
        type: string
        required: false
  ImageInfo:
    properties:
      height:
        description: Image/video height in pixels
        type: integer
        required: false
      url:
        description: URL of the image/video resource
        type: string
        required: false
      width:
        description: Image/video width in pixels
        type: integer
        required: false
  ImagesData:
    properties:
      low_resolution:
        description: Image in low resolution
        type: ImageInfo
        required: false
      standard_resolution:
        description: Image in standard resolution
        type: ImageInfo
        required: false
      thumbnail:
        description: Thumbnail of the image
        type: ImageInfo
        required: false
  LikesCollection:
    properties:
      count:
        description: 'Nember of likes available, data does not necessary contain all comments'
        type: integer
        required: false
      data:
        description: 'Collection of users who liked; **warning:** deprecated for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/)'
        items:
          type: UserShortInfo
        type: array
        required: false
  LocationInfo:
    properties:
      id:
        description: ID of this location (in some responses it has a type of 'integer')
        type: string
        required: false
      latitude:
        description: Location latitude
        format: double
        type: number
        required: false
      longitude:
        description: Location longitude
        format: double
        type: number
        required: false
      name:
        description: Location name
        type: string
        required: false
  LocationInfoResponse:
    properties:
      data:
        description: Location brief information
        type: LocationInfo
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  LocationSearchResponse:
    properties:
      data:
        description: List of found locations
        items:
          type: LocationInfo
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  MediaEntry:
    properties:
      attribution:
        description: '??? Unknown ???'
        type: string
        required: false
      caption:
        description: Describes caption of this media
        type: CaptionData
        required: false
      comments:
        description: Comments of this media entry
        type: CommentsCollection
        required: false
      created_time:
        description: Media creation UNIX timestamp
        type: string
        required: false
      filter:
        description: Filter of this media entry
        type: string
        required: false
      id:
        description: ID of a media entry
        type: string
        required: false
      images:
        description: Images data in different resolutions
        type: ImagesData
        required: false
      likes:
        description: Likes of this media entry
        type: LikesCollection
        required: false
      link:
        description: Fixed URL of this media entry
        type: string
        required: false
      location:
        description: Location data for this media if available
        type: LocationInfo
        required: false
      tags:
        description: List of tags assigned to this media
        items:
          type: string
        type: array
        required: false
      type:
        description: Type of this media entry
        enum:
          - image
          - video
        type: string
        required: false
      user:
        description: User who posted this media
        type: UserShortInfo
        required: false
      user_has_liked:
        description: Indicates whether authenticated user has liked this media or not
        type: boolean
        required: false
      users_in_photo:
        description: Users located on this media entry
        items:
          type: UserInPhoto
        type: array
        required: false
      videos:
        description: 'Videos data in different resolutions, applied for ''video'' type'
        type: VideosData
        required: false
  MediaEntryResponse:
    properties:
      data:
        description: Media resource information
        type: MediaEntry
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  MediaListResponse:
    properties:
      data:
        description: List of media entries
        items:
          type: MediaEntry
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
      pagination:
        description: Information for pagination
        type: IdPaginationInfo
        required: false
  MediaSearchResponse:
    properties:
      data:
        description: Found media entries; some end-points do not return likes informtaion
        items:
          type: MediaEntry
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  MetaData:
    properties:
      code:
        description: HTTP result code
        format: int32
        type: integer
        required: false
  Position:
    properties:
      x:
        description: X position (horizontal)
        format: float
        type: number
        required: false
      'y':
        description: Y position (vertical)
        format: float
        type: number
        required: false
  RelationshipInfo:
    properties:
      incoming_status:
        description: Status of incoming relationship
        enum:
          - none
          - followed_by
          - requested_by
        type: string
        required: false
      outgoing_status:
        description: Status of outgoing relationship
        enum:
          - none
          - follows
          - requested
        type: string
        required: false
      target_user_is_private:
        description: Indicates whether target user is private or not
        type: boolean
        required: false
  RelationshipPostResponse:
    properties:
      data:
        description: Current relationship status
        type: RelationshipStatus
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  RelationshipResponse:
    properties:
      data:
        description: Relationship information
        type: RelationshipInfo
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  RelationshipStatus:
    properties:
      outgoing_status:
        description: Status of outgoing relationship
        enum:
          - none
          - follows
          - requested
        type: string
        required: false
  StatusResponse:
    properties:
      data:
        description: No data - 'null'
        type: string
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  TagInfo:
    properties:
      media_count:
        description: Overall number of media entries taged with this name
        format: int64
        type: integer
        required: false
      name:
        description: Tag name
        type: string
        required: false
  TagInfoResponse:
    properties:
      data:
        description: Tag brief information
        type: TagInfo
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  TagMediaListResponse:
    properties:
      data:
        description: List of media entries with this tag
        items:
          type: MediaEntry
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
      pagination:
        description: Information for pagination
        type: TagPaginationInfo
        required: false
  TagPaginationInfo:
    properties:
      deprecation_warning:
        description: 'The deprication warning, if information is available'
        type: string
        required: false
      min_tag_id:
        description: The min ID of a tag for the next page
        type: string
        required: false
      next_max_id:
        description: Depricated. Use min_tag_id instead
        type: string
        required: false
      next_max_tag_id:
        description: The max ID of a tag for the next page
        type: string
        required: false
      next_min_id:
        description: Depricated. Use max_tag_id instead
        type: string
        required: false
      next_url:
        description: URL to retrieve next page of entries
        type: string
        required: false
  TagSearchResponse:
    properties:
      data:
        description: List of found tags with brief statistics
        items:
          type: TagInfo
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  UserCounts:
    properties:
      followed_by:
        description: Number of followers of this user
        format: int32
        type: integer
        required: false
      follows:
        description: Number of users followed by this user
        format: int32
        type: integer
        required: false
      media:
        description: Number of user media
        format: int32
        type: integer
        required: false
  UserInPhoto:
    properties:
      position:
        description: Position in photo
        type: Position
        required: false
      user:
        description: User who is indicated on the photo
        type: UserShortInfo
        required: false
  UserInfo:
    properties:
      bio:
        description: User biography
        type: string
        required: false
      counts:
        description: User statistics (counters)
        type: UserCounts
        required: false
      full_name:
        description: User full name
        type: string
        required: false
      id:
        description: User ID
        type: string
        required: false
      profile_picture:
        description: URL to user profile picture
        type: string
        required: false
      username:
        description: 'User name, nickname'
        type: string
        required: false
      website:
        description: URL to user web-site
        type: string
        required: false
  UserResponse:
    properties:
      data:
        description: User basic information
        type: UserInfo
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  UserShortInfo:
    properties:
      full_name:
        description: User full name
        type: string
        required: false
      id:
        description: User ID
        type: string
        required: false
      profile_picture:
        description: URL to user profile picture
        type: string
        required: false
      username:
        description: 'User name, nickname'
        type: string
        required: false
  UsersInfoResponse:
    properties:
      data:
        description: User short information entries
        items:
          type: UserShortInfo
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
  UsersPagingResponse:
    properties:
      data:
        description: List of user short information entries
        items:
          type: UserShortInfo
        type: array
        required: false
      meta:
        description: Response meta-data
        type: MetaData
        required: false
      pagination:
        description: Information for pagination
        type: CursorPaginationInfo
        required: false
  VideosData:
    properties:
      low_resolution:
        description: Video in low resolution
        type: ImageInfo
        required: false
      standard_resolution:
        description: Video in standard resolution
        type: ImageInfo
        required: false
