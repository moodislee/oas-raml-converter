#%RAML 1.0
title: Request Baskets
version: '0.5'
baseUri: 'https://rbaskets.in/'
mediaType: application/json
protocols:
  - HTTPS
description: RESTful API of Request Baskets service
(oas-tags-definition):
  - description: Manage baskets
    name: baskets
  - description: Configure basket responses
    name: responses
  - description: Manage collected requests
    name: requests
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_raw.githubusercontent.com_darklynx_request-baskets_master_doc_logo.svg'
  (oas-x-origin):
    format: swagger
    url: 'https://raw.githubusercontent.com/darklynx/request-baskets/master/doc/api-swagger.yaml'
    version: '2.0'
  (oas-x-preferred): true
  (oas-x-providerName): rbaskets.in
  contact:
    name: darklynx
    url: 'https://github.com/darklynx'
securitySchemes:
  basket_token:
    type: Pass Through
    describedBy:
      headers:
        Authorization:
          type: string
    description: Basket assigned secure token
/baskets:
  displayName: baskets
  '/{name}':
    displayName: '{name}'
    /responses:
      displayName: responses
      '/{method}':
        displayName: '{method}'
        uriParameters:
          method:
            description: The HTTP method this response is configured for
            enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - CONNECT
              - OPTIONS
              - TRACE
            required: true
            type: string
        put:
          displayName: PUT_baskets-name-responses-method
          description: |
            Allows to configure HTTP response of this basket. The service will reply with configured response to any HTTP
            request sent to the basket with appropriate HTTP method.

            If nothing is configured, the default response is HTTP 200 - OK with empty content.
          (oas-summary): Update response settings
          body:
            application/json:
              type: Response
              (oas-body-name): response
              description: HTTP response configuration
          responses:
            '204':
              description: No Content. Response configuration is updated
            '400':
              description: Bad Request. Failed to parse JSON into response configuration object.
            '401':
              description: Unauthorized. Invalid or missing basket token
            '404':
              description: Not Found. No basket with such name
            '422':
              description: Unprocessable Entity. Response configuration is not valid.
          securedBy:
            - basket_token
          (oas-tags):
            - responses
        get:
          displayName: GET_baskets-name-responses-method
          description: |
            Retrieves information about configured response of the basket. Service will reply with this response to any
            HTTP request sent to the basket with appropriate HTTP method.

            If nothing is configured, the default response is HTTP 200 - OK with empty content.
          (oas-summary): Get response settings
          responses:
            '200':
              body:
                application/json:
                  type: Response
              description: OK. Returns configured response information
            '401':
              description: Unauthorized. Invalid or missing basket token
            '404':
              description: Not Found. No basket with such name
          securedBy:
            - basket_token
          (oas-tags):
            - responses
    /requests:
      displayName: requests
      get:
        displayName: GET_baskets-name-requests
        description: Fetches collection of requests collected by this basket.
        (oas-summary): Get collected requests
        responses:
          '200':
            body:
              application/json:
                type: Requests
            description: OK. Returns list of basket requests.
          '204':
            description: No Content. No requests found for specified limits
          '401':
            description: Unauthorized. Invalid or missing basket token
          '404':
            description: Not Found. No basket with such name
        queryParameters:
          max:
            description: Maximum number of requests to return; default 20
            required: false
            type: integer
          skip:
            description: Number of requests to skip; default 0
            required: false
            type: integer
          q:
            description: 'Query string to filter result, only requests that match the query will be included in response'
            required: false
            type: string
          in:
            description: |
              Defines what is taken into account when filtering is applied: `body` - search in content body of collected requests,
              `query` - search among query parameters of collected requests, `headers` - search among request header values,
              `any` - search anywhere; default `any`
            enum:
              - any
              - body
              - query
              - headers
            required: false
            type: string
        securedBy:
          - basket_token
        (oas-tags):
          - requests
      delete:
        displayName: DELETE_baskets-name-requests
        description: Deletes all requests collected by this basket.
        (oas-summary): Delete all requests
        responses:
          '204':
            description: No Content. Basket requests are cleared
          '401':
            description: Unauthorized. Invalid or missing basket token
          '404':
            description: Not Found. No basket with such name
        securedBy:
          - basket_token
        (oas-tags):
          - requests
    uriParameters:
      name:
        description: The basket name
        required: true
        type: string
    put:
      displayName: PUT_baskets-name
      description: |
        Updates configuration settings of this basket.

        Special configuration parameters for request forwarding:
          * `insecure_tls` controls certificate verification when forwarding requests. Setting this parameter to `true`
          allows to forward collected HTTP requests via HTTPS protocol even if the forward end-point is configured with
          self-signed TLS/SSL certificate. **Warning:** enabling this feature has known security implications.
          * `expand_path` changes the logic of constructing taget URL when forwarding requests. If this parameter is
          set to `true` the forward URL path will be expanded when original HTTP request contains compound path. For
          example, a basket with name **server1** is configured to forward all requests to `http://server1.intranet:8001/myservice`
          and it has received an HTTP request like `GET http://baskets.example.com/server1/component/123/events?status=OK`
          then depending on `expand_path` settings the request will be forwarded to:
            * `true` => `GET http://server1.intranet:8001/myservice/component/123/events?status=OK`
            * `false` => `GET http://server1.intranet:8001/myservice?status=OK`
      (oas-summary): Update basket settings
      body:
        application/json:
          type: Config
          (oas-body-name): config
          description: New configuration to apply
      responses:
        '204':
          description: No Content. Basket configuration is updated
        '400':
          description: Bad Request. Failed to parse JSON into basket configuration object.
        '401':
          description: Unauthorized. Invalid or missing basket token
        '404':
          description: Not Found. No basket with such name
        '422':
          description: Unprocessable Entity. Basket configuration is not valid.
      securedBy:
        - basket_token
      (oas-tags):
        - baskets
    post:
      displayName: POST_baskets-name
      description: Creates a new basket with this name.
      (oas-summary): Create new basket
      body:
        application/json:
          type: Config
          (oas-body-name): config
          description: Basket configuration
      responses:
        '201':
          body:
            application/json:
              type: Token
          description: Created. Indicates that basket is successfully created
        '400':
          description: Bad Request. Failed to parse JSON into basket configuration object.
        '403':
          description: 'Forbidden. Indicates that basket name conflicts with reserved paths; e.g. `baskets`, `web`, etc.'
        '409':
          description: Conflict. Indicates that basket with such name already exists
        '422':
          description: Unprocessable Entity. Basket configuration is not valid.
      (oas-tags):
        - baskets
    get:
      displayName: GET_baskets-name
      description: Retrieves configuration settings of this basket.
      (oas-summary): Get basket settings
      responses:
        '200':
          body:
            application/json:
              type: Config
          description: OK. Returns basket configuration
        '401':
          description: Unauthorized. Invalid or missing basket token
        '404':
          description: Not Found. No basket with such name
      securedBy:
        - basket_token
      (oas-tags):
        - baskets
    delete:
      displayName: DELETE_baskets-name
      description: Permanently deletes this basket and all collected requests.
      (oas-summary): Delete basket
      responses:
        '204':
          description: No Content. Basket is deleted
        '401':
          description: Unauthorized. Invalid or missing basket token
        '404':
          description: Not Found. No basket with such name
      securedBy:
        - basket_token
      (oas-tags):
        - baskets
  get:
    displayName: GET_baskets
    description: Fetches a list of basket names managed by service.
    (oas-summary): Get baskets
    responses:
      '200':
        body:
          application/json:
            type: Baskets
        description: OK. Returns list of available baskets.
      '204':
        description: No Content. No baskets available for specified limits
    queryParameters:
      max:
        description: Maximum number of basket names to return; default 20
        required: false
        type: integer
      skip:
        description: Number of basket names to skip; default 0
        required: false
        type: integer
      q:
        description: 'Query string to filter result, only those basket names that match the query will be included in response'
        required: false
        type: string
    (oas-tags):
      - baskets
types:
  Baskets:
    properties:
      count:
        description: Total number of baskets in the system; not present if query is applied
        type: integer
        required: false
      has_more:
        description: Indicates if there are more baskets to fetch
        type: boolean
      names:
        description: Collection of basket names
        items:
          type: string
        type: array
  Config:
    properties:
      capacity:
        description: 'Baskets capacity, defines maximum number of requests to store'
        type: integer
        required: false
      expand_path:
        description: If set to `true` the forward URL path will be expanded when original HTTP request contains compound path.
        type: boolean
        required: false
      forward_url:
        description: 'URL to forward all incoming requests of the basket, `empty` value disables forwarding'
        type: string
        required: false
      insecure_tls:
        description: |
          If set to `true` the certificate verification will be disabled if forward URL indicates HTTPS scheme.
          **Warning:** enabling this feature has known security implications.
        type: boolean
        required: false
  Headers:
    description: 'Map of HTTP headers, key represents name, value is array of values'
    type: object
    properties:
      //:
        description: Collection of header values
        items:
          type: string
        type: array
  Request:
    properties:
      body:
        description: Content of request body
        type: string
        required: false
      content_length:
        description: Content lenght of request
        type: integer
        required: false
      date:
        description: 'Date and time of request in Unix time ms. format (number of miliseconds elapsed since January 1, 1970 UTC)'
        format: int64
        type: integer
        required: false
      headers:
        type: Headers
        required: false
      method:
        description: HTTP methof of request
        type: string
        required: false
      path:
        description: URL path of request
        type: string
        required: false
      query:
        description: Query parameters of request
        type: string
        required: false
  Requests:
    properties:
      count:
        description: Current number of collected requests hold by basket; not present if query is applied
        type: integer
        required: false
      has_more:
        description: Indicates if there are more requests collected by basket to fetch
        type: boolean
      requests:
        description: Collection of collected requests
        items:
          type: Request
        type: array
      total_count:
        description: Total number of all requests passed through this basket; not present if query is applied
        type: integer
        required: false
  Response:
    properties:
      body:
        description: Content of response body
        type: string
        required: false
      headers:
        type: Headers
        required: false
      is_template:
        description: |
          If set to `true` the body is treated as [HTML template](https://golang.org/pkg/html/template) that accepts
          input from request parameters.
        type: boolean
        required: false
      status:
        description: The HTTP status code to reply with
        type: integer
        required: false
  Token:
    properties:
      token:
        description: 'Secure token to manage the basket, generated by system'
        type: string
