#%RAML 1.0
title: YouTube Reporting
version: v1
baseUri: 'https://youtubereporting.googleapis.com/'
protocols:
  - HTTPS
description: Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.
(oas-tags-definition):
  - name: media
  - name: reportTypes
  - name: jobs
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/youtubereporting/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): youtubereporting
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/youtube/reporting/v1/reports/'
securitySchemes:
  Oauth2:
    type: OAuth 2.0
    settings:
      authorizationUri: 'https://accounts.google.com/o/oauth2/auth'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'https://www.googleapis.com/auth/yt-analytics-monetary.readonly'
        - 'https://www.googleapis.com/auth/yt-analytics.readonly'
    description: Oauth 2.0 authentication
/v1:
  displayName: v1
  /reportTypes:
    displayName: reportTypes
    get:
      displayName: youtubereporting.reportTypes.list
      description: Lists report types.
      responses:
        '200':
          body:
            application/json:
              type: ListReportTypesResponse
          description: Successful response
      queryParameters:
        onBehalfOfContentOwner:
          description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
          type: string
        pageSize:
          description: 'Requested page size. Server may return fewer report types than requested. If unspecified, server will pick an appropriate default.'
          type: integer
        pageToken:
          description: 'A token identifying a page of results the server should return. Typically, this is the value of ListReportTypesResponse.next_page_token returned in response to the previous call to the `ListReportTypes` method.'
          type: string
        includeSystemManaged:
          description: 'If set to true, also system-managed report types will be returned; otherwise only the report types that can be used to create new reporting jobs will be returned.'
          type: boolean
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/yt-analytics.readonly'
      (oas-tags):
        - reportTypes
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
  /media:
    displayName: media
    '/{resourceName}':
      displayName: '{resourceName}'
      uriParameters:
        resourceName:
          description: Name of the media that is being downloaded. See ReadRequest.resource_name.
          required: true
          type: string
      get:
        displayName: youtubereporting.media.download
        description: 'Method for media download. Download is supported on the URI `/v1/media/{+name}?alt=media`.'
        responses:
          '200':
            body:
              application/json:
                type: Media
            description: Successful response
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/yt-analytics.readonly'
        (oas-tags):
          - media
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
  /jobs:
    displayName: jobs
    '/{jobId}':
      displayName: '{jobId}'
      /reports:
        displayName: reports
        '/{reportId}':
          displayName: '{reportId}'
          uriParameters:
            reportId:
              description: The ID of the report to retrieve.
              required: true
              type: string
          get:
            displayName: youtubereporting.jobs.reports.get
            description: Gets the metadata of a specific report.
            responses:
              '200':
                body:
                  application/json:
                    type: Report
                description: Successful response
            queryParameters:
              onBehalfOfContentOwner:
                description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
                type: string
            securedBy:
              - Oauth2:
                  scopes:
                    - 'https://www.googleapis.com/auth/yt-analytics.readonly'
            (oas-tags):
              - jobs
          is:
            - accessToken
            - alt
            - bearerToken
            - callback
            - fields
            - key
            - oauthToken
            - pp
            - prettyPrint
            - quotaUser
            - uploadProtocol
            - uploadType
            - xgafv
        get:
          displayName: youtubereporting.jobs.reports.list
          description: Lists reports created by a specific job. Returns NOT_FOUND if the job does not exist.
          responses:
            '200':
              body:
                application/json:
                  type: ListReportsResponse
              description: Successful response
          queryParameters:
            onBehalfOfContentOwner:
              description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
              type: string
            pageSize:
              description: 'Requested page size. Server may return fewer report types than requested. If unspecified, server will pick an appropriate default.'
              type: integer
            pageToken:
              description: 'A token identifying a page of results the server should return. Typically, this is the value of ListReportsResponse.next_page_token returned in response to the previous call to the `ListReports` method.'
              type: string
            createdAfter:
              description: 'If set, only reports created after the specified date/time are returned.'
              type: string
            startTimeAtOrAfter:
              description: 'If set, only reports whose start time is greater than or equal the specified date/time are returned.'
              type: string
            startTimeBefore:
              description: 'If set, only reports whose start time is smaller than the specified date/time are returned.'
              type: string
          securedBy:
            - Oauth2:
                scopes:
                  - 'https://www.googleapis.com/auth/yt-analytics.readonly'
          (oas-tags):
            - jobs
        is:
          - accessToken
          - alt
          - bearerToken
          - callback
          - fields
          - key
          - oauthToken
          - pp
          - prettyPrint
          - quotaUser
          - uploadProtocol
          - uploadType
          - xgafv
      uriParameters:
        jobId:
          description: The ID of the job to delete.
          required: true
          type: string
      get:
        displayName: youtubereporting.jobs.get
        description: Gets a job.
        responses:
          '200':
            body:
              application/json:
                type: Job
            description: Successful response
        queryParameters:
          onBehalfOfContentOwner:
            description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/yt-analytics.readonly'
        (oas-tags):
          - jobs
      is:
        - accessToken
        - alt
        - bearerToken
        - callback
        - fields
        - key
        - oauthToken
        - pp
        - prettyPrint
        - quotaUser
        - uploadProtocol
        - uploadType
        - xgafv
      delete:
        displayName: youtubereporting.jobs.delete
        description: Deletes a job.
        responses:
          '200':
            body:
              application/json:
                type: Empty
            description: Successful response
        queryParameters:
          onBehalfOfContentOwner:
            description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
            type: string
        securedBy:
          - Oauth2:
              scopes:
                - 'https://www.googleapis.com/auth/yt-analytics.readonly'
        (oas-tags):
          - jobs
    post:
      displayName: youtubereporting.jobs.create
      description: Creates a job and returns it.
      body:
        application/json:
          type: Job
          (oas-body-name): body
      responses:
        '200':
          body:
            application/json:
              type: Job
          description: Successful response
      queryParameters:
        onBehalfOfContentOwner:
          description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
          type: string
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/yt-analytics.readonly'
      (oas-tags):
        - jobs
    is:
      - accessToken
      - alt
      - bearerToken
      - callback
      - fields
      - key
      - oauthToken
      - pp
      - prettyPrint
      - quotaUser
      - uploadProtocol
      - uploadType
      - xgafv
    get:
      displayName: youtubereporting.jobs.list
      description: Lists jobs.
      responses:
        '200':
          body:
            application/json:
              type: ListJobsResponse
          description: Successful response
      queryParameters:
        onBehalfOfContentOwner:
          description: 'The content owner''s external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).'
          type: string
        pageSize:
          description: 'Requested page size. Server may return fewer jobs than requested. If unspecified, server will pick an appropriate default.'
          type: integer
        pageToken:
          description: 'A token identifying a page of results the server should return. Typically, this is the value of ListReportTypesResponse.next_page_token returned in response to the previous call to the `ListJobs` method.'
          type: string
        includeSystemManaged:
          description: 'If set to true, also system-managed jobs will be returned; otherwise only user-created jobs will be returned. System-managed jobs can neither be modified nor deleted.'
          type: boolean
      securedBy:
        - Oauth2:
            scopes:
              - 'https://www.googleapis.com/auth/yt-analytics.readonly'
      (oas-tags):
        - jobs
types:
  Empty:
    description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
  Job:
    description: A job creating reports of a specific type.
    properties:
      createTime:
        description: The creation date/time of the job.
        type: string
        required: false
      expireTime:
        description: 'The date/time when this job will expire/expired. After a job expired, no new reports are generated.'
        type: string
        required: false
      id:
        description: The server-generated ID of the job (max. 40 characters).
        type: string
        required: false
      name:
        description: The name of the job (max. 100 characters).
        type: string
        required: false
      reportTypeId:
        description: The type of reports this job creates. Corresponds to the ID of a ReportType.
        type: string
        required: false
      systemManaged:
        description: True if this a system-managed job that cannot be modified by the user; otherwise false.
        type: boolean
        required: false
  ListJobsResponse:
    description: Response message for ReportingService.ListJobs.
    properties:
      jobs:
        description: The list of jobs.
        items:
          type: Job
        type: array
        required: false
      nextPageToken:
        description: A token to retrieve next page of results. Pass this value in the ListJobsRequest.page_token field in the subsequent call to `ListJobs` method to retrieve the next page of results.
        type: string
        required: false
  ListReportTypesResponse:
    description: Response message for ReportingService.ListReportTypes.
    properties:
      nextPageToken:
        description: A token to retrieve next page of results. Pass this value in the ListReportTypesRequest.page_token field in the subsequent call to `ListReportTypes` method to retrieve the next page of results.
        type: string
        required: false
      reportTypes:
        description: The list of report types.
        items:
          type: ReportType
        type: array
        required: false
  ListReportsResponse:
    description: Response message for ReportingService.ListReports.
    properties:
      nextPageToken:
        description: A token to retrieve next page of results. Pass this value in the ListReportsRequest.page_token field in the subsequent call to `ListReports` method to retrieve the next page of results.
        type: string
        required: false
      reports:
        description: The list of report types.
        items:
          type: Report
        type: array
        required: false
  Media:
    description: Media resource.
    properties:
      resourceName:
        description: Name of the media resource.
        type: string
        required: false
  Report:
    description: A report's metadata including the URL from which the report itself can be downloaded.
    properties:
      createTime:
        description: The date/time when this report was created.
        type: string
        required: false
      downloadUrl:
        description: The URL from which the report can be downloaded (max. 1000 characters).
        type: string
        required: false
      endTime:
        description: The end of the time period that the report instance covers. The value is exclusive.
        type: string
        required: false
      id:
        description: The server-generated ID of the report.
        type: string
        required: false
      jobExpireTime:
        description: The date/time when the job this report belongs to will expire/expired.
        type: string
        required: false
      jobId:
        description: The ID of the job that created this report.
        type: string
        required: false
      startTime:
        description: The start of the time period that the report instance covers. The value is inclusive.
        type: string
        required: false
  ReportType:
    description: A report type.
    properties:
      deprecateTime:
        description: The date/time when this report type was/will be deprecated.
        type: string
        required: false
      id:
        description: The ID of the report type (max. 100 characters).
        type: string
        required: false
      name:
        description: The name of the report type (max. 100 characters).
        type: string
        required: false
      systemManaged:
        description: True if this a system-managed report type; otherwise false. Reporting jobs for system-managed report types are created automatically and can thus not be used in the `CreateJob` method.
        type: boolean
        required: false
traits:
  xgafv:
    queryParameters:
      $.xgafv:
        type: string
        description: V1 error format.
  accessToken:
    queryParameters:
      access_token:
        type: string
        description: OAuth access token.
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for response.
        default: json
  bearerToken:
    queryParameters:
      bearer_token:
        type: string
        description: OAuth bearer token.
  callback:
    queryParameters:
      callback:
        type: string
        description: JSONP
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  pp:
    queryParameters:
      pp:
        type: boolean
        description: Pretty-print response.
        default: true
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
  uploadType:
    queryParameters:
      uploadType:
        type: string
        description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
  uploadProtocol:
    queryParameters:
      upload_protocol:
        type: string
        description: 'Upload protocol for media (e.g. "raw", "multipart").'
