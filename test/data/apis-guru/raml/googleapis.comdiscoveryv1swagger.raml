#%RAML 1.0
title: APIs Discovery Service
version: v1
baseUri: 'https://www.googleapis.com/discovery/v1'
protocols:
  - HTTPS
description: 'Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.'
(oas-tags-definition):
  - name: apis
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-apiClientRegistration: any
  oas-x-logo: any
  oas-x-origin: any
  oas-x-preferred: any
  oas-x-providerName: any
  oas-x-serviceName: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
(oas-info):
  (oas-x-apiClientRegistration):
    url: 'https://console.developers.google.com'
  (oas-x-logo):
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  (oas-x-origin):
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/discovery/v1/rest'
    version: v1
  (oas-x-preferred): true
  (oas-x-providerName): googleapis.com
  (oas-x-serviceName): discovery
  contact:
    name: Google
    url: 'https://google.com'
(oas-externalDocs):
  url: 'https://developers.google.com/discovery/'
/apis:
  displayName: apis
  '/{api}':
    displayName: '{api}'
    '/{version}':
      displayName: '{version}'
      /rest:
        displayName: rest
        get:
          displayName: discovery.apis.getRest
          description: Retrieve the description of a particular version of an api.
          responses:
            '200':
              body:
                application/json:
                  type: RestDescription
              description: Successful response
          (oas-tags):
            - apis
        is:
          - alt
          - fields
          - key
          - oauthToken
          - prettyPrint
          - quotaUser
          - userIp
  get:
    displayName: discovery.apis.list
    description: Retrieve the list of APIs supported at this endpoint.
    responses:
      '200':
        body:
          application/json:
            type: DirectoryList
        description: Successful response
    queryParameters:
      name:
        description: Only include APIs with the given name.
        type: string
      preferred:
        default: false
        description: Return only the preferred version of an API.
        type: boolean
    (oas-tags):
      - apis
  is:
    - alt
    - fields
    - key
    - oauthToken
    - prettyPrint
    - quotaUser
    - userIp
types:
  DirectoryList:
    properties:
      discoveryVersion:
        default: v1
        description: Indicate the version of the Discovery API used to generate this doc.
        type: string
        required: false
      items:
        description: The individual directory entries. One entry per api/version pair.
        items:
          properties:
            description:
              description: The description of this API.
              type: string
              required: false
            discoveryLink:
              description: A link to the discovery document.
              type: string
              required: false
            discoveryRestUrl:
              description: The URL for the discovery REST document.
              type: string
              required: false
            documentationLink:
              description: A link to human readable documentation for the API.
              type: string
              required: false
            icons:
              description: Links to 16x16 and 32x32 icons representing the API.
              properties:
                x16:
                  description: The URL of the 16x16 icon.
                  type: string
                  required: false
                x32:
                  description: The URL of the 32x32 icon.
                  type: string
                  required: false
              type: object
              required: false
            id:
              description: The id of this API.
              type: string
              required: false
            kind:
              default: 'discovery#directoryItem'
              description: The kind for this response.
              type: string
              required: false
            labels:
              description: 'Labels for the status of this API, such as labs or deprecated.'
              items:
                type: string
              type: array
              required: false
            name:
              description: The name of the API.
              type: string
              required: false
            preferred:
              description: True if this version is the preferred version to use.
              type: boolean
              required: false
            title:
              description: The title of this API.
              type: string
              required: false
            version:
              description: The version of the API.
              type: string
              required: false
          type: object
        type: array
        required: false
      kind:
        default: 'discovery#directoryList'
        description: The kind for this response.
        type: string
        required: false
  JsonSchema:
    properties:
      $ref:
        description: A reference to another schema. The value of this property is the "id" of another schema.
        type: string
        required: false
      additionalProperties:
        description: 'If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.'
        type: JsonSchema
        required: false
      annotations:
        description: Additional information about this property.
        properties:
          required:
            description: A list of methods for which this property is required on requests.
            items:
              type: string
            type: array
            required: false
        type: object
        required: false
      default:
        description: The default value of this property (if one exists).
        type: string
        required: false
      description:
        description: A description of this object.
        type: string
        required: false
      enum:
        description: Values this parameter may take (if it is an enum).
        items:
          type: string
        type: array
        required: false
      enumDescriptions:
        description: The descriptions for the enums. Each position maps to the corresponding value in the "enum" array.
        items:
          type: string
        type: array
        required: false
      format:
        description: 'An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23'
        type: string
        required: false
      id:
        description: Unique identifier for this schema.
        type: string
        required: false
      items:
        description: 'If this is a schema for an array, this property is the schema for each element in the array.'
        type: JsonSchema
        required: false
      location:
        description: Whether this parameter goes in the query or the path for REST requests.
        type: string
        required: false
      maximum:
        description: The maximum value of this parameter.
        type: string
        required: false
      minimum:
        description: The minimum value of this parameter.
        type: string
        required: false
      pattern:
        description: 'The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html'
        type: string
        required: false
      properties:
        additionalProperties:
          description: A single property of this object. The value is itself a JSON Schema object describing this property.
          type: JsonSchema
        description: 'If this is a schema for an object, list the schema for each property of this object.'
        type: object
        required: false
      readOnly:
        description: 'The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service.'
        type: boolean
        required: false
      repeated:
        description: Whether this parameter may appear multiple times.
        type: boolean
        required: false
      required:
        description: Whether the parameter is required.
        type: boolean
        required: false
      type:
        description: 'The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1'
        type: string
        required: false
      variant:
        description: 'In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.'
        properties:
          discriminant:
            description: The name of the type discriminant property.
            type: string
            required: false
          map:
            description: The map of discriminant value to schema to use for parsing..
            items:
              properties:
                $ref:
                  type: string
                  required: false
                type_value:
                  type: string
                  required: false
              type: object
            type: array
            required: false
        type: object
        required: false
  RestDescription:
    properties:
      auth:
        description: Authentication information.
        properties:
          oauth2:
            description: OAuth 2.0 authentication information.
            properties:
              scopes:
                additionalProperties:
                  description: The scope value.
                  properties:
                    description:
                      description: Description of scope.
                      type: string
                      required: false
                  type: object
                description: Available OAuth 2.0 scopes.
                type: object
                required: false
            type: object
            required: false
        type: object
        required: false
      basePath:
        description: '[DEPRECATED] The base path for REST requests.'
        type: string
        required: false
      baseUrl:
        description: '[DEPRECATED] The base URL for REST requests.'
        type: string
        required: false
      batchPath:
        default: batch
        description: The path for REST batch requests.
        type: string
        required: false
      canonicalName:
        description: Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.
        type: string
        required: false
      description:
        description: The description of this API.
        type: string
        required: false
      discoveryVersion:
        default: v1
        description: Indicate the version of the Discovery API used to generate this doc.
        type: string
        required: false
      documentationLink:
        description: A link to human readable documentation for the API.
        type: string
        required: false
      etag:
        description: The ETag for this response.
        readOnly: true
        type: string
        facets:
          readOnly?: boolean
        required: false
      exponentialBackoffDefault:
        description: Enable exponential backoff for suitable methods in the generated clients.
        type: boolean
        required: false
      features:
        description: A list of supported features for this API.
        items:
          type: string
        type: array
        required: false
      icons:
        description: Links to 16x16 and 32x32 icons representing the API.
        properties:
          x16:
            description: The URL of the 16x16 icon.
            type: string
            required: false
          x32:
            description: The URL of the 32x32 icon.
            type: string
            required: false
        type: object
        required: false
      id:
        description: The ID of this API.
        type: string
        required: false
      kind:
        default: 'discovery#restDescription'
        description: The kind for this response.
        type: string
        required: false
      labels:
        description: 'Labels for the status of this API, such as labs or deprecated.'
        items:
          type: string
        type: array
        required: false
      methods:
        additionalProperties:
          description: An individual method description.
          type: RestMethod
        description: API-level methods for this API.
        type: object
        required: false
      name:
        description: The name of this API.
        type: string
        required: false
      ownerDomain:
        description: 'The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.'
        type: string
        required: false
      ownerName:
        description: The name of the owner of this API. See ownerDomain.
        type: string
        required: false
      packagePath:
        description: The package of the owner of this API. See ownerDomain.
        type: string
        required: false
      parameters:
        additionalProperties:
          description: Description of a single parameter.
          type: JsonSchema
        description: Common parameters that apply across all apis.
        type: object
        required: false
      protocol:
        default: rest
        description: The protocol described by this document.
        type: string
        required: false
      resources:
        additionalProperties:
          description: An individual resource description. Contains methods and sub-resources related to this resource.
          type: RestResource
        description: The resources in this API.
        type: object
        required: false
      revision:
        description: The version of this API.
        type: string
        required: false
      rootUrl:
        description: The root URL under which all API services live.
        type: string
        required: false
      schemas:
        additionalProperties:
          description: An individual schema description.
          type: JsonSchema
        description: The schemas for this API.
        type: object
        required: false
      servicePath:
        description: The base path for all REST requests.
        type: string
        required: false
      title:
        description: The title of this API.
        type: string
        required: false
      version:
        description: The version of this API.
        type: string
        required: false
      version_module:
        type: boolean
        required: false
  RestMethod:
    properties:
      description:
        description: Description of this method.
        type: string
        required: false
      etagRequired:
        description: Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.
        type: boolean
        required: false
      httpMethod:
        description: HTTP method used by this method.
        type: string
        required: false
      id:
        description: A unique ID for this method. This property can be used to match methods between different versions of Discovery.
        type: string
        required: false
      mediaUpload:
        description: Media upload parameters.
        properties:
          accept:
            description: MIME Media Ranges for acceptable media uploads to this method.
            items:
              type: string
            type: array
            required: false
          maxSize:
            description: 'Maximum size of a media upload, such as "1MB", "2GB" or "3TB".'
            type: string
            required: false
          protocols:
            description: Supported upload protocols.
            properties:
              resumable:
                description: Supports the Resumable Media Upload protocol.
                properties:
                  multipart:
                    default: true
                    description: True if this endpoint supports uploading multipart media.
                    type: boolean
                    required: false
                  path:
                    description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                    type: string
                    required: false
                type: object
                required: false
              simple:
                description: Supports uploading as a single HTTP request.
                properties:
                  multipart:
                    default: true
                    description: True if this endpoint supports upload multipart media.
                    type: boolean
                    required: false
                  path:
                    description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                    type: string
                    required: false
                type: object
                required: false
            type: object
            required: false
        type: object
        required: false
      parameterOrder:
        description: 'Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the "most-significant" parameter appears first.'
        items:
          type: string
        type: array
        required: false
      parameters:
        additionalProperties:
          description: Details for a single parameter in this method.
          type: JsonSchema
        description: Details for all parameters in this method.
        type: object
        required: false
      path:
        description: The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.
        type: string
        required: false
      request:
        description: The schema for the request.
        properties:
          $ref:
            description: Schema ID for the request schema.
            type: string
            required: false
          parameterName:
            description: parameter name.
            type: string
            required: false
        type: object
        required: false
      response:
        description: The schema for the response.
        properties:
          $ref:
            description: Schema ID for the response schema.
            type: string
            required: false
        type: object
        required: false
      scopes:
        description: OAuth 2.0 scopes applicable to this method.
        items:
          type: string
        type: array
        required: false
      supportsMediaDownload:
        description: Whether this method supports media downloads.
        type: boolean
        required: false
      supportsMediaUpload:
        description: Whether this method supports media uploads.
        type: boolean
        required: false
      supportsSubscription:
        description: Whether this method supports subscriptions.
        type: boolean
        required: false
      useMediaDownloadService:
        description: Indicates that downloads from this method should use the download service URL (i.e. "/download"). Only applies if the method supports media download.
        type: boolean
        required: false
  RestResource:
    properties:
      methods:
        additionalProperties:
          description: Description for any methods on this resource.
          type: RestMethod
        description: Methods on this resource.
        type: object
        required: false
      resources:
        additionalProperties:
          description: Description for any sub-resources on this resource.
          type: RestResource
        description: Sub-resources on this resource.
        type: object
        required: false
traits:
  alt:
    queryParameters:
      alt:
        type: string
        description: Data format for the response.
        default: json
        enum:
          - json
  fields:
    queryParameters:
      fields:
        type: string
        description: Selector specifying which fields to include in a partial response.
  key:
    queryParameters:
      key:
        type: string
        description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
  oauthToken:
    queryParameters:
      oauth_token:
        type: string
        description: OAuth 2.0 token for the current user.
  prettyPrint:
    queryParameters:
      prettyPrint:
        type: boolean
        description: Returns response with indentations and line breaks.
        default: true
  quotaUser:
    queryParameters:
      quotaUser:
        type: string
        description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
  userIp:
    queryParameters:
      userIp:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
