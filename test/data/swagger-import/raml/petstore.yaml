#%RAML 1.0
title: Swagger Petstore
version: 1.0.0
baseUri: 'http://petstore.swagger.io/v2'
protocols:
  - HTTP
description: 'This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.'
(oas-tags-definition):
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
annotationTypes:
  oas-tags-definition:
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
    allowedTargets: API
  oas-x-extension4: any
  oas-x-extension7: any
  oas-x-extension2: any
  oas-x-extension3: any
  oas-x-extension5: any
  oas-paths:
    type: any
    allowedTargets: API
  oas-x-extension8: any
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-deprecated:
    type: boolean
    allowedTargets: Method
  oas-summary:
    type: string
    allowedTargets: Method
  oas-allowEmptyValue:
    type: boolean
  oas-collectionFormat:
    type: string
  oas-exclusiveMaximum:
    type: boolean
  oas-exclusiveMinimum:
    type: boolean
  oas-externalDocs:
    properties:
      description?: string
      url: string
    allowedTargets:
      - API
      - Method
      - TypeDeclaration
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
  oas-responses-default:
    type: any
    allowedTargets: Method
  oas-x-extension1: any
(oas-info):
  (oas-x-extension4): value4
  contact:
    email: apiteam@swagger.io
    (oas-x-extension2): value2
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    (oas-x-extension3): value3
(oas-externalDocs):
  description: Find out more about Swagger
  url: 'http://swagger.io'
  (oas-x-extension7): value7
securitySchemes:
  petstore_auth:
    type: OAuth 2.0
    settings:
      authorizationUri: 'http://petstore.swagger.io/oauth/dialog'
      accessTokenUri: ''
      authorizationGrants:
        - implicit
      scopes:
        - 'write:pets'
        - 'read:pets'
  api_key:
    type: Pass Through
    describedBy:
      headers:
        api_key:
          type: string
(oas-paths):
  (oas-x-extension5): value5
/store:
  displayName: store
  /order:
    displayName: order
    '/{orderId}':
      displayName: '{orderId}'
      uriParameters:
        orderId:
          description: ID of the order that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      get:
        displayName: getOrderById
        description: For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
        (oas-summary): Find purchase order by ID
        responses:
          '200':
            body:
              application/json:
                type: Order
            description: successful operation
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
        (oas-tags):
          - store
      delete:
        displayName: deleteOrder
        description: For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
        (oas-summary): Delete purchase order by ID
        responses:
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
        (oas-tags):
          - store
    post:
      displayName: placeOrder
      (oas-summary): Place an order for a pet
      body:
        application/json:
          type: Order
          (oas-body-name): body
          description: order placed for purchasing the pet
      responses:
        '200':
          body:
            application/json:
              type: Order
          description: successful operation
        '400':
          description: Invalid Order
      (oas-tags):
        - store
  /inventory:
    displayName: inventory
    get:
      displayName: getInventory
      description: Returns a map of status codes to quantities
      (oas-summary): Returns pet inventories by status
      responses:
        '200':
          body:
            application/json:
              type: object
              properties:
                //:
                  format: int32
                  type: integer
          description: successful operation
      securedBy:
        - api_key
      (oas-tags):
        - store
/user:
  displayName: user
  '/{username}':
    displayName: '{username}'
    uriParameters:
      username:
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        type: string
    delete:
      displayName: deleteUser
      description: This can only be done by the logged in user.
      (oas-summary): Delete user
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      (oas-tags):
        - user
    put:
      displayName: updateUser
      description: This can only be done by the logged in user.
      (oas-summary): Updated user
      body:
        application/json:
          type: User
          (oas-body-name): body
          description: Updated user object
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      (oas-tags):
        - user
    get:
      displayName: getUserByName
      (oas-summary): Get user by user name
      responses:
        '200':
          body:
            application/json:
              type: User
          description: successful operation
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      (oas-tags):
        - user
  post:
    displayName: createUser
    description: This can only be done by the logged in user.
    (oas-summary): Create user
    body:
      application/json:
        type: User
        (oas-body-name): body
        description: Created user object
    (oas-responses-default):
      description: successful operation
    (oas-tags):
      - user
  /createWithArray:
    displayName: createWithArray
    post:
      displayName: createUsersWithArrayInput
      (oas-summary): Creates list of users with given input array
      body:
        application/json:
          type: array
          items:
            type: User
          (oas-body-name): body
          description: List of user object
      (oas-responses-default):
        description: successful operation
      (oas-tags):
        - user
  /createWithList:
    displayName: createWithList
    post:
      displayName: createUsersWithListInput
      (oas-summary): Creates list of users with given input array
      body:
        application/json:
          type: array
          items:
            type: User
          (oas-body-name): body
          description: List of user object
      (oas-responses-default):
        description: successful operation
      (oas-tags):
        - user
  /logout:
    displayName: logout
    get:
      displayName: logoutUser
      (oas-summary): Logs out current logged in user session
      (oas-responses-default):
        description: successful operation
      (oas-tags):
        - user
  /login:
    displayName: login
    get:
      displayName: loginUser
      (oas-summary): Logs user into the system
      responses:
        '200':
          body:
            application/json:
              type: string
          description: successful operation
          headers:
            X-Rate-Limit:
              type: integer
              description: calls per hour allowed by the user
              format: int32
            X-Expires-After:
              type: datetime
              description: date in UTC when token expires
              format: rfc3339
        '400':
          description: Invalid username/password supplied
      queryParameters:
        username:
          description: The user name for login
          required: true
          type: string
        password:
          description: The password for login in clear text
          required: true
          type: string
          (oas-allowEmptyValue): true
          (oas-exclusiveMaximum): true
          (oas-exclusiveMinimum): false
      (oas-tags):
        - user
/pet:
  displayName: pet
  post:
    (oas-x-extension8): value8
    displayName: addPet
    (oas-summary): Add a new pet to the store
    protocols:
      - HTTPS
    body:
      application/json:
        type: Pet
        (oas-body-name): body
        description: Pet object that needs to be added to the store
    responses:
      '405':
        description: Invalid input
    securedBy:
      - petstore_auth:
          scopes:
            - 'write:pets'
            - 'read:pets'
    (oas-tags):
      - pet
  /findByStatus:
    displayName: findByStatus
    get:
      displayName: findPetsByStatus
      description: Multiple status values can be provided with comma separated strings
      (oas-summary): Finds Pets by status
      responses:
        '200':
          body:
            application/json:
              type: array
              items:
                type: Pet
          description: successful operation
        '400':
          description: Invalid status value
      queryParameters:
        status:
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          (oas-collectionFormat): multi
      securedBy:
        - petstore_auth:
            scopes:
              - 'write:pets'
              - 'read:pets'
      (oas-tags):
        - pet
  '/{petId}':
    displayName: '{petId}'
    uriParameters:
      petId:
        description: ID of pet that needs to be updated
        required: true
        type: integer
        format: int64
    get:
      displayName: getPetById
      description: Returns a single pet
      (oas-summary): Find pet by ID
      responses:
        '200':
          body:
            application/json:
              type: Pet
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      securedBy:
        - api_key
      (oas-tags):
        - pet
    delete:
      displayName: deletePet
      (oas-summary): Deletes a pet
      headers:
        api_key:
          type: string
          required: false
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      securedBy:
        - petstore_auth:
            scopes:
              - 'write:pets'
              - 'read:pets'
      (oas-tags):
        - pet
    /uploadImage:
      displayName: uploadImage
      post:
        displayName: uploadFile
        (oas-summary): uploads an image
        body:
          multipart/form-data:
            properties:
              additionalMetadata:
                description: Additional data to pass to server
                required: false
                type: string
              file:
                description: file to upload
                required: false
                type: file
        responses:
          '200':
            body:
              application/json:
                type: ApiResponse
            description: successful operation
        securedBy:
          - petstore_auth:
              scopes:
                - 'write:pets'
                - 'read:pets'
        (oas-tags):
          - pet
    post:
      displayName: updatePetWithForm
      (oas-summary): Updates a pet in the store with form data
      body:
        multipart/form-data:
          properties:
            name:
              description: Updated name of the pet
              required: false
              type: string
            status:
              description: Updated status of the pet
              required: false
              type: string
              (oas-allowEmptyValue): true
              (oas-exclusiveMaximum): true
              (oas-exclusiveMinimum): false
      responses:
        '405':
          description: Invalid input
      securedBy:
        - petstore_auth:
            scopes:
              - 'write:pets'
              - 'read:pets'
      (oas-tags):
        - pet
  /findByTags:
    displayName: findByTags
    get:
      displayName: findPetsByTags
      description: 'Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      (oas-summary): Finds Pets by tags
      responses:
        '200':
          body:
            application/json:
              type: array
              items:
                type: Pet
          description: successful operation
        '400':
          description: Invalid tag value
      queryParameters:
        tags:
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          (oas-collectionFormat): multi
      securedBy:
        - petstore_auth:
            scopes:
              - 'write:pets'
              - 'read:pets'
      (oas-tags):
        - pet
      (oas-deprecated): true
  put:
    displayName: updatePet
    (oas-summary): Update an existing pet
    body:
      application/json:
        type: Pet
        (oas-body-name): body
        description: Pet object that needs to be added to the store
    responses:
      '400':
        description: Invalid ID supplied
      '404':
        description: Pet not found
      '405':
        description: Validation exception
    securedBy:
      - petstore_auth:
          scopes:
            - 'write:pets'
            - 'read:pets'
    (oas-tags):
      - pet
types:
  Order:
    properties:
      id:
        type: integer
        format: int64
        required: false
      petId:
        type: integer
        format: int64
        required: false
      quantity:
        type: integer
        format: int32
        required: false
      shipDate:
        type: datetime
        format: rfc3339
        required: false
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
        required: false
      complete:
        type: boolean
        default: false
        required: false
    xml:
      name: Order
  Category:
    properties:
      id:
        type: integer
        format: int64
        required: false
      name:
        type: string
        required: false
    xml:
      name: Category
  User:
    properties:
      id:
        type: integer
        format: int64
        required: false
      username:
        type: string
        required: false
      firstName:
        type: string
        required: false
      lastName:
        type: string
        required: false
      email:
        type: string
        required: false
      password:
        type: string
        required: false
      phone:
        type: string
        required: false
      userStatus:
        type: integer
        format: int32
        description: User Status
        required: false
    xml:
      name: User
  Tag:
    properties:
      id:
        type: integer
        format: int64
        required: false
      name:
        type: string
        required: false
    xml:
      name: Tag
  ApiResponse:
    properties:
      code:
        type: integer
        format: int32
        required: false
      type:
        type: string
        required: false
      message:
        type: string
        required: false
  Pet:
    properties:
      id:
        type: integer
        format: int64
        required: false
      category:
        type: Category
        required: false
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          type: Tag
        required: false
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
        required: false
    xml:
      name: Pet
(oas-x-extension1): value1